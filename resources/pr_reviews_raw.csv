pr_number,id,author,state,body,createdAt
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg5OTc4OTc2,znck,COMMENTED,,2019-09-18T14:48:24Z
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg5OTc5NDAx,znck,COMMENTED,,2019-09-18T14:48:53Z
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwMDUwODYz,yyx990803,COMMENTED,,2019-09-18T16:32:56Z
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwMDUxMjk4,yyx990803,COMMENTED,,2019-09-18T16:33:42Z
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwMDUxNjU4,yyx990803,CHANGES_REQUESTED,,2019-09-18T16:34:20Z
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwMDUzMjY1,yyx990803,CHANGES_REQUESTED,,2019-09-18T16:37:20Z
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwMDc2NTc4,yyx990803,CHANGES_REQUESTED,,2019-09-18T17:19:17Z
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwMTA3NTM4,znck,COMMENTED,,2019-09-18T18:11:59Z
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwMTU5NjYz,znck,COMMENTED,,2019-09-18T19:47:40Z
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwMTYwOTI2,znck,COMMENTED,,2019-09-18T19:50:09Z
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwNjEzNTcz,yyx990803,CHANGES_REQUESTED,,2019-09-19T14:33:11Z
65,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwNzIyODg2,yyx990803,APPROVED,,2019-09-19T17:23:40Z
69,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk0MDAzMjM5,znck,COMMENTED,,2019-09-26T21:05:08Z
69,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk0MDA0MjUw,znck,COMMENTED,,2019-09-26T21:07:06Z
69,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk0MDA1Mzkx,znck,COMMENTED,,2019-09-26T21:09:25Z
69,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk0MDA2MTQz,znck,COMMENTED,,2019-09-26T21:10:55Z
75,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk1MTYzNDM4,haoqunjiang,COMMENTED,,2019-09-30T18:22:09Z
75,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk1Mzk1MjQx,haoqunjiang,COMMENTED,,2019-10-01T06:46:25Z
75,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk1NzM5NTc3,yyx990803,COMMENTED,,2019-10-01T16:40:13Z
75,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE3NTIwMjc0,haoqunjiang,COMMENTED,,2019-11-15T10:10:16Z
77,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0OTIzMDEw,ducan-ne,APPROVED,"cool, but seem not pass the tests",2019-12-01T06:57:37Z
81,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzgzNDQw,znck,COMMENTED,I think we should provide some context where the property is assigned. The filename and source location can help mitigate this situation easily.,2019-10-05T09:14:03Z
82,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzgxNjM2,znck,COMMENTED,We might wanna provide information about source/originator of warning.  ,2019-10-05T08:16:23Z
82,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzkzODE4,yyx990803,CHANGES_REQUESTED,"Thanks for the PR - however, these warnings were listed as todo because we need more descriptive messages (consult other existing warning messages) and also include details about the runtime values (if applicable). E.g. the warning about attempt of mutating a prop should point out which prop is being mutated.",2019-10-05T14:29:20Z
82,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4MTc1NjEw,yyx990803,COMMENTED,,2019-10-07T14:35:45Z
82,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4MTg0MDQ2,TimvdEijnden,COMMENTED,,2019-10-07T14:46:54Z
82,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4MTg3NTkx,yyx990803,COMMENTED,,2019-10-07T14:51:25Z
82,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4MTg4MjQx,yyx990803,CHANGES_REQUESTED,,2019-10-07T14:52:13Z
82,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4OTc2MDIx,yyx990803,CHANGES_REQUESTED,,2019-10-08T18:51:58Z
82,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5MjQyMzYz,TimvdEijnden,COMMENTED,,2019-10-09T08:22:07Z
82,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NTM4NjEw,yyx990803,CHANGES_REQUESTED,,2019-10-09T16:24:51Z
82,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NTcyMDIy,TimvdEijnden,COMMENTED,,2019-10-09T17:22:43Z
82,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NTcyMDU5,TimvdEijnden,COMMENTED,,2019-10-09T17:22:48Z
83,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzM2OTA1,rigor789,APPROVED,,2019-10-04T22:01:55Z
84,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzgxNjYz,znck,APPROVED,,2019-10-05T08:17:13Z
85,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzY0Nzgx,NikitaIT,COMMENTED,,2019-10-05T00:33:48Z
85,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzg1MTcy,znck,COMMENTED,,2019-10-05T10:06:21Z
85,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzg1MTk1,znck,COMMENTED,,2019-10-05T10:06:50Z
85,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzg1MjUy,znck,CHANGES_REQUESTED,Please remove changes in `.spec.ts` file.,2019-10-05T10:08:26Z
87,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzczNTE4,thecrypticace,COMMENTED,,2019-10-05T03:45:20Z
87,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzgxMjk4,znck,CHANGES_REQUESTED,Let’s create a spec file for every source file. And import from the source file (if from same package) relative path. ,2019-10-05T08:05:07Z
87,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzkzNTE0,yyx990803,CHANGES_REQUESTED,Let's nest tests for runtime helpers in a directory to match the structure of the source code.,2019-10-05T14:21:46Z
87,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODA1NjY4,znck,CHANGES_REQUESTED,"Tests look good. 

Some suggestions on making test messages clear and concise. ",2019-10-05T19:33:37Z
87,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODA5NDUw,znck,APPROVED,,2019-10-05T21:33:02Z
88,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzgwOTMx,znck,APPROVED,,2019-10-05T07:54:25Z
88,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzgzNDk5,znck,APPROVED,,2019-10-05T09:15:49Z
89,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzc3MTc0,thecrypticace,COMMENTED,,2019-10-05T05:57:06Z
89,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzc3Mjc4,thecrypticace,COMMENTED,,2019-10-05T06:00:12Z
89,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzc4NDAx,thecrypticace,COMMENTED,,2019-10-05T06:34:24Z
89,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzkzNjkx,yyx990803,COMMENTED,,2019-10-05T14:25:54Z
89,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzk1OTE2,thecrypticace,COMMENTED,,2019-10-05T15:24:22Z
89,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4MTczNjIx,yyx990803,CHANGES_REQUESTED,,2019-10-07T14:33:12Z
89,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4MTg5NzU1,thecrypticace,COMMENTED,,2019-10-07T14:54:09Z
91,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzgwNzQ3,znck,APPROVED,,2019-10-05T07:49:24Z
92,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzgwNzMw,znck,APPROVED,,2019-10-05T07:49:00Z
94,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzgxNDcz,znck,APPROVED,,2019-10-05T08:10:55Z
95,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzgxMzc4,znck,APPROVED,,2019-10-05T08:07:41Z
98,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzg1MDI2,znck,COMMENTED,,2019-10-05T10:02:34Z
98,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzkxMjY1,jesusantguerrero,COMMENTED,,2019-10-05T13:18:38Z
98,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODMzMDI1,jesusantguerrero,COMMENTED,,2019-10-06T11:27:51Z
98,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODQ4MzU2,znck,COMMENTED,,2019-10-06T16:43:10Z
99,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzg1MDc2,znck,CHANGES_REQUESTED,,2019-10-05T10:03:48Z
99,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzg1NjAz,himself65,COMMENTED,,2019-10-05T10:17:47Z
99,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzk0MzUy,yyx990803,CHANGES_REQUESTED,,2019-10-05T14:43:04Z
100,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzk0NTMx,yyx990803,CHANGES_REQUESTED,,2019-10-05T14:48:12Z
101,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzg1MzY1,znck,APPROVED,,2019-10-05T10:11:10Z
105,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzkyODY1,yyx990803,CHANGES_REQUESTED,,2019-10-05T14:04:15Z
105,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3NzkzMDgw,yyx990803,APPROVED,,2019-10-05T14:10:27Z
111,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODA2MDYz,yyx990803,COMMENTED,,2019-10-05T19:43:36Z
111,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODA2MDgw,yyx990803,COMMENTED,,2019-10-05T19:44:10Z
113,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODA1NDM3,himself65,APPROVED,,2019-10-05T19:27:17Z
114,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODA0MDM0,CyberAP,COMMENTED,,2019-10-05T18:47:34Z
114,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODA0MzE1,himself65,COMMENTED,,2019-10-05T18:55:01Z
114,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODA0NTY2,CyberAP,COMMENTED,,2019-10-05T19:02:48Z
116,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODA2Nzcz,znck,CHANGES_REQUESTED,,2019-10-05T20:06:40Z
116,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIwNjg2,TimvdEijnden,COMMENTED,,2019-10-06T06:02:48Z
116,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIwNjg5,TimvdEijnden,COMMENTED,,2019-10-06T06:02:54Z
116,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4MjIzODYy,yyx990803,CHANGES_REQUESTED,,2019-10-07T15:39:58Z
119,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODA5OTg3,znck,COMMENTED,,2019-10-05T21:50:32Z
119,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODEwMDIx,kyle-hall,COMMENTED,,2019-10-05T21:51:32Z
119,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODEwMTEw,znck,COMMENTED,,2019-10-05T21:54:21Z
119,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODExMDYz,kyle-hall,COMMENTED,,2019-10-05T22:29:24Z
119,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODU0NDU2,znck,APPROVED,,2019-10-06T18:57:50Z
122,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIxMTYw,znck,APPROVED,,2019-10-06T06:21:31Z
123,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIxMjAz,znck,APPROVED,,2019-10-06T06:22:49Z
124,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIxMzEx,dsseng,COMMENTED,,2019-10-06T06:26:44Z
124,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIxNzA0,znck,CHANGES_REQUESTED,,2019-10-06T06:39:22Z
124,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIxNzYy,znck,APPROVED,,2019-10-06T06:41:34Z
124,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIxOTc1,znck,COMMENTED,,2019-10-06T06:48:38Z
124,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIyMDI3,pikax,COMMENTED,,2019-10-06T06:50:43Z
124,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIyMjE4,znck,COMMENTED,,2019-10-06T06:56:51Z
124,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIyMjIz,znck,COMMENTED,,2019-10-06T06:57:05Z
124,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIyMzgz,pikax,COMMENTED,,2019-10-06T07:01:52Z
125,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIxMjE5,dsseng,COMMENTED,,2019-10-06T06:23:19Z
125,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIyMDI1,znck,COMMENTED,,2019-10-06T06:50:36Z
125,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIyMTAz,dsseng,COMMENTED,,2019-10-06T06:53:13Z
125,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODMxMjgw,pikax,COMMENTED,,2019-10-06T10:51:29Z
125,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODMxMjg5,pikax,APPROVED,,2019-10-06T10:51:41Z
125,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODQ1ODY3,yyx990803,COMMENTED,,2019-10-06T15:50:12Z
125,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3OTI2ODc0,dsseng,COMMENTED,,2019-10-07T06:48:22Z
126,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODIwODc4,dsseng,APPROVED,,2019-10-06T06:10:16Z
129,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODMxNDQ3,znck,APPROVED,,2019-10-06T10:55:19Z
130,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODQ5OTg5,znck,CHANGES_REQUESTED,,2019-10-06T17:20:05Z
132,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODU1MjYy,znck,CHANGES_REQUESTED,Some of my comments on #130 apply here too.,2019-10-06T19:14:39Z
132,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODY5OTE0,yyx990803,CHANGES_REQUESTED,,2019-10-07T00:17:45Z
133,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5MDkzOTM2,ZhangJian-3ti,COMMENTED,,2019-10-08T22:55:44Z
134,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODMxODAw,znck,APPROVED,,2019-10-06T11:03:04Z
136,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODQ0OTAw,yyx990803,APPROVED,,2019-10-06T15:29:55Z
136,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODQ0OTQw,yyx990803,CHANGES_REQUESTED,The literal is intentional to avoid the overhead of the spread. We should keep it.,2019-10-06T15:30:51Z
136,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODQ1NTY2,himself65,COMMENTED,,2019-10-06T15:43:29Z
136,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODQ1OTc1,yyx990803,CHANGES_REQUESTED,,2019-10-06T15:52:25Z
137,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODQ0NDA5,yyx990803,CHANGES_REQUESTED,,2019-10-06T15:19:23Z
137,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODYzNzY4,kana-sama,COMMENTED,,2019-10-06T22:10:52Z
137,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODY0MzI4,kana-sama,COMMENTED,,2019-10-06T22:24:04Z
139,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODU1NTgx,znck,COMMENTED,,2019-10-06T19:20:58Z
139,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODk3NTMz,CodeDaraW,COMMENTED,,2019-10-07T04:12:46Z
139,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4NzIxODI0,znck,CHANGES_REQUESTED,I feel the `element.ts` should be better kept in runtime-dom.,2019-10-08T12:23:29Z
139,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NjA3NjQx,yyx990803,CHANGES_REQUESTED,,2019-10-09T18:23:17Z
139,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMDMzMTYx,CodeDaraW,COMMENTED,,2019-10-10T12:39:10Z
139,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMDMzMzM2,CodeDaraW,COMMENTED,,2019-10-10T12:39:27Z
139,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMDMzNjgx,CodeDaraW,COMMENTED,,2019-10-10T12:40:02Z
139,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMDM4NjM5,CodeDaraW,COMMENTED,,2019-10-10T12:48:11Z
139,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMDM4NzIy,CodeDaraW,COMMENTED,,2019-10-10T12:48:20Z
139,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMTgwOTYw,CodeDaraW,COMMENTED,,2019-10-10T15:59:45Z
139,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMTg0MDY2,yyx990803,COMMENTED,,2019-10-10T16:04:33Z
140,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODU0MDkx,znck,APPROVED,,2019-10-06T18:49:24Z
141,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4OTcxNzY0,yyx990803,CHANGES_REQUESTED,,2019-10-08T18:44:38Z
142,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3ODY5Mzc1,yyx990803,CHANGES_REQUESTED,,2019-10-07T00:08:20Z
146,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5Nzg5MTk0,yyx990803,CHANGES_REQUESTED,,2019-10-10T02:21:50Z
146,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMDM2ODUx,pikax,COMMENTED,,2019-10-10T12:45:18Z
146,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMTE2MTgy,yyx990803,COMMENTED,,2019-10-10T14:33:33Z
148,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4NTA2Mzkw,znck,CHANGES_REQUESTED,Let’s implement this as directive/node transform. ,2019-10-08T02:35:07Z
149,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4MzYzNzY2,sqal,COMMENTED,,2019-10-07T19:39:30Z
149,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4NDA0Nzk1,CyberAP,COMMENTED,,2019-10-07T20:54:30Z
149,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4NDI0OTk5,yyx990803,COMMENTED,,2019-10-07T21:34:28Z
149,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4NDMxMjQx,CyberAP,COMMENTED,,2019-10-07T21:48:31Z
149,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5MDYxMTE3,CyberAP,COMMENTED,,2019-10-08T21:28:36Z
149,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NDU4MDQy,yyx990803,COMMENTED,,2019-10-09T14:32:29Z
149,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NDYyMTMx,yyx990803,CHANGES_REQUESTED,,2019-10-09T14:37:38Z
149,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NDc2MTgx,CyberAP,COMMENTED,,2019-10-09T14:55:54Z
149,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NDc4NTMz,CyberAP,COMMENTED,,2019-10-09T14:58:47Z
149,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NTQ3NjIy,yyx990803,CHANGES_REQUESTED,I think the implementation looks good now. Would you be interested in adding tests for this module? I think we can directly test the `patchEvent` function (`instance` can just be null since it's only used for error handling and that will be tested in error handling integration tests),2019-10-09T16:39:59Z
149,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NTYwNDAy,CyberAP,COMMENTED,,2019-10-09T17:02:25Z
150,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4NzQ1NTA5,pierrick-martin-dev,APPROVED,,2019-10-08T13:04:05Z
150,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4ODc3ODc0,yyx990803,CHANGES_REQUESTED,,2019-10-08T16:04:52Z
150,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5MTQ3MTk2,himself65,APPROVED,,2019-10-09T02:55:09Z
153,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4NTY2OTIy,Justineo,COMMENTED,,2019-10-08T07:08:28Z
155,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4NzA3ODE3,znck,APPROVED,,2019-10-08T11:54:04Z
155,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4NzI2MjMz,yyx990803,CHANGES_REQUESTED,,2019-10-08T12:31:55Z
156,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4NzA3MTIy,znck,APPROVED,,2019-10-08T11:52:30Z
159,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk4NzA2Njgy,znck,APPROVED,,2019-10-08T11:51:29Z
167,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NTQwMTE5,yyx990803,COMMENTED,,2019-10-09T16:27:22Z
167,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NTQwMjQ3,yyx990803,COMMENTED,,2019-10-09T16:27:35Z
173,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5MzMxNzg0,Justineo,COMMENTED,,2019-10-09T11:05:53Z
173,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5MzM0MzY4,hua1995116,COMMENTED,,2019-10-09T11:11:43Z
173,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5MzQ1NDkz,Justineo,APPROVED,,2019-10-09T11:36:15Z
174,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NTQxNzQy,yyx990803,CHANGES_REQUESTED,,2019-10-09T16:29:51Z
174,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5Nzg3MDc3,yyx990803,COMMENTED,,2019-10-10T02:11:37Z
174,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5Nzg3MTMz,yyx990803,COMMENTED,,2019-10-10T02:11:56Z
174,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5Nzg3Njcw,yyx990803,CHANGES_REQUESTED,"- Let's rename `ctx` to `instance` and give it proper typing.
- Keep the assignment of `renderProxy` consistent, we should assign it from `this` in all tests.",2019-10-10T02:14:25Z
175,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5MzgyNzc2,laquasicinque,COMMENTED,,2019-10-09T12:46:59Z
175,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5Mzg1NTM0,PxyUp,COMMENTED,,2019-10-09T12:51:24Z
175,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NDE1MTM0,laquasicinque,COMMENTED,,2019-10-09T13:36:00Z
175,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NDM1ODQ4,PxyUp,COMMENTED,,2019-10-09T14:04:03Z
177,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5NTUyNDg3,yyx990803,CHANGES_REQUESTED,,2019-10-09T16:48:37Z
179,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5ODQ2MzMy,himself65,COMMENTED,"I think It would be nice if like this 

```ts
  it('lazy', () => {
    const obj = reactive({ foo: 1 })
    let dummy
    const runner = effect(() => (dummy = obj.foo), { lazy: true })
    expect(dummy).toBe(undefined)

    expect(runner()).toBe(1)
    expect(dummy).toBe(1)
    obj.foo = 2
    expect(dummy).toBe(2)
  })
```",2019-10-10T06:39:43Z
180,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5ODU1NTA4,himself65,CHANGES_REQUESTED,,2019-10-10T07:04:42Z
180,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5ODU3NjQ5,wuomzfx,COMMENTED,,2019-10-10T07:10:06Z
180,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMDk3MzIz,yyx990803,CHANGES_REQUESTED,,2019-10-10T14:10:07Z
180,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMTU5NzE3,wuomzfx,COMMENTED,,2019-10-10T15:30:15Z
187,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMTA5MTA4,yyx990803,CHANGES_REQUESTED,,2019-10-10T14:24:46Z
187,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMTExODYy,xanf,COMMENTED,,2019-10-10T14:28:09Z
187,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMTE5OTE1,xanf,COMMENTED,,2019-10-10T14:38:29Z
189,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMjQ2ODQ2,yyx990803,CHANGES_REQUESTED,,2019-10-10T17:53:19Z
193,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwMjY0Mjk0,dsseng,APPROVED,,2019-10-10T18:22:28Z
199,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwNzA5MzYw,yyx990803,COMMENTED,,2019-10-11T14:06:57Z
200,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwNzA2NTkw,yyx990803,COMMENTED,,2019-10-11T14:02:41Z
203,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwNzQyODA4,yyx990803,CHANGES_REQUESTED,,2019-10-11T14:56:21Z
203,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTc4NTM3,TerenceZ,COMMENTED,,2019-10-12T01:45:39Z
203,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTc5ODM2,yyx990803,COMMENTED,,2019-10-12T02:11:52Z
203,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTgxNzQz,TerenceZ,COMMENTED,,2019-10-12T02:56:10Z
203,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTgyODMy,yyx990803,COMMENTED,,2019-10-12T03:23:18Z
203,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTg0MTM0,Justineo,COMMENTED,,2019-10-12T03:56:15Z
203,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNDIzOTA1,fisker,COMMENTED,,2019-10-14T16:49:04Z
204,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwNTg0MTYz,pikax,COMMENTED,can you update the snapshots?,2019-10-11T09:57:27Z
205,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwNzQ0OTQ4,yyx990803,CHANGES_REQUESTED,,2019-10-11T14:59:33Z
206,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzMzMTczNzU4,cuongdevjs,APPROVED,,2019-12-17T10:31:10Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwODA3Njg2,CyberAP,COMMENTED,,2019-10-11T16:52:15Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTgwMDk5,yyx990803,CHANGES_REQUESTED,,2019-10-12T02:17:50Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTgwOTAx,fnlctrl,COMMENTED,,2019-10-12T02:35:39Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTgwNjg5,yyx990803,CHANGES_REQUESTED,,2019-10-12T02:30:17Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDM3NDEy,fnlctrl,COMMENTED,,2019-10-13T07:56:02Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDQyMjA5,ayush987goyal,COMMENTED,,2019-10-13T10:16:46Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDQyMjEy,ayush987goyal,COMMENTED,,2019-10-13T10:16:50Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDQ4ODQ2,fnlctrl,COMMENTED,,2019-10-13T13:32:08Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDQ4OTIz,fnlctrl,COMMENTED,,2019-10-13T13:34:23Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDQ4OTMz,ayush987goyal,COMMENTED,,2019-10-13T13:34:48Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDQ5MDQ1,ayush987goyal,COMMENTED,,2019-10-13T13:38:15Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDQ5MzMx,ayush987goyal,COMMENTED,,2019-10-13T13:47:00Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDQ5NDY0,ayush987goyal,COMMENTED,,2019-10-13T13:51:09Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDUwODA3,fnlctrl,COMMENTED,,2019-10-13T14:31:18Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDUxMDkw,fnlctrl,COMMENTED,,2019-10-13T14:39:24Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDU3NzY1,ZhangJian-3ti,CHANGES_REQUESTED,a typo,2019-10-13T17:27:21Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDgzODE0,yyx990803,COMMENTED,,2019-10-14T01:49:27Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDg0NDU4,yyx990803,CHANGES_REQUESTED,,2019-10-14T01:57:04Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDkzNDIx,fnlctrl,COMMENTED,,2019-10-14T03:22:04Z
213,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDk0Mzg3,yyx990803,COMMENTED,,2019-10-14T03:30:23Z
214,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwNzk5NzI2,starkovsky,COMMENTED,,2019-10-11T16:35:38Z
214,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwODAwMzg2,dsseng,COMMENTED,,2019-10-11T16:37:02Z
214,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwODA5NjQ0,starkovsky,COMMENTED,,2019-10-11T16:56:08Z
214,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwODA5OTMy,dsseng,COMMENTED,,2019-10-11T16:56:40Z
214,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA4MjMx,yyx990803,CHANGES_REQUESTED,,2019-10-12T14:40:55Z
214,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA4Nzc2,dsseng,COMMENTED,,2019-10-12T14:53:06Z
217,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDk0Mjg1,yyx990803,CHANGES_REQUESTED,"I think we need two separate config options:

- `isNativeTag`: this is internal/readonly, used to check platform native elements (this will be using the big list of HTML/SVG elements in `element.ts`)
- `isCustomElement`: this is user-facing, used to declare additional elements to be treated as native. (this will be `NO` by default)

### How do we inject default `isNativeTag`?

In `runtime-dom`, we can wrap `createApp` and define `isNativeTag` on the app config (with `writable: false`) before returning it to the user. Note: only do this in `__DEV__`. In prod it will never be used so just skip the wrapping altogether.

### Compiler handling for `isCustomElement`

The compiler needs to be aware of this option so that it doesn't compile custom elements into component calls. To handle this we need to:

1. Add this option to the parser;
2. Pass `instance.appContext.config.isCustomElement` to the `compile` call [here](https://github.com/vuejs/vue-next/blob/master/packages/runtime-core/src/component.ts#L325). This is for the in-browser compilation build only. (For pre-compilation the user will have to pass this to the compiler via `vue-loader` options.)",2019-10-14T03:29:34Z
217,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMzc2Nzk5,CodeDaraW,COMMENTED,,2019-10-14T15:21:24Z
217,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNDEyMDY0,CodeDaraW,COMMENTED,,2019-10-14T16:24:26Z
217,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNDE4NDQ4,CodeDaraW,COMMENTED,,2019-10-14T16:37:39Z
218,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTgyNjE3,yyx990803,CHANGES_REQUESTED,,2019-10-12T03:17:58Z
218,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTgyOTEz,yyx990803,CHANGES_REQUESTED,,2019-10-12T03:25:10Z
220,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA1NDUz,yyx990803,CHANGES_REQUESTED,,2019-10-12T13:30:02Z
221,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTkzNDAx,pikax,COMMENTED,,2019-10-12T08:09:15Z
221,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTk0NDY5,cong-min,COMMENTED,,2019-10-12T08:38:31Z
225,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTk1OTg3,pikax,COMMENTED,,2019-10-12T09:16:06Z
225,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTk2MjUy,a631807682,COMMENTED,,2019-10-12T09:21:21Z
225,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA4NjE4,yyx990803,CHANGES_REQUESTED,,2019-10-12T14:49:41Z
226,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTk5MDAx,znck,APPROVED,,2019-10-12T10:27:46Z
228,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAwOTk4NTkz,dsseng,APPROVED,clever solution!,2019-10-12T10:18:23Z
232,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDAxMDMx,znck,APPROVED,,2019-10-12T11:22:16Z
233,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDAxMDA3,znck,APPROVED,,2019-10-12T11:21:47Z
234,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDAwOTUz,znck,COMMENTED,,2019-10-12T11:20:12Z
234,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA0MDQx,runofthemillgeek,COMMENTED,,2019-10-12T12:50:24Z
234,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA1NDcx,znck,APPROVED,,2019-10-12T13:30:22Z
236,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDAwOTY5,znck,APPROVED,,2019-10-12T11:20:51Z
237,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDAxMDc3,znck,APPROVED,,2019-10-12T11:23:31Z
238,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA5Mjc1,yyx990803,CHANGES_REQUESTED,,2019-10-12T15:03:41Z
240,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA5NDMy,yyx990803,CHANGES_REQUESTED,,2019-10-12T15:07:12Z
240,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA5NzMx,dsseng,COMMENTED,,2019-10-12T15:14:55Z
240,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDI2NTAy,yyx990803,CHANGES_REQUESTED,,2019-10-12T23:46:42Z
240,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDMzMzk3,dsseng,COMMENTED,,2019-10-13T05:25:02Z
240,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDMzODI5,dsseng,COMMENTED,,2019-10-13T05:41:51Z
241,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA1MjQ3,pikax,COMMENTED,,2019-10-12T13:24:09Z
241,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA2Njc0,fisker,COMMENTED,,2019-10-12T14:01:09Z
241,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA3Mjcx,pikax,COMMENTED,,2019-10-12T14:15:11Z
241,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDA3Njcw,fisker,COMMENTED,,2019-10-12T14:26:55Z
241,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDE3NDYw,Justineo,CHANGES_REQUESTED,"Readability isn't the only thing that matters. In framework/library code, performance should be a key factor.",2019-10-12T18:31:44Z
242,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDE2MzM5,Justineo,CHANGES_REQUESTED,,2019-10-12T18:04:19Z
243,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDM0NzE5,fisker,COMMENTED,,2019-10-13T06:22:42Z
243,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDkyMTg0,yyx990803,COMMENTED,,2019-10-14T03:11:17Z
246,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDI2ODc1,yyx990803,CHANGES_REQUESTED,,2019-10-13T00:03:43Z
246,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDMxNTU1,fisker,COMMENTED,,2019-10-13T03:57:09Z
246,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDMxNTYw,fisker,COMMENTED,,2019-10-13T03:57:15Z
246,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDMxNjYx,jacekkarczmarczyk,COMMENTED,,2019-10-13T04:01:27Z
246,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDMxNzU5,fisker,COMMENTED,,2019-10-13T04:07:08Z
246,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDMyMDA1,jacekkarczmarczyk,COMMENTED,,2019-10-13T04:20:14Z
246,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDMyMDg1,fisker,COMMENTED,,2019-10-13T04:23:28Z
246,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDMyMjg0,jacekkarczmarczyk,COMMENTED,,2019-10-13T04:32:26Z
246,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDMyMzU2,fisker,COMMENTED,,2019-10-13T04:36:16Z
246,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDM0NTI1,fisker,COMMENTED,,2019-10-13T06:14:50Z
247,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDE2NzAx,Justineo,CHANGES_REQUESTED,,2019-10-12T18:13:01Z
252,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDI2Nzkx,yyx990803,CHANGES_REQUESTED,,2019-10-12T23:59:42Z
252,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDM0MjI3,dsseng,COMMENTED,,2019-10-13T06:01:02Z
252,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDM0MjQ1,dsseng,COMMENTED,,2019-10-13T06:02:27Z
252,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDg5NTEw,yyx990803,CHANGES_REQUESTED,,2019-10-14T02:47:40Z
252,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNDQ1MjMw,dsseng,COMMENTED,,2019-10-14T17:33:46Z
252,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNDkyMjAx,yyx990803,CHANGES_REQUESTED,,2019-10-14T19:14:31Z
253,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDI2NjMy,yyx990803,CHANGES_REQUESTED,,2019-10-12T23:52:11Z
253,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDMzODAx,dsseng,COMMENTED,,2019-10-13T05:39:52Z
254,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDg4Njg2,yyx990803,CHANGES_REQUESTED,,2019-10-14T02:39:37Z
254,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMzU0MzMx,dsseng,COMMENTED,,2019-10-14T14:46:08Z
254,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNDgxNTU1,yyx990803,CHANGES_REQUESTED,,2019-10-14T18:50:11Z
254,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNDg0ODY1,dsseng,COMMENTED,,2019-10-14T18:57:27Z
255,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNTAyODY4,yyx990803,CHANGES_REQUESTED,,2019-10-14T19:40:54Z
263,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDg1NDkz,cuongdevjs,APPROVED,,2019-10-14T02:08:17Z
265,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMDUyMTEx,dsseng,COMMENTED,,2019-10-13T15:05:19Z
273,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMTI5NTUx,jacekkarczmarczyk,COMMENTED,,2019-10-14T07:07:36Z
273,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxMTMxMzY1,a631807682,COMMENTED,,2019-10-14T07:13:18Z
276,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNTMzMjIx,yyx990803,CHANGES_REQUESTED,,2019-10-14T20:50:19Z
282,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNDk1NDA5,yyx990803,CHANGES_REQUESTED,,2019-10-14T19:22:33Z
282,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNjE0MjI3,ZhangJian-3ti,CHANGES_REQUESTED,,2019-10-15T01:37:50Z
282,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNjMxMzc1,ayush987goyal,COMMENTED,,2019-10-15T03:04:46Z
282,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNjMyODMz,ayush987goyal,COMMENTED,,2019-10-15T03:12:28Z
282,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNjMzNTYy,ayush987goyal,COMMENTED,,2019-10-15T03:15:59Z
282,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNjMzODY4,yyx990803,CHANGES_REQUESTED,,2019-10-15T03:17:34Z
282,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNjM0MDg3,ayush987goyal,COMMENTED,,2019-10-15T03:18:43Z
282,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNjM5Nzcy,ZhangJian-3ti,COMMENTED,,2019-10-15T03:47:53Z
282,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxOTU5MzQ0,CodeDaraW,COMMENTED,,2019-10-15T14:35:53Z
286,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNjQ1MjIy,Justineo,COMMENTED,,2019-10-15T04:17:30Z
286,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNjU0MTI0,yeyan1996,COMMENTED,,2019-10-15T05:03:21Z
286,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxNjY0NjE1,Justineo,COMMENTED,,2019-10-15T05:50:31Z
286,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxOTkzMTI5,yyx990803,COMMENTED,,2019-10-15T15:18:07Z
289,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyMDIxNjEw,yyx990803,CHANGES_REQUESTED,,2019-10-15T15:57:11Z
289,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyMjkwODc5,underfin,COMMENTED,,2019-10-16T02:24:56Z
297,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxOTQyNjk4,CodeDaraW,COMMENTED,,2019-10-15T14:15:25Z
298,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAxOTU2ODU3,fnlctrl,COMMENTED,,2019-10-15T14:32:43Z
308,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyMzMxNzA2,yyx990803,COMMENTED,Sorry but I don't think these changes are necessary.,2019-10-16T05:41:59Z
309,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyMzM0MDg1,yyx990803,CHANGES_REQUESTED,,2019-10-16T05:51:25Z
309,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyMzkzNDY4,xiaoboost,COMMENTED,,2019-10-16T08:15:53Z
309,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNDAyNDU3,pikax,COMMENTED,,2019-10-16T08:31:28Z
309,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNTkwMjMw,xiaoboost,COMMENTED,,2019-10-16T13:50:08Z
310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyMzM2Njc1,yyx990803,CHANGES_REQUESTED,Thanks for the PR. This will have to wait until transition module is fleshed out.,2019-10-16T06:00:43Z
310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNTczNzk3,NikitaIT,COMMENTED,,2019-10-16T13:28:45Z
310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNjIyNzY2,yyx990803,CHANGES_REQUESTED,FYI this PR needs to rebase against master due to 0bac763,2019-10-16T14:30:17Z
310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyOTU5NjIx,underfin,COMMENTED,,2019-10-17T01:20:40Z
310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzNDc5Mjkx,yyx990803,COMMENTED,,2019-10-17T19:03:23Z
310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzNjM4NjE3,underfin,COMMENTED,,2019-10-18T02:35:43Z
312,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNDQ5MDg0,haoqunjiang,APPROVED,,2019-10-16T09:46:06Z
313,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyMzcxODg2,ktsn,COMMENTED,,2019-10-16T07:33:53Z
313,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyMzc0Mzgx,pikax,COMMENTED,,2019-10-16T07:39:02Z
313,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyMzc2MzQ3,ktsn,COMMENTED,,2019-10-16T07:43:02Z
313,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyMzc3NTMx,pikax,COMMENTED,,2019-10-16T07:45:27Z
314,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNjE1Mjk3,yyx990803,CHANGES_REQUESTED,,2019-10-16T14:21:44Z
314,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNjE4NTE5,pikax,COMMENTED,,2019-10-16T14:25:41Z
314,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNjI1MzEz,yyx990803,COMMENTED,,2019-10-16T14:33:11Z
315,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNjE4MjE4,yyx990803,CHANGES_REQUESTED,"Thanks, but this should be tested in `compiler-core` instead.",2019-10-16T14:25:18Z
318,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNTY4Mjkw,pikax,COMMENTED,,2019-10-16T13:21:12Z
318,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNjQ1MTQ0,yyx990803,COMMENTED,,2019-10-16T14:56:49Z
318,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNjUxMjAy,yyx990803,COMMENTED,,2019-10-16T15:04:07Z
318,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNjUzNjI4,yyx990803,COMMENTED,,2019-10-16T15:07:10Z
318,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNzAxNTY0,pikax,COMMENTED,,2019-10-16T16:12:11Z
318,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyODMwNDM2,yyx990803,COMMENTED,,2019-10-16T19:44:20Z
319,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNjMxNTkz,yyx990803,CHANGES_REQUESTED,"This is even faster (and won't require a polyfill when we do IE11 support):

``` js
const newIndextoOldIndexMap = new Array(toBePatched)
for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0
```",2019-10-16T14:40:24Z
320,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAyNzEzNTIz,fnlctrl,COMMENTED,,2019-10-16T16:31:26Z
320,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzNTA1NzU5,yyx990803,CHANGES_REQUESTED,,2019-10-17T19:52:28Z
320,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzOTU3MDgw,fnlctrl,COMMENTED,,2019-10-18T15:10:22Z
320,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzOTkxOTU4,yyx990803,COMMENTED,,2019-10-18T16:08:16Z
320,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzOTk1Njc3,fnlctrl,COMMENTED,,2019-10-18T16:15:28Z
322,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzMDU5NTQ4,ayush987goyal,COMMENTED,,2019-10-17T07:46:24Z
322,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzMDczOTkx,MichaelPan24,COMMENTED,,2019-10-17T08:13:26Z
322,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzMTA0NjQy,pikax,COMMENTED,,2019-10-17T09:03:31Z
322,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzMTE2NTky,MichaelPan24,COMMENTED,,2019-10-17T09:21:57Z
323,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzMzU5ODU2,ayush987goyal,APPROVED,,2019-10-17T15:44:51Z
323,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzNDIyNzc0,dsseng,APPROVED,,2019-10-17T17:28:18Z
325,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzNDE5OTEy,Niputi,COMMENTED,,2019-10-17T17:23:28Z
325,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzNDIyMzQx,dsseng,COMMENTED,,2019-10-17T17:27:35Z
326,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzNTE3OTA5,yyx990803,CHANGES_REQUESTED,,2019-10-17T20:14:18Z
326,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzNjM0Mzky,a631807682,COMMENTED,,2019-10-18T02:14:40Z
326,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzNjY0NDMx,dsseng,COMMENTED,,2019-10-18T04:53:55Z
326,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzOTgyMTM5,yyx990803,CHANGES_REQUESTED,Need a similar check for per-component options here (and tests): https://github.com/vuejs/vue-next/blob/master/packages/runtime-core/src/component.ts#L252,2019-10-18T15:51:08Z
328,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzOTc3Mzk0,yyx990803,CHANGES_REQUESTED,"Now that I think about it, static refs don't need the `NEED_PATCH` flag. We can remove [this](https://github.com/vuejs/vue-next/blob/master/packages/compiler-core/src/transforms/transformElement.ts#L219-L221) which should make this PR much simpler.",2019-10-18T15:43:08Z
329,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzOTc5NTAz,yyx990803,CHANGES_REQUESTED,,2019-10-18T15:46:40Z
329,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MzI2MTY3,jacekkarczmarczyk,COMMENTED,,2019-10-21T04:40:41Z
329,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MzM1NjM4,a631807682,COMMENTED,,2019-10-21T05:36:09Z
329,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0NzM5NTQz,yyx990803,CHANGES_REQUESTED,,2019-10-21T17:51:35Z
329,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0OTM0MjQ5,a631807682,COMMENTED,,2019-10-22T01:47:09Z
329,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0OTM3MTE2,yyx990803,CHANGES_REQUESTED,,2019-10-22T02:06:16Z
330,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzNzU2NDg1,a631807682,COMMENTED,,2019-10-18T09:06:06Z
330,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzODM1NDYw,edison1105,COMMENTED,,2019-10-18T11:46:48Z
330,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzOTcxMzM3,ayush987goyal,COMMENTED,,2019-10-18T15:33:08Z
331,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzODk3MTUz,jo0ger,CHANGES_REQUESTED,,2019-10-18T13:40:56Z
331,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzOTk5NDY4,yyx990803,CHANGES_REQUESTED,Can we add a test case for this?,2019-10-18T16:22:55Z
331,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MDM5MTMy,yyx990803,CHANGES_REQUESTED,,2019-10-18T17:40:32Z
331,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MDQwNDAw,yyx990803,CHANGES_REQUESTED,,2019-10-18T17:43:06Z
331,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MDQxMTY4,himself65,COMMENTED,,2019-10-18T17:44:31Z
331,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MDQxNzQy,yyx990803,COMMENTED,,2019-10-18T17:45:39Z
331,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MDQyMjQ0,himself65,COMMENTED,,2019-10-18T17:46:33Z
331,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MDQ1MjM5,yyx990803,CHANGES_REQUESTED,,2019-10-18T17:52:19Z
332,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzOTc2MjE1,ayush987goyal,APPROVED,,2019-10-18T15:41:11Z
332,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzOTk2OTM3,yyx990803,CHANGES_REQUESTED,,2019-10-18T16:17:58Z
332,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MTkzNTUy,jo0ger,COMMENTED,,2019-10-19T03:31:23Z
332,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MTk2MTcw,jo0ger,COMMENTED,,2019-10-19T04:58:57Z
332,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MTk3NDgw,ayush987goyal,COMMENTED,,2019-10-19T05:46:04Z
332,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MjQwMzQ3,jo0ger,COMMENTED,,2019-10-20T03:34:16Z
332,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MjQzMjQ5,ayush987goyal,COMMENTED,,2019-10-20T05:56:51Z
332,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MjQ2ODIx,jo0ger,COMMENTED,,2019-10-20T08:05:21Z
332,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MjQ3OTE1,ayush987goyal,APPROVED,,2019-10-20T08:36:16Z
343,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MjY1NDY4,NikitaIT,COMMENTED,,2019-10-20T16:03:10Z
343,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MjY2MDgz,dsseng,COMMENTED,,2019-10-20T16:18:45Z
345,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0NjE3MzI3,dsseng,APPROVED,,2019-10-21T14:45:11Z
354,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1MDA1NDY0,edison1105,COMMENTED,,2019-10-22T07:32:37Z
354,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1MDM2NzU1,ayush987goyal,COMMENTED,,2019-10-22T08:33:51Z
354,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1OTQzNjQw,yyx990803,CHANGES_REQUESTED,,2019-10-23T14:37:13Z
354,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA2OTExOTY0,CyberAP,COMMENTED,,2019-10-24T23:10:28Z
355,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1MDIwODc1,a631807682,COMMENTED,"it's already existed

https://github.com/vuejs/vue-next/blob/master/packages/runtime-core/__tests__/vnode.spec.ts#L38-L60
",2019-10-22T08:04:29Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NTkyMDUx,a631807682,COMMENTED,,2019-10-23T01:35:24Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NTkyNTMy,a631807682,COMMENTED,,2019-10-23T01:38:04Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjA4NDAz,ayush987goyal,CHANGES_REQUESTED,,2019-10-23T02:55:14Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjEwMDMw,a631807682,COMMENTED,,2019-10-23T03:02:32Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjExMDc2,a631807682,COMMENTED,"It looks like both value and oldValue is not NaN, maybe `hasNotNaN` is better?",2019-10-23T03:07:40Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjI2OTg4,Mayness,COMMENTED,,2019-10-23T04:29:15Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjMyMjMw,Mayness,COMMENTED,,2019-10-23T04:55:31Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjQzMzM3,a631807682,COMMENTED,,2019-10-23T05:44:18Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjU2MTg0,Mayness,COMMENTED,,2019-10-23T06:26:46Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjU3ODMw,a631807682,COMMENTED,,2019-10-23T06:31:27Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjU4NzU1,Mayness,COMMENTED,,2019-10-23T06:34:15Z
358,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjYwMTk3,a631807682,COMMENTED,,2019-10-23T06:38:30Z
360,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjAzMzk0,yyx990803,CHANGES_REQUESTED,,2019-10-23T02:31:51Z
360,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjEwOTgy,wangtao0101,COMMENTED,,2019-10-23T03:07:05Z
360,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjExNzIw,yyx990803,COMMENTED,,2019-10-23T03:10:52Z
360,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NjEyMzU5,wangtao0101,COMMENTED,,2019-10-23T03:13:56Z
361,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1OTY5OTM4,yyx990803,CHANGES_REQUESTED,"1. Merging #364 caused a conflict, could you please rebase against `master` branch?

2. I think we should extract a function called `hasChanged` instead:

``` js
// compare whether a value has changed, accounting for NaN.
export const hasChanged = (value: any, oldValue: any): boolean =>
  value !== oldValue && (value === value || oldValue === oldValue)
```

3. This function can also be used in watcher [here](https://github.com/vuejs/vue-next/blob/master/packages/runtime-core/src/apiWatch.ts#L147).",2019-10-23T15:09:03Z
367,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA2NjQ5ODk1,yyx990803,CHANGES_REQUESTED,,2019-10-24T15:06:15Z
367,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA2NjczNDk5,wuomzfx,COMMENTED,,2019-10-24T15:37:23Z
373,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3MDYxMDgy,pikax,COMMENTED,,2019-10-25T08:43:40Z
374,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3MDYyMzgz,pikax,CHANGES_REQUESTED,"Fix the number of commits and file changes
Or close and create a new PR rebased against master
",2019-10-25T08:45:58Z
377,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3MjQzMjg1,yyx990803,CHANGES_REQUESTED,,2019-10-25T14:28:55Z
377,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3MjQ3Njk2,Junyan,COMMENTED,I have reverted it.,2019-10-25T14:35:33Z
377,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3MjU4NTQx,Junyan,COMMENTED,"I have reverted it.

https://github.com/vuejs/vue-next/pull/377/commits/26a21d379b6ee03adee5aae34ea9714b27dfd764",2019-10-25T14:51:04Z
379,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0OTIwMDU3,cuongdevjs,APPROVED,,2019-12-01T04:50:19Z
379,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI1MDkzMTg5,ducga1998,APPROVED,,2019-12-02T09:06:08Z
379,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MTM3Mjgx,kyleVsteger,COMMENTED,,2020-04-17T03:26:26Z
382,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3NTI4NTU4,yyx990803,CHANGES_REQUESTED,The todos in this spec is somewhat incomplete because I haven't fully fleshed out what is best tested here. But at the very least we should add a case for element with nested element children.,2019-10-26T14:33:07Z
382,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0ODg3Nzc1,ducan-ne,COMMENTED,,2019-11-30T11:07:31Z
382,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0ODg3ODIz,ducan-ne,COMMENTED,,2019-11-30T11:09:10Z
383,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3NTI4NDAw,yyx990803,CHANGES_REQUESTED,Just `String(key)` is enough (it works for symbols).,2019-10-26T14:29:04Z
384,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3NTI4ODc2,yyx990803,CHANGES_REQUESTED,,2019-10-26T14:41:50Z
384,PRR_kwDOCCum18531vRz,skirtles-code,COMMENTED,,2024-04-19T05:47:15Z
384,PRR_kwDOCCum186FXqgJ,edison1105,COMMENTED,,2024-08-14T09:02:11Z
389,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM2NzIxOTg4,cuongdevjs,APPROVED,,2019-12-27T09:44:07Z
394,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3NTk5OTAw,ZhangJian-3ti,COMMENTED,,2019-10-27T22:52:29Z
394,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3NjA4OTQz,yyx990803,CHANGES_REQUESTED,,2019-10-28T00:58:11Z
394,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3NjA5MDAx,yyx990803,CHANGES_REQUESTED,,2019-10-28T00:58:44Z
395,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3NTg4MjIx,dsseng,APPROVED,,2019-10-27T18:43:23Z
397,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3NjYzODUy,a631807682,COMMENTED,,2019-10-28T06:55:38Z
402,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA3OTU2MDAz,yyx990803,COMMENTED,,2019-10-28T15:53:55Z
402,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA4NjAwNTg3,dsseng,COMMENTED,,2019-10-29T15:21:16Z
402,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA4NjAxNjEz,dsseng,COMMENTED,,2019-10-29T15:22:27Z
402,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA4NjAyNDUz,dsseng,COMMENTED,,2019-10-29T15:23:28Z
402,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA4NjI1MDA3,dsseng,COMMENTED,,2019-10-29T15:50:12Z
402,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM2NzAxMDkw,MarkVasile,COMMENTED,,2019-12-27T08:15:56Z
410,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA4OTUzMTU2,ktsn,COMMENTED,,2019-10-30T03:54:41Z
410,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA4OTY2ODE0,dsseng,COMMENTED,,2019-10-30T05:10:13Z
410,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA5MjcyOTk1,yyx990803,CHANGES_REQUESTED,,2019-10-30T14:59:16Z
410,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA5Mjk1MDM4,dsseng,COMMENTED,,2019-10-30T15:25:10Z
410,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE0NTQwMTA2,cuongdevjs,APPROVED,,2019-11-09T04:19:15Z
412,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA5Mjc0Nzgz,yyx990803,CHANGES_REQUESTED,,2019-10-30T15:01:13Z
413,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA5MTA5NDYw,ayush987goyal,APPROVED,Looks pretty straight typo fix.,2019-10-30T10:50:54Z
414,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA5MjkyODYy,yyx990803,CHANGES_REQUESTED,,2019-10-30T15:22:38Z
414,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0ODg4MDA1,ducan-ne,APPROVED,,2019-11-30T11:15:41Z
420,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA5NzUyMDkw,posva,APPROVED,Thanks!,2019-10-31T09:47:30Z
421,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA5OTUwNzQ0,yyx990803,CHANGES_REQUESTED,,2019-10-31T15:03:54Z
421,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA5OTU0Mjc0,dsseng,COMMENTED,,2019-10-31T15:08:13Z
421,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0ODg3NjMy,ducan-ne,COMMENTED,,2019-11-30T11:01:43Z
421,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0ODg3NzY4,dsseng,COMMENTED,,2019-11-30T11:07:12Z
423,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEwOTM3ODQw,pikax,COMMENTED,,2019-11-04T09:07:06Z
436,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE0Mjc3MDc1,yyx990803,CHANGES_REQUESTED,,2019-11-08T15:32:48Z
436,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE0MzUwOTA5,pikax,COMMENTED,,2019-11-08T17:31:16Z
438,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE0MDI2NTQy,posva,APPROVED,,2019-11-08T08:21:03Z
439,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzOTM2MTQw,Justineo,APPROVED,,2019-11-08T07:28:50Z
449,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE1MTI4ODk1,posva,COMMENTED,"Aren't we missing passing objects to `true-value` and `false-value`? If we get through HTML attributes, we can only have strings, no numbers, no objects",2019-11-11T20:08:41Z
451,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE1NzcwMjI2,yyx990803,CHANGES_REQUESTED,,2019-11-12T19:02:42Z
453,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE3MDk0MDU1,yyx990803,CHANGES_REQUESTED,,2019-11-14T16:33:46Z
453,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE3MTAyNTQx,chenquincy,COMMENTED,,2019-11-14T16:45:14Z
458,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE3ODU0MDMz,yyx990803,CHANGES_REQUESTED,,2019-11-15T20:31:36Z
458,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE3ODY5Njcy,loiacon,COMMENTED,,2019-11-15T21:07:21Z
459,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE2NzE4NDI5,ZhangJian-3ti,CHANGES_REQUESTED,,2019-11-14T05:22:36Z
459,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE3MTA0NzY4,yyx990803,CHANGES_REQUESTED,,2019-11-14T16:48:11Z
459,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE3MzE4NTU4,ZhangJian-3ti,COMMENTED,,2019-11-14T23:02:47Z
459,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE3MzM2OTU2,loiacon,COMMENTED,,2019-11-14T23:55:22Z
463,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIyMTQxNzEz,a631807682,COMMENTED,,2019-11-25T09:37:08Z
464,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE3OTkwMDA1,yyx990803,CHANGES_REQUESTED,I think if a block doesn't contain any content we should just ignore it (return early [here](https://github.com/vuejs/vue-next/blob/master/packages/compiler-sfc/src/parse.ts#L74) if `!children.length`),2019-11-16T21:34:48Z
472,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0OTIwMDI5,cuongdevjs,APPROVED,,2019-12-01T04:48:56Z
483,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIxODk0MTg4,yyx990803,CHANGES_REQUESTED,,2019-11-23T04:51:34Z
483,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIxODk0MzIx,yyx990803,CHANGES_REQUESTED,,2019-11-23T04:56:14Z
485,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIyMTIzMzQx,a631807682,APPROVED,,2019-11-25T09:06:57Z
487,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIxOTc0NjUz,nunomaduro,APPROVED,Sounds good!,2019-11-24T17:35:19Z
488,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIxOTc0NjM1,nunomaduro,APPROVED,Sounds good!,2019-11-24T17:34:59Z
488,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0OTIwMDE4,cuongdevjs,APPROVED,,2019-12-01T04:48:19Z
489,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIyMTUxMDEw,a631807682,COMMENTED,,2019-11-25T09:51:28Z
489,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIyMTgzNTE5,theniceangel,COMMENTED,,2019-11-25T10:42:24Z
489,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIzMDAzNjYx,yyx990803,COMMENTED,,2019-11-26T14:06:07Z
496,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIyNzk3MjIw,posva,APPROVED,Thanks!,2019-11-26T08:27:40Z
498,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIzMDE5MzQx,yyx990803,CHANGES_REQUESTED,,2019-11-26T14:26:52Z
498,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIzMzYzNzk2,loiacon,COMMENTED,,2019-11-27T00:19:28Z
498,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIzMzkwMjA4,yyx990803,COMMENTED,,2019-11-27T02:00:00Z
499,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIyNzk2MTk2,posva,APPROVED,Thanks!,2019-11-26T08:25:48Z
500,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0NDUyNDIx,yyx990803,CHANGES_REQUESTED,,2019-11-28T20:41:47Z
500,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0Nzk2OTI3,yyx990803,CHANGES_REQUESTED,,2019-11-29T16:27:36Z
501,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI1MzI4MzQw,yyx990803,CHANGES_REQUESTED,,2019-12-02T15:39:44Z
501,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI1ODQyNTc4,underfin,COMMENTED,,2019-12-03T01:07:03Z
502,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzIzNDgwMTM5,a631807682,APPROVED,,2019-11-27T07:53:56Z
504,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0ODg3Mjc4,ducan-ne,APPROVED,👌,2019-11-30T10:51:22Z
504,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0ODg3NDQ0,ducan-ne,COMMENTED,,2019-11-30T10:55:38Z
504,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5MTU1NzU5,yyx990803,CHANGES_REQUESTED,"Thanks for the PR, but this is a `runtime-core` test and should be platform agnostic (using `@vue/runtime-test` instead.",2019-12-09T19:15:55Z
504,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzMzMTczMjkx,cuongdevjs,APPROVED,,2019-12-17T10:30:24Z
506,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0MDMxMTY0,loiacon,APPROVED,,2019-11-28T02:50:03Z
506,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0MTE2NDY3,ztplz,APPROVED,,2019-11-28T08:23:29Z
508,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0NjIxOTE2,hsxfjames,COMMENTED,,2019-11-29T10:02:16Z
508,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI0NjY2MjY3,jacekkarczmarczyk,COMMENTED,,2019-11-29T11:32:27Z
525,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4MDM3MTI5,a631807682,APPROVED,,2019-12-06T07:40:37Z
526,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4MDMyNzc3,a631807682,COMMENTED,,2019-12-06T07:26:13Z
526,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5MTU3ODQ2,yyx990803,COMMENTED,"We've had this test fail in the past because of the API rate limiting from GitHub so we had to use a mocked local API during tests. (See 2.x example)

We can load the page with a hash parameter like `#test` and instead of calling the actual API, use mocked data instead.",2019-12-09T19:19:15Z
527,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4MDM3MTgy,a631807682,APPROVED,,2019-12-06T07:40:48Z
527,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4NTEyNjc1,loiacon,APPROVED,,2019-12-06T23:42:51Z
528,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4NTEzNzgy,loiacon,APPROVED,,2019-12-06T23:48:10Z
528,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4NTcwNTA3,ducan-ne,APPROVED,,2019-12-07T18:57:56Z
534,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5ODY0MzUw,yyx990803,CHANGES_REQUESTED,,2019-12-10T14:15:26Z
534,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5OTExNzkx,yyx990803,CHANGES_REQUESTED,,2019-12-10T15:15:12Z
536,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzMwNTc1MjIw,fnlctrl,COMMENTED,,2019-12-11T14:23:20Z
536,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzMwNjM1MjQ5,yyx990803,COMMENTED,,2019-12-11T15:41:29Z
541,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzMxNzk0ODMw,posva,APPROVED,Thanks!,2019-12-13T10:48:53Z
554,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM2MDUyOTIz,ducan-ne,APPROVED,,2019-12-24T01:23:02Z
560,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTA0NDE2,cuongdevjs,APPROVED,,2020-01-11T04:54:23Z
561,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM2MjI3NDQ0,fnlctrl,COMMENTED,,2019-12-24T15:15:31Z
566,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM2NDg1MTE1,posva,APPROVED,Thanks!,2019-12-26T10:27:15Z
579,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODU5OTQ5,yyx990803,CHANGES_REQUESTED,,2020-04-15T14:59:07Z
579,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODc4ODc4,pikax,COMMENTED,,2020-04-15T15:18:55Z
588,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MjcwNzcz,yyx990803,CHANGES_REQUESTED,,2020-01-07T14:32:11Z
588,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjM4NjY3,KaelWD,COMMENTED,,2020-01-08T04:14:05Z
589,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTU0MzU5,posva,APPROVED,Thanks!,2020-01-07T10:33:17Z
590,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5Mjk5NjY4,yyx990803,CHANGES_REQUESTED,It's ok for `computed` because there is no API to create instance-bound `computed` outside of `setup()`.,2020-01-07T15:14:45Z
612,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxODAwNDE1,posva,APPROVED,Thanks!,2020-01-13T12:09:23Z
614,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMTg2MDM2,yyx990803,COMMENTED,,2020-01-13T22:34:20Z
614,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjQxMDc3,yoyo930021,COMMENTED,,2020-01-14T01:14:53Z
621,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMTIwMDAz,jacekkarczmarczyk,COMMENTED,,2020-01-15T10:26:59Z
621,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMTcxMzY3,yyyanghj,COMMENTED,,2020-01-15T12:03:00Z
624,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNjQwNjcx,juzhiyuan,APPROVED,,2020-01-16T02:23:29Z
626,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxOTk4MDQ2,pikax,COMMENTED,"Good job, seems to be working, it would be great if you could merge master into this branch to a more in-depth review 👍 ",2020-04-28T16:15:33Z
626,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMjk4MDMw,pikax,COMMENTED,"I will go through the typescript next, just need more ☕ before it 😄 , might take couple days

EDIT: looking good so far! Thank you for the quick merge!",2020-04-30T08:15:00Z
626,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMzgxNjQ2,dolymood,COMMENTED,,2020-04-30T10:09:22Z
628,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MjcwNDQx,yyx990803,CHANGES_REQUESTED,,2020-01-16T22:54:18Z
628,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0Mzk2MTg0,sisou,COMMENTED,,2020-01-17T07:13:37Z
628,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0Mzk2NjE2,sisou,COMMENTED,,2020-01-17T07:14:55Z
628,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NjcyODAy,ZhangJian-3ti,COMMENTED,,2020-01-17T15:54:56Z
628,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0Njk3MzU4,sisou,COMMENTED,,2020-01-17T16:32:11Z
645,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NDA3NTI5,yyx990803,COMMENTED,,2020-01-20T16:05:13Z
645,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NDQwMDg1,yyx990803,CHANGES_REQUESTED,,2020-01-20T16:59:17Z
687,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMjUwOTk5,posva,COMMENTED,,2020-02-03T13:28:50Z
687,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMjUzMTUx,dsseng,COMMENTED,,2020-02-03T13:32:20Z
687,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMjU1Mjgw,posva,COMMENTED,,2020-02-03T13:35:33Z
687,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMjU2MzU1,dsseng,COMMENTED,,2020-02-03T13:37:17Z
687,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNzA2NDk1,cuongdevjs,APPROVED,,2020-02-04T03:33:56Z
689,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMDExOTM1,yyx990803,CHANGES_REQUESTED,,2020-02-04T14:22:37Z
689,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMDEzNjY0,dsseng,COMMENTED,,2020-02-04T14:24:48Z
701,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MDkwNTQw,jiangying000,COMMENTED,,2020-02-07T11:18:58Z
703,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTMyOTYz,jamesgeorge007,COMMENTED,,2020-02-08T06:15:11Z
703,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTcxMjg5,ZhangJian-3ti,COMMENTED,,2020-02-08T21:59:38Z
703,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NjA5NzM4,jonaskuske,COMMENTED,,2020-02-09T14:12:02Z
707,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NjMxNTkx,yyx990803,CHANGES_REQUESTED,,2020-02-09T20:34:10Z
714,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NzU0NTU3,yyx990803,CHANGES_REQUESTED,"I think it'd be more flexible to get portal content like this:

``` js
const portals = {}
const html = await renderToString(app, portals)
console.log(portals['#modal'])
```",2020-02-12T20:11:57Z
714,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MzUzNTY1,yyx990803,CHANGES_REQUESTED,,2020-02-15T16:29:04Z
714,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MzUzNjE4,dsseng,COMMENTED,,2020-02-15T16:30:11Z
714,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MzUzNzAy,yyx990803,CHANGES_REQUESTED,,2020-02-15T16:31:48Z
717,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODE1MDI1,asoglovo,COMMENTED,,2020-02-11T16:42:02Z
717,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MDgwMDQ0,yyx990803,COMMENTED,,2020-02-11T23:39:21Z
720,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4Mzk1NDM1,yyx990803,CHANGES_REQUESTED,,2020-02-13T17:05:59Z
720,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDAwNzUw,dsseng,COMMENTED,,2020-02-13T17:13:18Z
727,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MzI5MDE0,dsseng,COMMENTED,,2020-02-15T06:06:15Z
747,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODMxNTc1,znck,APPROVED,,2020-03-01T02:48:02Z
798,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzI3NDQ4,jacekkarczmarczyk,COMMENTED,,2020-03-07T06:45:49Z
798,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzI4NDY1,hareku,COMMENTED,,2020-03-07T07:10:38Z
821,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTIyNjU3,yyx990803,COMMENTED,,2020-03-11T21:01:52Z
821,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMjIzODA2,ktsn,COMMENTED,,2020-03-12T01:17:13Z
842,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0ODY4NTg2,yyx990803,CHANGES_REQUESTED,,2020-03-16T01:20:38Z
842,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MjQ4NjIz,yyx990803,CHANGES_REQUESTED,,2020-03-16T14:09:42Z
851,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODU1MTQ0,yyx990803,CHANGES_REQUESTED,,2020-03-18T13:21:34Z
851,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODc2NDY3,lmiller1990,COMMENTED,,2020-03-18T13:46:04Z
851,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MDIyNzQw,yyx990803,COMMENTED,,2020-03-18T16:15:48Z
851,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjQ4NzIx,JessicaSachs,COMMENTED,,2020-03-18T21:29:04Z
853,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NDcxMTEw,yyx990803,COMMENTED,,2020-03-20T13:15:53Z
885,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDA2MzAy,posva,APPROVED,,2020-03-26T13:28:19Z
893,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzODU0Mzg2,yyx990803,CHANGES_REQUESTED,,2020-03-30T13:30:22Z
930,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MjYzMzMz,yyx990803,CHANGES_REQUESTED,`fallthroughAttrs.ts` should not be placed under `src/components` - it should be directly in `src` alongside `nodeOps.ts` and `patchProp.ts`.,2020-04-06T13:45:15Z
930,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDk5OTI4,fernandolguevara,COMMENTED,,2020-04-06T18:13:48Z
930,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NzY1NTIw,basvanmeurs,COMMENTED,,2020-04-07T03:52:23Z
930,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MTM4MjE5,yyx990803,CHANGES_REQUESTED,,2020-04-07T13:53:17Z
952,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMTYzMjA2,yyx990803,CHANGES_REQUESTED,,2020-04-13T14:02:58Z
956,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMTUxMzg3,yyx990803,CHANGES_REQUESTED,,2020-04-13T13:43:18Z
982,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MjU4MTY0,posva,COMMENTED,,2020-04-17T08:26:03Z
984,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDY5MzEw,yyx990803,CHANGES_REQUESTED,,2020-04-17T13:48:22Z
991,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDMzMzQ2,thecrypticace,COMMENTED,,2020-04-19T15:52:56Z
991,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDc2MTcy,dsonet,COMMENTED,,2020-04-19T23:36:35Z
1002,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDgxMDc2,0xPoe,COMMENTED,,2020-04-20T14:00:38Z
1002,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NjE0MTUz,yyx990803,CHANGES_REQUESTED,,2020-04-20T16:24:45Z
1005,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NzUyNTg3,yyx990803,CHANGES_REQUESTED,I accidentally worked on the same thing but I think this is more comprehensive. Can you resolve the conflict please? Thanks!,2020-04-20T19:35:17Z
1005,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2Nzg0NjQ4,aztalbot,COMMENTED,,2020-04-20T20:23:59Z
1005,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2Nzg1MjM3,aztalbot,COMMENTED,,2020-04-20T20:24:51Z
1009,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MzY1NTgx,pikax,COMMENTED,,2020-04-22T16:28:31Z
1009,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMjM0MDU5,pikax,COMMENTED,,2020-04-24T20:00:40Z
1009,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzc3ODE3,pikax,APPROVED,,2020-04-25T09:48:26Z
1032,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NTg3MjIy,pikax,COMMENTED,,2020-04-22T21:03:16Z
1090,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MTU0MzU2,pikax,APPROVED,,2020-05-01T13:19:25Z
1093,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MDc4MDEz,blake-newman,APPROVED,,2020-05-01T09:01:58Z
1106,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNTUyNDI5,bekalshenoy,CHANGES_REQUESTED,,2020-05-13T02:50:29Z
1106,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjU4NDYz,pikax,COMMENTED,,2020-05-13T07:31:56Z
1106,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwODMyNTkz,bekalshenoy,COMMENTED,,2020-05-13T11:30:54Z
1106,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NjI5ODc1,jacekkarczmarczyk,COMMENTED,,2020-05-25T10:52:21Z
1106,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NjMyNTAw,pikax,COMMENTED,,2020-05-25T10:57:35Z
1106,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzkyODIw,ktsn,COMMENTED,,2020-05-30T09:39:10Z
1106,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzkzMDA3,pikax,COMMENTED,,2020-05-30T09:42:18Z
1106,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzk0OTMy,ktsn,APPROVED,LGTM 👍 ,2020-05-30T10:18:00Z
1125,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MTQ3MTM4,pikax,COMMENTED,,2020-05-08T10:28:02Z
1125,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzM0NDUx,Akryum,COMMENTED,,2020-06-28T01:06:51Z
1140,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NTcxOTcy,underfin,COMMENTED,,2020-05-07T15:12:02Z
1140,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NTgxODY2,underfin,COMMENTED,,2020-05-07T15:22:28Z
1151,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNjQ3NDc4,underfin,COMMENTED,,2020-05-14T09:55:39Z
1154,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NzIyNjM2,underfin,COMMENTED,,2020-05-10T08:48:59Z
1154,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NzQ5MzM0,underfin,COMMENTED,,2020-05-10T14:16:46Z
1175,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDQwMjQ1,underfin,COMMENTED,,2020-05-16T02:41:56Z
1175,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDQwNjg3,underfin,COMMENTED,,2020-05-16T02:49:50Z
1188,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzIyMTg5,underfin,COMMENTED,,2020-05-15T03:24:53Z
1197,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjU0Nzcw,yyx990803,COMMENTED,"Great work! I think the implementation looks good.

Obviously we should try to reduce the redundancy by reusing some of the duplicated logic - I can do that but it will have to wait until I finish other priorities. Would you be interested in working on that in the meanwhile?",2020-05-18T14:34:53Z
1197,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjk5NDM0,CyberAP,COMMENTED,,2020-05-18T15:23:07Z
1217,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1OTM4MTEx,posva,APPROVED,Thanks!,2020-05-21T07:33:52Z
1234,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NTc2NTYx,pikax,COMMENTED,,2020-05-25T09:17:04Z
1234,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwODA4MDY1,mino01x,COMMENTED,,2021-01-04T06:51:28Z
1234,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwMDExMjU0,clouds56,COMMENTED,,2021-01-17T08:31:54Z
1269,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTAyMDUy,underfin,COMMENTED,,2020-05-31T14:54:27Z
1269,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTAyNTc3,underfin,COMMENTED,,2020-05-31T15:00:41Z
1278,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NTk1ODI5,yyx990803,COMMENTED,Can we add tests for these?,2020-06-25T15:13:31Z
1278,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MjMwODAx,underfin,COMMENTED,,2020-06-26T11:49:15Z
1278,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDc1MTYy,csr632,COMMENTED,,2020-07-16T03:03:03Z
1278,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDgyMDA4,underfin,COMMENTED,,2020-07-16T03:27:24Z
1293,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NDE0NTY4,pikax,COMMENTED,Can you add dts tests?,2020-06-04T12:59:50Z
1302,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Mzc1OTI0,yyx990803,CHANGES_REQUESTED,,2020-06-05T14:55:58Z
1302,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Mzc2MzI3,yyx990803,COMMENTED,,2020-06-05T14:56:26Z
1310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Nzk4NTQ0,pikax,COMMENTED,,2020-06-07T08:28:14Z
1310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODA0NjU3,underfin,COMMENTED,,2020-06-07T09:56:37Z
1310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODA1NTc0,pikax,APPROVED,,2020-06-07T10:09:06Z
1312,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MzA2NjI5,yyx990803,CHANGES_REQUESTED,,2020-06-11T21:38:45Z
1312,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5OTQ3MTk2,pikax,COMMENTED,,2020-06-12T18:16:31Z
1333,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NzA5MjU1,lawvs,COMMENTED,,2020-06-10T04:52:56Z
1360,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjEwMTU5,underfin,COMMENTED,,2020-06-14T11:25:04Z
1360,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzI1MzE5,underfin,COMMENTED,,2020-06-15T05:10:20Z
1364,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjY0MTUw,Justineo,CHANGES_REQUESTED,,2020-06-15T00:05:17Z
1369,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNDE1MjE4,underfin,COMMENTED,,2020-06-15T08:13:19Z
1369,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNDE1OTk3,underfin,COMMENTED,,2020-06-15T08:14:23Z
1375,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzQ3NDcz,yyx990803,COMMENTED,,2020-06-15T15:19:45Z
1377,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTgxNDQy,yyx990803,CHANGES_REQUESTED,,2020-06-15T20:47:33Z
1404,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzOTQxNjAy,underfin,COMMENTED,,2020-06-19T09:42:47Z
1431,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1Nzg5ODc1,yyx990803,COMMENTED,,2020-06-23T13:37:17Z
1456,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTQ4NTk5,yyx990803,COMMENTED,,2020-06-29T13:34:57Z
1490,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTUyMzY1,jacekkarczmarczyk,COMMENTED,,2020-07-02T10:30:34Z
1490,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTY1MzY2,tarnishablec,COMMENTED,,2020-07-02T10:50:26Z
1501,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNTk1Mzgy,posva,APPROVED,Thanks!,2020-07-04T08:11:44Z
1530,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMDI5NzA4,andrei-kochetygov,COMMENTED,,2020-07-06T12:28:04Z
1530,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMDQ1MjE1,posva,COMMENTED,,2020-07-06T12:50:51Z
1530,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMDQ1Mzkz,posva,COMMENTED,,2020-07-06T12:51:05Z
1546,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NjE3MzQ5,posva,APPROVED,Thank you!,2020-07-08T10:32:25Z
1568,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODYzMTIx,posva,COMMENTED,,2020-07-12T09:48:30Z
1568,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODYzNDAw,Akimotorakiyu,COMMENTED,,2020-07-12T09:52:39Z
1575,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NzI2OTIy,edison1105,COMMENTED,,2020-07-14T01:44:08Z
1600,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjM2MTQ5,znck,APPROVED,,2020-12-17T02:31:27Z
1601,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5ODk0Njg4,yuantongkang,APPROVED,,2020-07-16T14:18:37Z
1656,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNDkyNzE5,posva,COMMENTED,,2020-07-20T10:41:11Z
1656,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNDk0MTgw,tanhauhau,COMMENTED,,2020-07-20T10:43:34Z
1656,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTAyNzcw,tanhauhau,COMMENTED,,2020-07-20T10:57:57Z
1670,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjAwMzMz,Justineo,CHANGES_REQUESTED,,2020-07-21T15:54:30Z
1678,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMjM2Mjg2,pikax,CHANGES_REQUESTED,That is necessary to check for value changes,2020-07-22T11:41:36Z
1682,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNzM0MTU5,jods4,COMMENTED,,2020-07-22T22:41:17Z
1682,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTE5MTIz,Picknight,COMMENTED,,2020-07-24T19:01:30Z
1703,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjgzMjE2,underfin,COMMENTED,,2020-07-25T12:47:08Z
1719,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NTc5OTQw,posva,COMMENTED,,2020-07-27T08:32:43Z
1719,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NjI3NzM2,underfin,COMMENTED,,2020-07-27T09:38:36Z
1719,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NjQzMzg1,posva,COMMENTED,,2020-07-27T09:59:51Z
1719,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTcxMTU4,yyx990803,COMMENTED,,2020-07-27T22:11:24Z
1719,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTcxNzU5,yyx990803,COMMENTED,,2020-07-27T22:12:43Z
1731,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MzUzOTAy,georgezouq,APPROVED,,2020-07-29T09:33:15Z
1768,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwOTg1MDQz,yyx990803,CHANGES_REQUESTED,,2020-08-04T16:38:44Z
1768,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDIzNDY3,thecrypticace,COMMENTED,,2020-08-04T17:30:05Z
1788,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxODc5ODM2,posva,COMMENTED,,2020-08-05T17:33:00Z
1794,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMjQ1NzAw,Picknight,COMMENTED,,2020-08-06T07:16:28Z
1794,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMzk1MDY5,unbyte,COMMENTED,,2020-08-06T10:25:34Z
1794,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNDAzMDAy,unbyte,COMMENTED,,2020-08-06T10:38:43Z
1859,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNDg0OTc0,yyx990803,COMMENTED,,2020-08-19T13:57:54Z
1859,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNDk4MTE4,unbyte,COMMENTED,,2020-08-19T14:11:19Z
1859,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNTIyODEy,unbyte,COMMENTED,,2020-08-19T14:35:32Z
1859,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwOTUyOTQx,yyx990803,COMMENTED,,2020-08-19T20:59:08Z
1859,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDUxNTQ3,unbyte,COMMENTED,,2020-08-20T00:32:42Z
1859,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDU5NDgx,unbyte,COMMENTED,,2020-08-20T01:01:08Z
1863,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MjY2MTEy,pikax,COMMENTED,Reducing `any` usage,2020-08-17T08:28:39Z
1878,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NTYwMDk5,posva,APPROVED,Thanks!,2020-08-17T15:20:46Z
1880,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NzA0MDQx,posva,COMMENTED,,2020-08-17T18:07:51Z
1880,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NzY2NzU3,pikax,COMMENTED,,2020-08-17T19:17:02Z
1883,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwODE2MDUz,yyx990803,COMMENTED,,2020-08-19T19:55:54Z
1883,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMzA3MTgy,pikax,COMMENTED,,2020-08-20T07:17:58Z
1884,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwOTcxNDE0,yyx990803,CHANGES_REQUESTED,,2020-08-19T21:17:06Z
1884,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMTA1MDA2,HcySunYang,COMMENTED,,2020-08-20T03:33:56Z
1884,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNjk4Nzcx,yyx990803,COMMENTED,,2020-08-20T14:56:06Z
1900,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwOTc5NTM1,yyx990803,COMMENTED,,2020-08-19T21:31:07Z
1900,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwOTkxMzU5,jacekkarczmarczyk,COMMENTED,,2020-08-19T21:52:57Z
1900,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwOTk3NzU3,yyx990803,COMMENTED,,2020-08-19T22:05:30Z
1900,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMzYwNDkw,jods4,COMMENTED,,2020-08-20T08:08:09Z
1900,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNDE4ODU3,RobbinBaauw,COMMENTED,,2020-08-20T09:27:32Z
1900,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzA0MDAz,yyx990803,COMMENTED,,2020-08-20T15:01:15Z
1900,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzI3MDMy,RobbinBaauw,COMMENTED,,2020-08-20T15:25:35Z
1900,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjE5NDg4,ZhangJian-3ti,COMMENTED,,2020-08-21T16:14:26Z
1900,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjc3NjM1,yyx990803,COMMENTED,,2020-08-21T17:47:19Z
1901,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMjI5NDYw,edison1105,APPROVED,,2020-08-20T04:48:28Z
1905,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNjExMzAy,edison1105,APPROVED,,2020-08-20T13:25:40Z
1936,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTk1NTQy,pikax,COMMENTED,"The changes on the Public instance types are not necessary, you can just add them on `defineComponent`:

```ts
ComponentPublicInstanceConstructor<
  CreateComponentPublicInstance<
    ExtractPropTypes<PropsOptions, false>,
    RawBindings,
    D,
    C,
    M,
    Mixin,
    Extends,
    E,
    VNodeProps & AllowedComponentProps & ComponentCustomProps
  > 
& Readonly<ExtractPropTypes<PropsOptions, true>> // add this line to the `defineComponent` overloads
>
```
",2020-08-23T09:28:39Z
1936,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTk2ODY1,pikax,APPROVED,,2020-08-23T09:47:39Z
1937,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczODc3MTMz,yyx990803,CHANGES_REQUESTED,,2020-08-24T21:42:04Z
1937,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MDQzNDQx,unbyte,COMMENTED,,2020-08-25T02:06:58Z
1937,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MDQ0OTM1,unbyte,COMMENTED,,2020-08-25T02:11:37Z
1937,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MDc2OTk5,unbyte,COMMENTED,,2020-08-25T02:52:16Z
1937,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTM1MDc0,dsonet,CHANGES_REQUESTED,,2020-08-25T04:58:39Z
1937,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTQ5NjQ1,unbyte,COMMENTED,,2020-08-25T05:41:36Z
1941,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MDM5MzU1,yyx990803,CHANGES_REQUESTED,,2020-08-25T01:52:58Z
1943,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MDM3Njc3,yyx990803,COMMENTED,,2020-08-25T01:47:42Z
1961,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0Nzk4NDIz,posva,CHANGES_REQUESTED,Can you also change the alpha right above?,2020-08-25T19:44:57Z
1961,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MjI2NzY4,posva,APPROVED,Thanks!,2020-08-26T07:36:51Z
1999,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMzEyOTgx,haoqunjiang,COMMENTED,,2020-09-02T01:48:40Z
2051,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNzgyOTE0,yyx990803,CHANGES_REQUESTED,,2020-09-04T16:13:28Z
2089,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1Njg3NTcy,underfin,COMMENTED,,2020-09-10T08:11:32Z
2115,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjU2NDcw,edison1105,APPROVED,,2020-09-15T01:15:43Z
2138,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMjU1ODQ3,edison1105,COMMENTED,,2020-09-17T05:37:01Z
2153,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjI1OTY4,posva,COMMENTED,,2020-09-18T07:45:35Z
2160,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxOTY5MDIy,pikax,COMMENTED,,2020-09-19T05:30:25Z
2160,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxOTkxMDUw,wonderful-panda,COMMENTED,,2020-09-19T10:54:32Z
2160,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMDAyODg1,pikax,APPROVED,,2020-09-19T14:40:47Z
2195,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTg1MzM1,antfu,COMMENTED,,2020-09-29T23:06:22Z
2195,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5OTIyNzMy,antfu,COMMENTED,,2020-11-27T11:52:49Z
2198,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTUwMDk3,Justineo,COMMENTED,,2020-09-22T06:15:17Z
2198,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTkyNjIx,izayl,COMMENTED,,2020-09-22T07:34:23Z
2198,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjA2MDM1,posva,COMMENTED,,2020-09-22T07:53:43Z
2198,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjE0MDc1,posva,APPROVED,,2020-09-22T08:04:38Z
2198,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTI0MzE4,edison1105,APPROVED,,2020-09-23T00:02:16Z
2209,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NTE1NDIy,posva,COMMENTED,Thanks!,2020-09-23T10:25:46Z
2247,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDYwOTYz,RobbinBaauw,COMMENTED,,2020-09-27T08:01:17Z
2247,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDYxNDQ0,RobbinBaauw,COMMENTED,,2020-09-27T08:08:22Z
2247,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDYyMzAy,jacekkarczmarczyk,COMMENTED,,2020-09-27T08:21:04Z
2247,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MTEwODU3,dsonet,CHANGES_REQUESTED,,2020-09-27T21:01:46Z
2254,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjc3Mjky,69hunter,COMMENTED,,2020-10-05T00:59:10Z
2254,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNjgyODY4,edison1105,COMMENTED,,2020-10-06T08:06:41Z
2263,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NjE0NTUx,CyberAP,COMMENTED,,2020-09-29T15:27:15Z
2287,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwODQwMjAw,dsonet,CHANGES_REQUESTED,Decreased unnecessary bind invoke.,2020-10-02T03:18:39Z
2287,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwODU3ODYw,antfu,COMMENTED,,2020-10-02T04:43:42Z
2289,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwODczNjcw,edison1105,APPROVED,,2020-10-02T05:56:07Z
2289,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwODc0MDU1,unbyte,COMMENTED,,2020-10-02T05:57:26Z
2308,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNzg3MjYy,unbyte,COMMENTED,,2020-10-06T10:14:24Z
2308,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyODA5MjQ4,69hunter,COMMENTED,,2020-10-06T10:45:30Z
2308,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyODg4NzUz,edison1105,COMMENTED,,2020-10-06T12:32:58Z
2308,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyODg5NjI1,edison1105,COMMENTED,,2020-10-06T12:34:01Z
2310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTg3Njk2,69hunter,COMMENTED,,2020-10-06T17:14:06Z
2336,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NzUxMjcy,LinusBorg,COMMENTED,,2020-10-08T12:55:59Z
2345,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNTc0MjAw,jods4,COMMENTED,,2020-11-14T12:10:24Z
2345,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMjEzOTg5,basvanmeurs,COMMENTED,,2020-11-16T10:56:36Z
2345,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMjQxMTU1,jods4,COMMENTED,,2020-11-16T11:36:47Z
2345,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNjUwMjg3,basvanmeurs,COMMENTED,,2020-11-16T19:45:45Z
2348,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDg3OTYy,edison1105,APPROVED,,2020-10-10T10:45:54Z
2348,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTc1MTEz,69hunter,COMMENTED,,2020-10-11T12:34:03Z
2359,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3ODEyNDk3,yyx990803,COMMENTED,,2020-10-13T20:41:40Z
2359,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTQwMjM0,underfin,COMMENTED,,2020-10-14T01:52:19Z
2377,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MTA2NzU2,posva,APPROVED,Thanks,2020-10-14T08:23:38Z
2389,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTc4OTk3,yyx990803,COMMENTED,,2020-10-19T21:39:06Z
2389,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTg2OTUy,basvanmeurs,COMMENTED,,2020-10-19T21:53:32Z
2394,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNTY4MTc2,dsonet,CHANGES_REQUESTED,,2020-10-16T15:17:22Z
2394,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTc4MTI4,soouup,COMMENTED,,2020-10-17T11:15:35Z
2404,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTcxMDAy,pikax,COMMENTED,,2020-10-17T09:07:27Z
2404,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMDk1OTQy,yyx990803,CHANGES_REQUESTED,,2020-10-20T20:14:26Z
2404,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTE1Mzcy,pikax,COMMENTED,,2020-10-22T21:00:58Z
2432,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNzEwMjY4,posva,COMMENTED,,2020-10-19T12:33:31Z
2435,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNzcyNTQ4,yyx990803,CHANGES_REQUESTED,,2020-10-20T14:21:01Z
2435,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMzQ2MTM5,HcySunYang,COMMENTED,,2020-10-21T06:35:09Z
2442,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMzc5NjYw,posva,APPROVED,Thanks!,2020-10-20T06:50:57Z
2447,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTMxMTY5,yyx990803,CHANGES_REQUESTED,,2020-10-20T16:40:12Z
2447,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTM5OTg0,unbyte,COMMENTED,,2020-10-20T16:50:49Z
2447,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMTY4NzIx,yyx990803,COMMENTED,,2020-10-20T22:03:25Z
2447,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMjg1MTE3,unbyte,COMMENTED,,2020-10-21T03:42:04Z
2447,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMjg1OTQx,unbyte,COMMENTED,,2020-10-21T03:45:09Z
2447,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MzIyNTIw,yyx990803,APPROVED,,2020-12-04T21:51:06Z
2454,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNjcwODE1,posva,APPROVED,,2020-11-30T08:06:48Z
2467,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MzU1MTky,yyx990803,COMMENTED,,2020-12-04T23:06:42Z
2467,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NjMzMjg1,antfu,COMMENTED,,2020-12-21T20:06:06Z
2477,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MDQxNTMy,jolyndenning,COMMENTED,,2020-10-23T22:23:59Z
2477,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MDQxNjU0,jolyndenning,COMMENTED,,2020-10-23T22:24:24Z
2477,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mjk0MjY1,jolyndenning,COMMENTED,,2020-10-24T17:37:05Z
2477,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mjk0Njc1,znck,APPROVED,,2020-10-24T17:42:13Z
2486,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0ODkyNDk3,HcySunYang,APPROVED,,2021-03-31T04:59:23Z
2490,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjAxMzI5,shadowings-zy,COMMENTED,,2020-10-27T11:30:56Z
2490,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NzQ3MDc4,edison1105,COMMENTED,@knightly-bot build this,2020-10-27T14:10:51Z
2490,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDQwNzg1,yyx990803,COMMENTED,,2020-11-27T15:01:14Z
2492,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0ODkxMTkz,HcySunYang,CHANGES_REQUESTED,,2021-03-31T04:55:38Z
2492,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0OTk0MzMz,posva,CHANGES_REQUESTED,,2021-03-31T07:54:22Z
2496,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzMjY2NTcw,HcySunYang,APPROVED,,2021-02-04T10:53:36Z
2496,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzNDAyNzE4,edison1105,APPROVED,,2021-02-04T13:43:37Z
2520,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5OTE2NjEy,zhangzhonghe,COMMENTED,,2020-10-29T17:37:00Z
2520,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTE5NjEz,dsonet,COMMENTED,,2020-10-30T18:08:07Z
2527,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzAxMzUy,IWANABETHATGUY,COMMENTED,,2020-10-30T14:06:33Z
2527,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzAyMzg2,IWANABETHATGUY,COMMENTED,,2020-10-30T14:07:34Z
2527,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkwMTgwMDc4,CarterLi,COMMENTED,,2021-06-23T03:29:45Z
2536,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMjg0MzA5,edison1105,CHANGES_REQUESTED,,2020-11-02T01:05:25Z
2536,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzA3MDg4,leaon4,COMMENTED,,2020-11-02T03:02:55Z
2548,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU0OTY3Nzc3,HcySunYang,APPROVED,,2021-05-08T07:18:21Z
2563,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDMwMDA0,posva,APPROVED,,2020-11-09T08:43:36Z
2565,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTI5Mzg0,posva,CHANGES_REQUESTED,,2020-11-06T08:06:53Z
2565,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjMxMjMx,talmand,COMMENTED,,2020-11-07T06:18:17Z
2565,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjMxMjU3,talmand,COMMENTED,,2020-11-07T06:18:57Z
2565,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjQ0MTMw,posva,COMMENTED,,2020-11-07T10:37:24Z
2565,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1Njc5NTc1,talmand,COMMENTED,,2020-11-07T20:30:06Z
2565,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDE5NTEz,posva,COMMENTED,,2020-11-09T08:28:52Z
2565,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NjYyMTk0,posva,CHANGES_REQUESTED,,2020-11-09T21:18:45Z
2565,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2ODI5ODU0,talmand,COMMENTED,,2020-11-10T03:40:41Z
2565,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MjI4OTAz,posva,CHANGES_REQUESTED,can you also add tests for the different scenarios where this should warn?,2020-11-10T14:00:25Z
2565,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NjYwNTAz,talmand,COMMENTED,,2020-11-12T00:58:49Z
2590,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0ODg0MTQ0,HcySunYang,APPROVED,,2021-03-31T04:34:44Z
2590,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0OTkwMzM3,posva,APPROVED,,2021-03-31T07:49:38Z
2597,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNjY5NjI1,posva,COMMENTED,,2020-11-30T08:04:47Z
2597,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDM4NzQw,luwuer,COMMENTED,,2020-12-01T02:15:12Z
2597,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzIzNzgw,posva,COMMENTED,,2020-12-01T09:47:30Z
2597,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzM1MDY2,luwuer,COMMENTED,"### before modification
![image](https://user-images.githubusercontent.com/13172641/100693642-49d36a80-33c8-11eb-8fb9-e3b428525ab1.png)

The transition class `test-enter-active` and `test-enter-from`  are added to el in `onBeforeEnter`, and then the class `test-enter-from` is removed in next tick(animation frame).

For example, [Reproduction link](https://codesandbox.io/s/competent-hermann-b1s5q?file=/src/App.vue:1016-1035) of issue #2531. 
1. The el has a default style `opacity: 1.0` [mdn](https://developer.mozilla.org/en-US/docs/Web/CSS/opacity)
2. We set ` opacity: 0` and `transition` to the el when beforeEnter, so the el will start transition from opacity `1.0` to opacity `0`.
3. But we remove ` opacity: 0;` from el by remove class `.tooltip-enter-from` in  the next frame, so transition stop.

**So that the main problem in these cases is that `.tooltip-enter-from` is not the initial style.**

```css
.tooltip-enter-from,
.tooltip-leave-to {
  transform: translateY(-30px) scale(0.96);
  opacity: 0;
}
```

### after modification
![image](https://user-images.githubusercontent.com/13172641/100693678-5ce63a80-33c8-11eb-9535-6d38372fa70e.png)

The transition class `test-enter-active` is added to el in 'onEnter' which is triggered next tick.

Also [Reproduction link](https://codesandbox.io/s/competent-hermann-b1s5q?file=/src/App.vue:1016-1035) of issue #2531. 
1. The el has a default style `opacity: 1.0`
2. We set ` opacity: 0` to el when beforeEnter, but the el will not start transition because of no css transition property.
3. Then we set `transition` and ` opacity: 0` to the el in  the next frame,  the el start transition from opacity `0` to opacity `1.0`.

The same as leave.

### summary
I changed tests because of i think the `.tooltip-enter/leave-active` should be set in the next frame.",2020-12-01T09:59:52Z
2597,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNjczMTg1,luwuer,COMMENTED,This is the reason of  why changed seemingly unrelated tests.,2020-12-02T10:01:32Z
2597,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMTAzMTQ0,yyx990803,CHANGES_REQUESTED,,2020-12-02T18:04:04Z
2597,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMTA5MTAx,yyx990803,COMMENTED,,2020-12-02T18:11:41Z
2597,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMTQ0NjU5,yyx990803,COMMENTED,,2020-12-02T18:56:56Z
2601,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNTk2NTYx,antfu,APPROVED,,2021-01-01T17:25:27Z
2601,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwOTg3Njk3,posva,APPROVED,,2021-01-04T12:19:09Z
2604,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwOTA5MDc5,Alanscut,COMMENTED,"test failed, `'3.14aa'.match(/\d+(\.\d+)?/)` is `true`.",2020-11-16T04:12:26Z
2614,PRR_kwDOCCum184vQKjC,LinusBorg,APPROVED,,2021-10-29T08:33:20Z
2614,PRR_kwDOCCum185DO9B2,antfu,APPROVED,,2022-10-03T08:36:49Z
2614,PRR_kwDOCCum185DO-Qy,antfu,APPROVED,,2022-10-03T08:40:33Z
2616,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODc0NjUx,posva,APPROVED,,2020-11-18T21:04:40Z
2616,PRR_kwDOCCum185ABAkR,xiaoxiangmoe,COMMENTED,,2022-08-16T12:15:42Z
2616,PRR_kwDOCCum185ADWXK,privatenumber,COMMENTED,,2022-08-16T18:50:04Z
2621,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NzIxNjE2,LinusBorg,DISMISSED,Can you add a test?,2020-11-20T19:33:43Z
2632,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzEyMzI5,yyx990803,COMMENTED,,2020-11-30T21:33:22Z
2632,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxODU1Mjk2,luwuer,COMMENTED,,2020-12-01T12:40:08Z
2640,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NzM2NDI1,07akioni,COMMENTED,,2020-11-24T17:16:05Z
2640,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NzM3Mjc4,07akioni,COMMENTED,,2020-11-24T17:17:06Z
2640,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MDkxODAy,luwuer,COMMENTED,,2020-11-25T01:30:29Z
2640,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MDkxODYz,luwuer,COMMENTED,,2020-11-25T01:30:42Z
2648,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NzIyNDkw,LinusBorg,CHANGES_REQUESTED,"Hi, thanks for the PR.

Can you add a test?",2020-11-20T19:35:01Z
2648,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1ODY4OTMx,edison1105,CHANGES_REQUESTED,,2020-11-21T01:39:00Z
2648,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1OTU0MTcw,yassilah,COMMENTED,,2020-11-21T09:41:56Z
2648,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzQxNTc0,yyx990803,COMMENTED,,2020-11-30T22:19:58Z
2649,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1Mjg2NjYz,edison1105,APPROVED,,2020-11-20T10:02:13Z
2649,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MzAwOTY1,lstoeferle,COMMENTED,,2020-11-20T10:21:34Z
2649,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NDU4NDk3,ludofischer,COMMENTED,,2020-11-20T14:10:21Z
2649,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NDkxNzEy,lstoeferle,COMMENTED,,2020-11-20T14:48:49Z
2649,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1OTc4MTUy,ludofischer,COMMENTED,,2020-11-21T16:33:26Z
2649,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MDcwNDcw,lstoeferle,COMMENTED,,2020-11-22T15:04:03Z
2649,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MDcyNjcz,ludofischer,COMMENTED,,2020-11-22T15:28:47Z
2649,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MDc0MjA0,lstoeferle,COMMENTED,,2020-11-22T15:45:15Z
2654,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1OTYyNjkw,posva,CHANGES_REQUESTED,Can you also add a test?,2020-11-21T12:21:33Z
2654,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1OTY2NTEw,edison1105,COMMENTED,,2020-11-21T13:29:25Z
2654,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1OTY4MDE2,posva,COMMENTED,,2020-11-21T13:55:13Z
2654,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1OTc1MTQ1,edison1105,COMMENTED,,2020-11-21T15:48:40Z
2654,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MjA2NDQz,posva,COMMENTED,,2020-11-24T08:26:42Z
2654,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MzEyMDg0,edison1105,COMMENTED,,2020-11-24T09:46:23Z
2676,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5ODYxNTEx,posva,APPROVED,,2020-11-27T10:17:15Z
2676,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzNDE0ODc5,edison1105,APPROVED,,2021-02-04T13:56:25Z
2682,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0ODgyMDA3,HcySunYang,APPROVED,,2021-03-31T04:28:12Z
2682,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0OTg5ODE0,posva,APPROVED,,2021-03-31T07:48:59Z
2688,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxODU2NDc1,LinusBorg,COMMENTED,,2020-12-01T12:41:51Z
2688,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxODczMDA4,edison1105,COMMENTED,,2020-12-01T13:04:17Z
2693,PRR_kwDOCCum185N9ho9,pikax,COMMENTED,,2023-02-21T18:34:08Z
2693,PRR_kwDOCCum185N9jqk,pikax,COMMENTED,,2023-02-21T18:38:04Z
2696,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNjc2MDMw,posva,CHANGES_REQUESTED,Could you add a test too?,2020-12-01T09:01:35Z
2696,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNjc5NDQ4,edison1105,COMMENTED,,2020-12-01T09:05:46Z
2696,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMTEyNTI2,yyx990803,COMMENTED,,2020-12-01T17:04:14Z
2706,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNTg0NjQ5,posva,CHANGES_REQUESTED,I think this is pushing the warnings too much because the old syntax will affect very few people (if any) so this warning has very little impact. Why do you think this is worth adding? Who does it help?,2020-12-02T08:13:47Z
2714,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNzM0MDI3,luwuer,COMMENTED,,2020-12-03T09:01:20Z
2714,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODkxNDcz,edison1105,COMMENTED,,2020-12-03T12:12:33Z
2714,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTE5ODg4,luwuer,COMMENTED,,2020-12-03T12:50:06Z
2714,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTM2NzE1,luwuer,COMMENTED,,2020-12-03T13:11:25Z
2714,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTQ4Njc0,edison1105,COMMENTED,,2020-12-03T13:25:26Z
2719,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MjAyMzY1,yyx990803,CHANGES_REQUESTED,,2020-12-03T17:26:13Z
2719,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzNDE2NjAw,edison1105,APPROVED,,2021-02-04T13:58:04Z
2729,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2NDExMjI0,antfu,COMMENTED,,2021-02-09T10:46:48Z
2729,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2NTQ0MDcy,patak-dev,COMMENTED,,2021-02-09T13:30:33Z
2729,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3NTU4NDY1,antfu,APPROVED,,2021-02-10T12:34:38Z
2729,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3NjA1MDAy,edison1105,APPROVED,,2021-02-10T13:30:10Z
2742,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1OTQxNTI4,posva,APPROVED,,2020-12-07T08:57:15Z
2750,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4OTQ5NzQ3,afontcu,APPROVED,This also fixes a broken test in Vue Test Utils next when trying to upgrade to 3.0.4 👍 ,2020-12-27T17:57:16Z
2753,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MDYwMTQ5,posva,CHANGES_REQUESTED,Can you add tests?,2020-12-07T11:29:18Z
2753,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NDAwNTMx,posva,COMMENTED,,2020-12-07T18:02:16Z
2753,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjczMDA3,edison1105,COMMENTED,,2020-12-08T01:22:52Z
2753,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MDE5NDcz,posva,APPROVED,,2021-02-07T14:19:40Z
2758,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNTYzMjg2,pikax,COMMENTED,A few more tests,2021-02-17T19:47:13Z
2764,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MTgxNjA5,posva,COMMENTED,,2020-12-08T12:20:46Z
2764,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MjIzNzYz,edison1105,COMMENTED,,2020-12-08T13:17:36Z
2765,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzMjg0ODI3,HcySunYang,CHANGES_REQUESTED,,2021-02-04T11:16:16Z
2765,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5MzIwMTk1,luwuer,COMMENTED,,2021-02-26T07:43:31Z
2788,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NDg0NTQ4,posva,CHANGES_REQUESTED,@Shawn-Xinhai can you add a d-ts test case for this?,2021-03-09T14:42:40Z
2802,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NDg3NjIz,posva,COMMENTED,,2021-03-09T14:45:19Z
2802,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NTA3NDcz,patak-dev,COMMENTED,,2021-03-09T15:01:52Z
2802,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NTcwOTY0,posva,COMMENTED,,2021-03-09T15:55:01Z
2834,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzODI0MTE0,luwuer,COMMENTED,,2020-12-16T15:50:13Z
2834,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjA4MTY3,edison1105,COMMENTED,,2020-12-17T01:11:23Z
2839,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2NTc3MjQ4,HcySunYang,COMMENTED,,2021-02-09T14:04:36Z
2847,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc1NDQ5MjY5,posva,CHANGES_REQUESTED,can you add a test case?,2021-01-25T14:29:05Z
2847,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzMzkzMTAw,edison1105,APPROVED,,2021-02-04T13:32:46Z
2847,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzNDE4NjMw,HcySunYang,APPROVED,,2021-02-04T13:59:53Z
2847,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MDE5MzE1,posva,APPROVED,,2021-02-07T14:17:54Z
2849,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTU0MzU3,LinusBorg,APPROVED,"Looking good, thanks!

Just a typo needing to be fixed, see comment.",2020-12-19T16:55:05Z
2849,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTU0NDI2,LinusBorg,CHANGES_REQUESTED,"Typo need to be fixed, see comment.

Edit: commited the fix myself. ",2020-12-19T16:56:23Z
2849,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTU0OTQ4,LinusBorg,APPROVED,This should be good now!,2020-12-19T17:04:11Z
2849,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTU4Njc3,posva,CHANGES_REQUESTED,,2020-12-19T18:07:22Z
2849,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTYyMzA2,LinusBorg,COMMENTED,,2020-12-19T19:09:21Z
2849,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTY0MDY1,posva,COMMENTED,,2020-12-19T19:41:23Z
2849,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTY0MTQ3,posva,COMMENTED,,2020-12-19T19:43:00Z
2849,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTY1OTY1,LinusBorg,COMMENTED,,2020-12-19T20:16:49Z
2849,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjYyMjU4,edison1105,APPROVED,,2020-12-21T10:01:51Z
2849,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Mjk0NDQz,posva,APPROVED,,2020-12-21T10:55:24Z
2851,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjY1MTQ4,edison1105,APPROVED,,2020-12-21T10:06:34Z
2857,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjkzNTg0,posva,APPROVED,,2020-12-21T10:54:02Z
2867,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NzM1NzEy,posva,COMMENTED,,2020-12-23T09:08:47Z
2868,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NzMyOTM1,posva,COMMENTED,,2020-12-23T09:03:52Z
2868,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NzMzMjYz,posva,APPROVED,,2020-12-23T09:04:27Z
2868,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODE1OTUw,Alanscut,COMMENTED,,2020-12-23T11:38:46Z
2870,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4NzQ2MjE3,underfin,COMMENTED,,2020-12-25T03:32:38Z
2870,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwMDM4NDMz,edison1105,APPROVED,,2021-02-14T11:31:14Z
2871,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4NzQ0NzQ4,underfin,COMMENTED,,2020-12-25T03:20:40Z
2873,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1MTczMjUw,posva,COMMENTED,,2021-01-11T09:18:05Z
2873,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2Mzg4NzIx,leaon4,COMMENTED,,2021-01-12T15:26:40Z
2873,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMTcyMTk0,LinusBorg,COMMENTED,,2021-02-01T09:45:49Z
2873,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMTkyMjc1,leaon4,COMMENTED,,2021-02-01T10:08:08Z
2878,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4NDE3MzUy,ShikChen,COMMENTED,,2020-12-24T08:58:41Z
2891,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MDY3NTgy,posva,CHANGES_REQUESTED,"Can you add a test?
It's also worth adding support for BigInt in templates
See https://github.com/vuejs/vue/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-desc+Bigint",2020-12-28T09:38:03Z
2891,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjQ2MDQw,posva,APPROVED,,2021-01-05T09:45:25Z
2900,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjQ3MDU1,posva,APPROVED,,2021-01-05T09:46:51Z
2904,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyNDg0NTI4,LinusBorg,APPROVED,,2021-01-06T09:54:38Z
2906,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NDg1NjQ0,posva,COMMENTED,,2020-12-29T11:10:54Z
2906,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMzE2MDc3,LinusBorg,APPROVED,,2020-12-31T10:17:31Z
2908,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NDk3Nzk2,underfin,COMMENTED,,2020-12-29T11:48:52Z
2908,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NTE0MDkx,LinusBorg,COMMENTED,,2020-12-29T12:37:39Z
2909,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyNTIxNTk2,Akryum,APPROVED,,2021-01-06T10:23:07Z
2920,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMzE1NzUw,posva,APPROVED,Thanks!,2020-12-31T10:15:47Z
2920,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMzE1ODI5,LinusBorg,COMMENTED,Thanks!,2020-12-31T10:16:12Z
2924,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNTg3NTY0,posva,APPROVED,,2021-01-01T13:35:04Z
2929,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwOTQ3ODAx,posva,COMMENTED,,2021-01-04T11:07:29Z
2929,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwOTcyNDUz,HcySunYang,COMMENTED,,2021-01-04T11:51:29Z
2930,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyNDgyODAx,LinusBorg,APPROVED,,2021-01-06T09:53:15Z
2930,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwOTM4MDk1,HcySunYang,APPROVED,,2021-02-02T02:35:01Z
2938,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzNzAwNDI0,cexbrayat,CHANGES_REQUESTED,Looks good! Just two tiny nits.,2021-02-04T18:38:14Z
2939,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzk4MzU0,antfu,APPROVED,,2021-01-04T22:40:13Z
2939,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjQwNDMw,posva,APPROVED,Thanks,2021-01-05T09:37:29Z
2940,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjQxNTM1,posva,APPROVED,,2021-01-05T09:39:03Z
2943,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjk4Mzg3,posva,APPROVED,,2021-01-05T11:01:47Z
2945,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyNTA0NzAz,LinusBorg,APPROVED,,2021-01-06T10:10:04Z
2947,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjg4NzQ0,znck,APPROVED,,2021-01-06T02:43:58Z
2947,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyODQ1NTEz,shivkumar5,APPROVED,,2021-01-06T16:18:19Z
2947,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5OTA1MjU0,KaelWD,COMMENTED,,2021-01-31T15:25:50Z
2947,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMTMwNzg3,LinusBorg,COMMENTED,,2021-02-01T08:58:30Z
2947,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMTUxNTY1,znck,COMMENTED,,2021-02-16T11:52:48Z
2947,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxODg3Nzk4,KaelWD,COMMENTED,,2021-02-17T07:04:03Z
2947,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxODg4MjU3,KaelWD,COMMENTED,,2021-02-17T07:05:05Z
2953,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyNDczMDU5,LinusBorg,APPROVED,,2021-01-06T09:46:01Z
2974,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1MTY3ODM4,posva,APPROVED,,2021-01-11T09:10:22Z
2976,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0ODc2NTI5,posva,COMMENTED,IMO rewording the comment to remove the number makes more sense as there is no ordering in the overloads,2021-01-10T15:55:23Z
2976,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMDExMjc1,posva,APPROVED,,2021-01-20T09:11:14Z
3002,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxOTkwOTE0,skirtles-code,COMMENTED,,2021-01-20T08:47:26Z
3002,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNzUwMTc1,edison1105,COMMENTED,,2021-03-28T13:50:32Z
3002,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNzc3OTQw,skirtles-code,COMMENTED,,2021-03-28T20:00:40Z
3002,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyODM0NTc4,edison1105,COMMENTED,,2021-03-29T02:50:21Z
3002,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzODE3MjEw,skirtles-code,CHANGES_REQUESTED,I've made some suggestions. Hope they're helpful.,2021-03-30T03:41:44Z
3002,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzODU0MTg5,edison1105,COMMENTED,,2021-03-30T05:24:03Z
3003,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzNDAzMzk3,edison1105,APPROVED,,2021-02-04T13:44:21Z
3005,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4MzUxNzEx,posva,APPROVED,,2021-01-14T15:34:17Z
3006,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3NjA0Mjcw,edison1105,APPROVED,,2021-02-10T13:29:23Z
3034,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwMDU0Mzgz,HcySunYang,CHANGES_REQUESTED,,2021-01-17T12:50:11Z
3034,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwMTQ3NTM2,yesixuan,COMMENTED,,2021-01-18T03:18:10Z
3034,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwOTk4NDAz,yesixuan,COMMENTED,,2021-01-19T08:23:43Z
3034,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxMTAyNzc3,posva,COMMENTED,,2021-01-19T10:26:09Z
3034,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxMTU2MjM3,yesixuan,COMMENTED,,2021-01-19T11:34:26Z
3034,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAxNDc5NjMx,HcySunYang,APPROVED,,2021-03-02T06:59:33Z
3034,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAxNjU4NDY0,posva,APPROVED,,2021-03-02T10:24:27Z
3039,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5OTA1Nzc1,KaelWD,CHANGES_REQUESTED,There's also `Once` and `OnceCapture`,2021-01-31T15:31:30Z
3039,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzNjUyODc1,LinusBorg,CHANGES_REQUESTED,"@07akioni this needs a rebase, and it would be great if you could add the other event times mentioned above as well.",2021-02-04T17:42:33Z
3039,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg0MDkyMTM4,LinusBorg,APPROVED,,2021-02-05T07:51:48Z
3045,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwOTc4OTUw,LinusBorg,CHANGES_REQUESTED,There's ongoing discussion in #3044 about the actual use of this in terms of real-world use cases. This PR should not be merged until that discussion has shown the change to be useful.,2021-01-19T07:55:01Z
3048,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwNjQyMjQx,posva,APPROVED,,2021-01-18T16:30:11Z
3048,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMTM5MDIy,antfu,APPROVED,,2021-02-01T09:08:01Z
3048,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMTM5OTAw,pikax,APPROVED,,2021-02-01T09:09:02Z
3051,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwOTgwNzQ5,LinusBorg,APPROVED,,2021-01-19T07:58:01Z
3066,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwOTUwODM1,HcySunYang,CHANGES_REQUESTED,,2021-02-02T03:09:45Z
3066,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwOTUzMzE3,HcySunYang,CHANGES_REQUESTED,,2021-02-02T03:17:05Z
3070,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgyMjAxNDQy,HcySunYang,CHANGES_REQUESTED,,2021-02-03T10:12:17Z
3070,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgyMzA0MzUw,HcySunYang,CHANGES_REQUESTED,,2021-02-03T12:21:22Z
3070,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgyNDgxNDEw,HcySunYang,APPROVED,,2021-02-03T15:21:47Z
3070,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1NzgxMjI4,Akryum,COMMENTED,,2021-02-08T18:08:05Z
3074,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0MzYxNTMz,posva,APPROVED,,2021-01-22T15:25:43Z
3074,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzNDA5Njk0,edison1105,APPROVED,,2021-02-04T13:51:09Z
3079,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzODkzNjkz,skirtles-code,COMMENTED,"Added some code suggestions.

~~I don't think #2633 should be closed by this PR. Only one aspect of that issue is addressed here.~~ **Update:** This PR's description has been updated to avoid closing #2633.",2021-03-30T06:42:36Z
3079,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzOTcwMzM3,edison1105,COMMENTED,,2021-03-30T08:16:43Z
3079,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0MDA4MjE1,posva,COMMENTED,,2021-03-30T08:54:50Z
3079,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0MTQyMjkz,edison1105,COMMENTED,,2021-03-30T11:26:36Z
3079,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1ODgwMjY5,HcySunYang,COMMENTED,,2021-04-01T03:52:15Z
3079,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1OTAxNjg5,edison1105,COMMENTED,,2021-04-01T05:03:33Z
3080,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5OTgxOTYy,LinusBorg,COMMENTED,,2021-02-13T17:25:03Z
3080,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwMTMyNDcz,HcySunYang,COMMENTED,,2021-02-15T02:56:54Z
3080,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwMTk0NTA0,LinusBorg,COMMENTED,,2021-02-15T06:47:57Z
3080,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEwNzEzMjMz,LinusBorg,APPROVED,,2021-03-12T11:57:45Z
3081,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczMjU3MzEx,pikax,COMMENTED,,2021-01-21T11:59:58Z
3081,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczODU2NjA0,yangdan8,COMMENTED,,2021-01-22T00:54:16Z
3083,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczOTE0NzEy,HcySunYang,APPROVED,,2021-01-22T02:51:32Z
3083,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0MzU4MDE0,posva,APPROVED,,2021-01-22T15:21:59Z
3083,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0NDM3NjAy,jacekkarczmarczyk,COMMENTED,,2021-01-22T16:51:18Z
3096,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxMDI1NTc3,HcySunYang,COMMENTED,,2021-02-02T06:42:30Z
3096,PRR_kwDOCCum1844WCNN,Fl0pZz,COMMENTED,,2022-04-19T08:39:22Z
3105,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzMDM3Mzc3,HcySunYang,CHANGES_REQUESTED,,2021-02-04T04:58:55Z
3105,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzMTEyMjQ5,cexbrayat,COMMENTED,,2021-02-04T07:51:18Z
3105,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzMTEzNjcx,HcySunYang,APPROVED,,2021-02-04T07:53:37Z
3119,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1MTQ1Mjc2,pikax,APPROVED,,2021-03-05T13:37:52Z
3129,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMTQ5MDYw,antfu,APPROVED,,2021-02-01T09:19:42Z
3129,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMTYzMjk3,HcySunYang,CHANGES_REQUESTED,,2021-02-01T09:35:53Z
3129,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMjQ0MDU5,edison1105,COMMENTED,,2021-02-01T11:08:49Z
3129,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMjQ0NjUx,HcySunYang,APPROVED,,2021-02-01T11:09:31Z
3132,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5OTM0OTMx,posva,CHANGES_REQUESTED,Can you add a test case?,2021-01-31T21:07:35Z
3134,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5ODU4NjEx,HcySunYang,CHANGES_REQUESTED,,2021-01-31T06:25:47Z
3134,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5ODU4Nzg3,HcySunYang,CHANGES_REQUESTED,,2021-01-31T06:29:26Z
3134,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5ODY2Nzk3,edison1105,COMMENTED,,2021-01-31T08:16:04Z
3134,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5ODcwNjc5,HcySunYang,APPROVED,,2021-01-31T08:55:21Z
3136,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwOTY5MDY4,HcySunYang,APPROVED,,2021-02-02T04:05:40Z
3136,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxMjM1NTUw,posva,APPROVED,,2021-02-02T11:15:13Z
3136,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzMDY5NjYy,antfu,APPROVED,,2021-02-04T06:27:14Z
3158,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzMDY5Mjgz,antfu,COMMENTED,,2021-02-04T06:26:16Z
3158,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzMDk1NTU3,antfu,APPROVED,,2021-02-04T07:22:27Z
3165,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg0MTQ2NzI5,pikax,APPROVED,,2021-02-05T09:10:40Z
3165,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg0MTUxMjc0,edison1105,APPROVED,,2021-02-05T09:16:39Z
3170,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MDM2NzA2,posva,APPROVED,,2021-02-07T17:26:45Z
3170,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1Mjc3NTU2,HcySunYang,APPROVED,,2021-02-08T08:59:40Z
3171,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4MjE1Njc1,HcySunYang,CHANGES_REQUESTED,,2021-02-25T05:49:25Z
3171,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4MzkxNzQ5,KaelWD,COMMENTED,,2021-02-25T10:03:22Z
3171,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4MzkyNDY0,KaelWD,COMMENTED,,2021-02-25T10:04:08Z
3179,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg0OTI4ODE3,posva,APPROVED,,2021-02-07T00:17:13Z
3179,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwMDM4ODE0,edison1105,APPROVED,,2021-02-14T11:35:59Z
3185,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MDE1MzYx,HcySunYang,APPROVED,,2021-02-07T13:34:09Z
3185,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2NDMyMjM3,yyx990803,COMMENTED,,2021-02-23T15:01:17Z
3185,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2NTAzMDQy,LinusBorg,COMMENTED,,2021-02-23T16:00:38Z
3192,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1NDA2Mzg3,posva,APPROVED,Thanks!,2021-02-08T11:31:53Z
3200,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5MjkyMDM1,HcySunYang,APPROVED,,2021-02-26T06:47:17Z
3202,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2MjQ0MTA5,edison1105,APPROVED,,2021-02-09T07:26:48Z
3203,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2NDIwNDg1,HcySunYang,APPROVED,,2021-02-09T10:57:39Z
3203,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3MDEzMTU0,suyundukov,CHANGES_REQUESTED,,2021-02-09T21:11:51Z
3203,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwMDM3ODcz,edison1105,COMMENTED,,2021-02-14T11:24:05Z
3205,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2NDE3MDEx,HcySunYang,APPROVED,,2021-02-09T10:53:37Z
3205,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3MDA5MDMw,suyundukov,APPROVED,,2021-02-09T21:06:11Z
3206,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyODk0ODg0,HcySunYang,APPROVED,,2021-03-29T06:22:16Z
3206,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzMDYyNjM0,posva,APPROVED,,2021-03-29T10:04:01Z
3208,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3MDA1NDk4,suyundukov,CHANGES_REQUESTED,"Tests are failing, need to fix them too and I am not quire sure if it's useless, so...",2021-02-09T21:01:16Z
3209,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NTAzMDk3,posva,APPROVED,,2021-03-09T14:58:11Z
3210,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3NjA2NTU4,edison1105,APPROVED,,2021-02-10T13:31:53Z
3210,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkzNDUyMjI0,posva,COMMENTED,"Can you add a test?

I think this is reasonable to add to support `include=""CompA, CompB""`. But at the same time, I don't think it's really worth adding since you should write a coma-separated list (without spaces) 🤔 and it will work: `include=""CompA,CompB""` . Since this syntax will only be used manually and not in a computed (as one would use the array instead: https://v3.vuejs.org/api/built-in-components.html#keep-alive), it would be easy to spot with a linter too",2021-06-27T20:54:04Z
3210,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkzOTA3Njcw,JerryYuanJ,COMMENTED,,2021-06-28T12:42:01Z
3215,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNTUxNTc1,suyundukov,CHANGES_REQUESTED,,2021-02-16T19:24:57Z
3215,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNzk5MTIx,edison1105,COMMENTED,,2021-02-18T02:27:55Z
3217,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3NTQ1MzM3,antfu,COMMENTED,,2021-02-10T12:17:25Z
3217,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3NTQ4NDY1,edison1105,COMMENTED,,2021-02-10T12:21:37Z
3217,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3NTU5OTk2,antfu,APPROVED,,2021-02-10T12:36:31Z
3219,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3NzA4MjAz,HcySunYang,APPROVED,,2021-02-10T15:06:21Z
3219,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3NzE1NjEy,KaelWD,APPROVED,":+1: simpler than I expected, ty. Should I open a new issue for the TSX problem, this doesn't fix it. ",2021-02-10T15:13:02Z
3230,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNTQyMDE1,suyundukov,CHANGES_REQUESTED,,2021-02-16T19:11:16Z
3230,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNTUxODc2,LinusBorg,COMMENTED,,2021-02-16T19:25:21Z
3230,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNTU0MTU5,suyundukov,COMMENTED,,2021-02-16T19:28:30Z
3230,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNTU3MDAx,LinusBorg,COMMENTED,,2021-02-16T19:32:18Z
3230,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNTY1MDA4,jacekkarczmarczyk,COMMENTED,,2021-02-16T19:43:29Z
3230,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MjMyMDk0,posva,COMMENTED,,2021-02-19T14:21:09Z
3230,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MjQ0MDEz,HcySunYang,COMMENTED,,2021-02-19T14:33:42Z
3258,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNjYwMTg3,nandi95,COMMENTED,,2021-02-18T21:28:45Z
3258,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNjYwNTk4,nandi95,COMMENTED,,2021-02-18T21:29:21Z
3258,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNjYzMDk2,nandi95,COMMENTED,,2021-02-18T21:32:55Z
3258,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNjY0ODgx,nandi95,COMMENTED,,2021-02-18T21:35:37Z
3258,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzUzOTcw,HcySunYang,COMMENTED,,2021-02-20T13:50:32Z
3258,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzY1MDY2,nandi95,COMMENTED,,2021-02-20T16:18:00Z
3258,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2MTQ3OTkw,HcySunYang,APPROVED,,2021-02-23T09:41:55Z
3258,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2MTc5NjQ4,posva,APPROVED,"Nice!
Since this is a new feature and it didn't go through an RFC, I think it's worth getting more feedback from the team before merging",2021-02-23T10:19:02Z
3258,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njk5OTMxMTQx,edison1105,APPROVED,,2021-07-06T13:08:31Z
3258,PRR_kwDOCCum184uO2ga,pikax,APPROVED,,2021-10-10T08:47:53Z
3258,PRR_kwDOCCum185PIZ5D,sxzz,APPROVED,,2023-03-07T04:02:47Z
3258,PRR_kwDOCCum185PKLqT,posva,APPROVED,,2023-03-07T10:22:12Z
3259,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MTk2MDIz,posva,APPROVED,,2021-02-19T13:40:17Z
3265,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MDQ5NDMw,HcySunYang,COMMENTED,,2021-02-19T10:19:27Z
3265,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MTMwNzEw,edison1105,COMMENTED,,2021-02-19T12:11:58Z
3265,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MTg4Njkx,posva,APPROVED,,2021-02-19T13:31:34Z
3269,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzA1MTMy,HcySunYang,CHANGES_REQUESTED,,2021-02-20T03:25:17Z
3269,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzE4MDU4,lidlanca,COMMENTED,,2021-02-20T06:29:59Z
3269,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzE4MjEy,lidlanca,COMMENTED,,2021-02-20T06:32:07Z
3269,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzIyODI4,edison1105,APPROVED,,2021-02-20T07:20:10Z
3299,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4MTkxNzky,lidlanca,COMMENTED,,2021-02-25T04:42:26Z
3299,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4MTkyMTI3,HcySunYang,COMMENTED,,2021-02-25T04:43:29Z
3299,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4NTgyNTc4,edison1105,APPROVED,,2021-02-25T13:51:13Z
3307,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4NTg0NDQy,edison1105,APPROVED,,2021-02-25T13:52:42Z
3308,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4NTc5Mjcy,edison1105,APPROVED,,2021-02-25T13:47:47Z
3308,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NjQ5NzY3,LinusBorg,APPROVED,,2021-03-09T17:04:38Z
3309,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NjQ2MTUx,LinusBorg,CHANGES_REQUESTED,,2021-03-09T17:01:12Z
3310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMTQzMzY0,posva,CHANGES_REQUESTED,,2021-02-27T13:36:24Z
3310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMTY1OTc1,HomyeeKing,COMMENTED,,2021-02-27T15:51:25Z
3310,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMTkzOTYw,posva,APPROVED,,2021-02-27T20:47:33Z
3311,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5MjQ5MzE3,edison1105,APPROVED,,2021-02-26T04:44:53Z
3312,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMTIyNDA2,LinusBorg,APPROVED,,2021-02-27T09:15:19Z
3312,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMTI3NzM1,posva,APPROVED,,2021-02-27T09:50:44Z
3313,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMTQyMzI5,posva,APPROVED,,2021-02-27T13:19:54Z
3319,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMTM2ODQ5,pikax,APPROVED,,2021-02-27T11:58:29Z
3319,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMTQzMDkw,posva,APPROVED,,2021-02-27T13:32:23Z
3323,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMjMyNjAy,LinusBorg,COMMENTED,,2021-02-28T08:14:39Z
3323,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMjMzNjA1,tjk,COMMENTED,,2021-02-28T08:28:32Z
3323,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAxNDY5NzE1,HcySunYang,APPROVED,,2021-03-02T06:39:22Z
3326,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NjQxNjYx,LinusBorg,COMMENTED,,2021-03-09T16:57:11Z
3326,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4MjQ3Njk2,tjk,COMMENTED,,2021-03-10T01:10:10Z
3326,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEwNDEyNTUx,HcySunYang,CHANGES_REQUESTED,,2021-03-12T02:55:45Z
3326,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEwNDEzMjk3,HcySunYang,COMMENTED,,2021-03-12T02:57:46Z
3326,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEwNDEzODAx,HcySunYang,APPROVED,,2021-03-12T02:59:14Z
3334,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAxODc0NDY1,yyx990803,COMMENTED,,2021-03-02T14:27:31Z
3346,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAzNDA3MjU5,bgoscinski,COMMENTED,,2021-03-03T22:23:36Z
3346,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAzNjUwODUw,HcySunYang,COMMENTED,,2021-03-04T02:36:59Z
3346,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2MzUzMTgz,posva,APPROVED,"At first I was skeptic about the `Set()` but  I think it makes sense by default and it's easy to still use the same function twice if necessary:

```js
onInvalidate(() => fn())
onInvalidate(() => fn())
```",2021-04-01T14:51:40Z
3346,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2MzU4ODU5,edison1105,APPROVED,,2021-04-01T14:56:59Z
3370,PRR_kwDOCCum186j9tUX,unrevised6419,COMMENTED,,2025-04-08T17:29:09Z
3370,PRR_kwDOCCum186j9vY7,unrevised6419,COMMENTED,,2025-04-08T17:32:26Z
3377,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA5ODUzNDMy,HcySunYang,COMMENTED,,2021-03-11T14:57:03Z
3377,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA5ODk3ODQw,LinusBorg,COMMENTED,,2021-03-11T15:34:28Z
3377,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA5OTAwMjI5,HcySunYang,COMMENTED,,2021-03-11T15:36:34Z
3377,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE2OTI0NTk2,HcySunYang,APPROVED,,2021-03-20T16:19:46Z
3384,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1ODQ4Mjkx,edison1105,CHANGES_REQUESTED,,2021-03-07T13:53:27Z
3384,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY3MjU1OTUw,yyx990803,COMMENTED,,2021-05-24T22:50:56Z
3387,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1OTgyMzg1,syuilo,COMMENTED,,2021-03-08T05:55:40Z
3387,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2MDAxMTM0,HcySunYang,COMMENTED,,2021-03-08T06:45:58Z
3394,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3MTI2MDkz,posva,COMMENTED,,2021-03-09T08:18:35Z
3395,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3MTI2ODEx,posva,COMMENTED,This looks better than #3394 and made me realize my mistake in the comment I left there 😅 ,2021-03-09T08:19:36Z
3395,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3MTY5OTA5,HcySunYang,COMMENTED,,2021-03-09T09:08:55Z
3395,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3MTcyMjE2,edison1105,APPROVED,,2021-03-09T09:11:25Z
3395,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NDI4OTQw,kospl,COMMENTED,,2021-03-09T13:53:52Z
3395,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE1OTAyNzc1,kospl,CHANGES_REQUESTED,,2021-03-18T21:50:55Z
3395,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNTc0ODMx,kospl,APPROVED,,2021-03-26T22:42:32Z
3398,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3MTIyMzgz,posva,COMMENTED,I think we should align with modern naming conventions and use safelist or allowlist instead of whitelist,2021-03-09T08:13:51Z
3399,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4Mjg4NDAx,HcySunYang,COMMENTED,,2021-03-10T02:51:31Z
3399,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4NDI5Mjc4,pikax,COMMENTED,,2021-03-10T08:11:43Z
3399,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEwNDA4MDE4,HcySunYang,APPROVED,,2021-03-12T02:43:25Z
3399,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjExMjE2ODY4,johnsoncodehk,COMMENTED,,2021-03-12T23:22:37Z
3399,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjExNTgzNDE5,pikax,COMMENTED,,2021-03-13T09:39:26Z
3399,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjExNjAyODc3,johnsoncodehk,COMMENTED,,2021-03-13T14:51:19Z
3399,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjExNjA5MzM1,pikax,COMMENTED,,2021-03-13T16:18:45Z
3399,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjExNjIxNjE3,johnsoncodehk,COMMENTED,,2021-03-13T18:57:09Z
3399,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE2MTA3NzE4,HcySunYang,APPROVED,,2021-03-19T07:00:43Z
3399,PRR_kwDOCCum1841UXbK,znck,COMMENTED,,2022-02-27T18:08:59Z
3399,PRR_kwDOCCum1841VXtk,pikax,COMMENTED,,2022-02-28T08:49:06Z
3406,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA5NDI0NDcw,HcySunYang,APPROVED,,2021-03-11T06:19:20Z
3409,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjExNzg1MjI4,HcySunYang,APPROVED,,2021-03-15T02:28:42Z
3435,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0MDI0MjQ3,HcySunYang,APPROVED,,2021-03-17T08:21:53Z
3435,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE1MjIyOTg4,posva,COMMENTED,,2021-03-18T10:47:44Z
3435,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE2MDQ3MjA5,shen-zhao,COMMENTED,,2021-03-19T04:07:49Z
3435,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE2MDU5NDQ2,edison1105,APPROVED,,2021-03-19T04:50:01Z
3435,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE2NDAwNDY5,posva,COMMENTED,,2021-03-19T13:30:07Z
3435,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE2ODg4NTM2,shen-zhao,COMMENTED,,2021-03-20T06:31:00Z
3435,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzOTIxMjI5,posva,APPROVED,,2021-03-30T07:20:49Z
3435,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0Mzg4ODk5,yyx990803,CHANGES_REQUESTED,"`splice` is significantly slower than `push` though, so I actually prefer returning `-1` from `findInsertionIndex` whenever we can.",2021-03-30T15:13:20Z
3443,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE1Mjc1NDIy,edison1105,APPROVED,,2021-03-18T11:35:38Z
3449,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3MTI5MDM4,HcySunYang,CHANGES_REQUESTED,,2021-03-22T03:39:14Z
3449,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3MTcxNDA4,HcySunYang,APPROVED,,2021-03-22T06:02:18Z
3454,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3MzQ5ODM3,posva,COMMENTED,,2021-03-22T10:14:35Z
3454,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3MzUyMDk4,HcySunYang,COMMENTED,,2021-03-22T10:17:01Z
3454,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3MzU5OTQ0,posva,COMMENTED,,2021-03-22T10:25:47Z
3454,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3MzY0NDY1,HcySunYang,COMMENTED,,2021-03-22T10:30:47Z
3454,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3MzY5OTU2,posva,COMMENTED,,2021-03-22T10:36:57Z
3454,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3NTEyODE0,rhengles,COMMENTED,,2021-03-22T13:22:29Z
3461,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE4MzA5MDY4,posva,COMMENTED,,2021-03-23T08:22:04Z
3461,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwNjUxNjI4,HcySunYang,COMMENTED,,2021-03-25T04:36:18Z
3461,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyMDA1NzE0,posva,COMMENTED,,2021-03-26T10:58:38Z
3473,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU5NjQ1MTY2,HcySunYang,APPROVED,,2021-05-14T08:47:39Z
3474,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5NDgzNjgx,posva,COMMENTED,,2021-03-24T09:18:09Z
3474,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMzQwMTE3,edison1105,APPROVED,,2021-03-25T00:47:17Z
3476,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5NjA3MzM0,posva,APPROVED,,2021-03-24T11:29:19Z
3476,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5NjQ0NjEx,edison1105,APPROVED,,2021-03-24T12:14:44Z
3476,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5ODM3MjA1,Gavin-Gong,APPROVED,,2021-03-24T15:02:22Z
3477,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5ODE0Njcx,posva,APPROVED,,2021-03-24T14:47:56Z
3477,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMzQ1NDQ2,edison1105,APPROVED,,2021-03-25T01:03:17Z
3477,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMzczMTgw,HcySunYang,APPROVED,,2021-03-25T01:39:32Z
3481,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxMDE1MDcz,pikax,APPROVED,,2021-03-25T11:47:06Z
3484,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxMTA2MzIx,posva,APPROVED,,2021-03-25T13:25:21Z
3501,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzNTYwMTQ2,yyx990803,CHANGES_REQUESTED,,2021-03-29T19:09:55Z
3501,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzUxNjcyODk0,ericdrobinson,COMMENTED,,2021-09-10T18:10:11Z
3508,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzMDMzMzY3,posva,COMMENTED,,2021-03-29T09:30:15Z
3508,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzMDM1Mjc5,posva,COMMENTED,,2021-03-29T09:32:24Z
3522,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2MjkwNjEx,edison1105,APPROVED,,2021-04-01T13:51:31Z
3544,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4NjQ4NTA4,pikax,APPROVED,,2021-04-06T07:22:28Z
3544,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4OTQ0MzI3,edison1105,APPROVED,,2021-04-06T13:04:34Z
3546,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4OTI2Njg1,edison1105,CHANGES_REQUESTED,,2021-04-06T12:46:54Z
3564,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMxMDk1NzIy,posva,APPROVED,,2021-04-08T08:06:14Z
3570,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQzMDgzNTA5,pikax,APPROVED,"LGTM 

The type is slightly different but I think there's no real world implications 

```ts

type StringKeyOf<T> = Extract<keyof T, string>

type EventHandlers<E> = {
  [K in StringKeyOf<E>]?: E[K] extends Function ? E[K] : (payload: E[K]) => void
}

type EventHandlers2<E> = {
  [K in keyof E]?: E[K] extends Function ? E[K] : (payload: E[K]) => void
}

declare const SS: unique symbol
type DDD = EventHandlers<{ [SS]: 1 } & { [number: number]: 'ee' }>
type DDD2 = EventHandlers2<{ [SS]: 1 } & { [number: number]: 'ee' }>
```

An extra set of eyes might be good here",2021-04-23T09:02:33Z
3575,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyMTQyNzc2,Justineo,COMMENTED,,2021-04-09T07:57:02Z
3575,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyMTQ3NTk3,HcySunYang,COMMENTED,,2021-04-09T08:02:43Z
3575,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyMTUyMjAz,Justineo,COMMENTED,,2021-04-09T08:08:24Z
3575,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyMTUzNjY0,HcySunYang,COMMENTED,,2021-04-09T08:10:10Z
3575,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyMjAzODI3,Justineo,APPROVED,,2021-04-09T09:08:06Z
3575,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyMjEzNTQ2,posva,APPROVED,,2021-04-09T09:19:05Z
3578,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyMjA2NjQ2,edison1105,APPROVED,,2021-04-09T09:11:17Z
3579,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNjUwNzM3,hyf0,COMMENTED,,2021-04-09T17:39:28Z
3579,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNjYzMzM2,hyf0,COMMENTED,,2021-04-09T17:56:38Z
3579,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNjY4NjE3,hyf0,COMMENTED,,2021-04-09T18:03:32Z
3579,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM3MzM5MDcz,hyf0,COMMENTED,,2021-04-16T05:25:02Z
3589,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzMzc0OTc3,HcySunYang,APPROVED,,2021-04-12T10:24:49Z
3592,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxMjczMDI0,posva,APPROVED,,2021-05-28T12:59:08Z
3600,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM2NTIyMDU2,Justineo,COMMENTED,,2021-04-15T10:21:31Z
3600,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM2NTM5NzM2,HcySunYang,COMMENTED,,2021-04-15T10:42:26Z
3604,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM2Mjk2NDE0,LinusBorg,APPROVED,,2021-04-15T06:01:28Z
3605,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM2MzEwNDE2,HcySunYang,APPROVED,,2021-04-15T06:27:00Z
3605,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM2MzcyMjE1,posva,APPROVED,,2021-04-15T07:50:28Z
3607,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM2NDE0MTQ0,pikax,COMMENTED,,2021-04-15T08:35:44Z
3608,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM2NDUwNjA5,HcySunYang,APPROVED,,2021-04-15T09:06:00Z
3624,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4MjY4ODAw,TheDro,COMMENTED,,2021-04-17T19:12:33Z
3624,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxMjc1ODI4,posva,COMMENTED,,2021-05-28T13:02:13Z
3624,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc2Nzc1NzEz,TheDro,COMMENTED,,2021-06-05T12:13:49Z
3626,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4MzIwODcy,HcySunYang,APPROVED,,2021-04-18T11:30:56Z
3629,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NDQ4MDQ5,HcySunYang,CHANGES_REQUESTED,,2021-04-19T04:13:32Z
3629,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NDcyMzU0,HcySunYang,CHANGES_REQUESTED,,2021-04-19T05:31:24Z
3629,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NDczNTU2,HcySunYang,COMMENTED,,2021-04-19T05:34:53Z
3629,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NDc4MTAx,edison1105,COMMENTED,,2021-04-19T05:46:40Z
3629,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4Njc0NDAw,HcySunYang,APPROVED,,2021-04-19T09:51:12Z
3633,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxMjc3NzI2,posva,APPROVED,,2021-05-28T13:04:16Z
3633,PRR_kwDOCCum184wY3jm,LinusBorg,APPROVED,,2021-11-20T12:16:01Z
3635,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM5NTE3ODU1,edison1105,APPROVED,,2021-04-20T05:31:01Z
3637,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0Njg1NzY5,DannyFeliz,COMMENTED,,2021-06-02T21:12:52Z
3645,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQzMTI1NzE5,pikax,APPROVED,,2021-04-23T09:50:55Z
3645,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcyMTgyODMy,posva,APPROVED,,2021-05-31T10:33:04Z
3656,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQzMDcyMTUw,pikax,CHANGES_REQUESTED,,2021-04-23T08:49:43Z
3656,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQzMDk2MDU4,johnsoncodehk,COMMENTED,,2021-04-23T09:16:55Z
3656,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQzMDk2OTk2,pikax,APPROVED,,2021-04-23T09:17:53Z
3657,PRR_kwDOCCum184tEudL,LinusBorg,APPROVED,,2021-09-16T12:08:11Z
3663,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ0MDMzODYx,sapphi-red,COMMENTED,,2021-04-24T13:43:00Z
3669,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ1ODQ3OTcy,posva,APPROVED,,2021-04-27T13:22:13Z
3670,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ2OTExMDEw,monkingxue,COMMENTED,,2021-04-28T10:49:28Z
3670,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ2OTMxNjU5,HcySunYang,COMMENTED,,2021-04-28T11:14:21Z
3670,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ3MDAwMTI2,edison1105,APPROVED,,2021-04-28T12:31:06Z
3677,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ0NDU0MTgw,edison1105,APPROVED,,2021-04-26T09:26:34Z
3682,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ1MDU3NzYz,pikax,COMMENTED,,2021-04-26T19:49:28Z
3682,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ1MjY3NTM3,hyf0,COMMENTED,,2021-04-27T01:40:42Z
3685,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU4MjEzMDgx,tjk,COMMENTED,,2021-05-12T17:56:20Z
3690,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ3NzgxODEz,HcySunYang,COMMENTED,,2021-04-29T02:51:21Z
3692,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjUwNzU5NDM4,ftonato,CHANGES_REQUESTED,,2021-05-03T22:04:33Z
3692,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQwMjE2Njgw,mankeheaven,COMMENTED,,2021-08-27T07:23:14Z
3692,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQwMjU2MjAz,ftonato,COMMENTED,,2021-08-27T08:11:57Z
3692,PRR_kwDOCCum185SShmq,sxzz,COMMENTED,"We have another PR #6160 resolved the comments I left, so I'll close this one.",2023-04-12T06:17:29Z
3700,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ5MzQxMTkx,HcySunYang,APPROVED,,2021-04-30T15:33:27Z
3724,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU2MjQxMzU5,HcySunYang,APPROVED,,2021-05-11T02:56:37Z
3726,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjUzNjYwMDk5,pikax,APPROVED,,2021-05-06T16:28:43Z
3726,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU0MDYyNjkx,HcySunYang,APPROVED,,2021-05-07T04:05:26Z
3740,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU0NTIzOTAz,edison1105,APPROVED,,2021-05-07T14:32:10Z
3742,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU1MDQ1Njk5,Gavin-Gong,CHANGES_REQUESTED,,2021-05-09T06:38:50Z
3742,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU1MTY0OTI0,edison1105,COMMENTED,,2021-05-10T00:58:00Z
3742,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU4NDE0MzUx,yyx990803,CHANGES_REQUESTED,,2021-05-12T21:53:51Z
3742,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU4NTA5MDA0,edison1105,COMMENTED,,2021-05-13T01:24:25Z
3742,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcwODcwMTEy,yyx990803,COMMENTED,,2021-05-28T01:52:37Z
3753,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU2MjM2NTcy,HcySunYang,APPROVED,,2021-05-11T02:42:47Z
3754,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU2MjM1ODUy,HcySunYang,APPROVED,,2021-05-11T02:40:35Z
3755,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU2MjM1NTY2,HcySunYang,APPROVED,,2021-05-11T02:39:42Z
3789,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYxNzU2NjE4,posva,COMMENTED,,2021-05-18T07:55:23Z
3791,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM3MjY3MDg3,edison1105,APPROVED,,2021-08-24T14:01:05Z
3798,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM4MDQxMDEz,pikax,COMMENTED,,2021-08-25T08:14:43Z
3798,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM4MTc4ODM4,Zclhlmgqzc,COMMENTED,,2021-08-25T10:31:32Z
3820,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY2MjI5MDY0,HcySunYang,APPROVED,,2021-05-23T05:07:31Z
3820,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY5ODIxMDU4,antfu,APPROVED,,2021-05-27T07:16:53Z
3820,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY5ODkyNjc1,pikax,APPROVED,,2021-05-27T08:32:02Z
3820,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY5OTc2NTc4,cexbrayat,COMMENTED,,2021-05-27T09:49:31Z
3820,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcwMDAzNTk0,hyf0,COMMENTED,,2021-05-27T10:18:03Z
3820,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcwMDA0NTY4,hyf0,COMMENTED,,2021-05-27T10:19:10Z
3822,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY3MzU2ODc1,HcySunYang,CHANGES_REQUESTED,,2021-05-25T03:23:39Z
3823,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY2Mzg1MjYw,hyf0,COMMENTED,,2021-05-24T04:27:53Z
3823,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY2Mzg2NTc0,HcySunYang,COMMENTED,,2021-05-24T04:32:12Z
3823,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY2NTUyMjgz,gzzhanghao,COMMENTED,,2021-05-24T09:18:34Z
3823,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY2NTY2NTY1,HcySunYang,COMMENTED,,2021-05-24T09:36:55Z
3823,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY2NTg2NTkx,gzzhanghao,COMMENTED,,2021-05-24T10:02:27Z
3823,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY2OTM2MTI0,yyx990803,COMMENTED,,2021-05-24T16:14:41Z
3837,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxNTA5MTE0,jacekkarczmarczyk,COMMENTED,,2021-05-28T17:24:19Z
3837,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxNTI5NjI0,HomyeeKing,COMMENTED,,2021-05-28T17:54:37Z
3839,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcyMTY4MzYz,posva,CHANGES_REQUESTED,Thank you! Can you add a test case?,2021-05-31T10:12:54Z
3845,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxNzM1NTM4,posva,APPROVED,,2021-05-29T10:56:04Z
3847,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA2NzYwMzg2,yyx990803,COMMENTED,,2021-07-14T22:05:13Z
3847,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3NjgwNjUy,AkiyamaKunka,COMMENTED,,2021-08-11T16:09:59Z
3848,PRR_kwDOCCum185X0dRp,sxzz,APPROVED,,2023-06-10T09:42:33Z
3867,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjczMDc1NzYy,posva,COMMENTED,,2021-06-01T13:31:19Z
3867,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjczMTIxMjkx,07akioni,COMMENTED,,2021-06-01T14:08:51Z
3880,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc1MDY5Mzky,posva,COMMENTED,,2021-06-03T09:24:48Z
3882,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg4MjI0NTk5,posva,COMMENTED,,2021-06-21T09:37:01Z
3882,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA4ODYwMTEw,cryi,COMMENTED,,2021-07-17T07:13:26Z
3912,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc4OTkxNTE0,benlesh,COMMENTED,,2021-06-08T20:54:33Z
3912,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc5MDAzNjQ0,yyx990803,COMMENTED,,2021-06-08T21:09:55Z
3912,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc5MDIxMDQ0,benlesh,COMMENTED,,2021-06-08T21:34:44Z
3925,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc5ODM3Mjc3,eunjae-lee,COMMENTED,,2021-06-09T15:41:17Z
3925,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc5ODU2Nzcx,yyx990803,COMMENTED,,2021-06-09T15:58:40Z
3926,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjgxNjUxMTI0,posva,CHANGES_REQUESTED,,2021-06-11T09:46:38Z
3926,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjgyMzI0MDgx,meteorlxy,COMMENTED,,2021-06-12T13:01:38Z
3926,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjgyMzI1MTYx,Amour1688,COMMENTED,,2021-06-12T13:17:57Z
3926,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg3OTE3NzE4,yyx990803,CHANGES_REQUESTED,,2021-06-20T15:27:05Z
3926,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg4MTk5NjE4,posva,COMMENTED,,2021-06-21T09:10:10Z
3926,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg4MjI3NTcx,Justineo,COMMENTED,,2021-06-21T09:40:20Z
3926,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg4MjY1OTk2,posva,COMMENTED,,2021-06-21T10:24:10Z
3926,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkwNDA2ODg4,posva,APPROVED,,2021-06-23T09:14:17Z
3928,PRR_kwDOCCum186ucQ0i,skirtles-code,COMMENTED,"I made an attempt at benchmarking this:

- [Playground](https://play.vuejs.org/#eNrtV21v2zYQ/is3fakMvySx96l1jGVD1mVYuiHJl80yBlmibTkSqYqUksLwf+8dKVFU4rhFPxVFBCSi7p57e8g7JjvvIs9HVcm8t95URkWSK5BMlfks4EmWi0LBDgoWRiqpGOxhVYgM3iD+jaNfM3XLPpaMRy1kdOJIR1v5An582GD8ssXksMXEWAQ8ElwquL367xLOYXyKTyO7uLm5+Pf/vy4/vL/7A3VnpGl0YVFIlM0XJFqJAvyUKUhQdPoOX1Pt8B30+0kPdgEHsGa1FQD9WMutsdyipRuWPGxrD0DWo7yUG/86VJtREfJYZH6vR8o95aER0kBwhQotNqFVkiV8La/DHEM1O+Rz9gAo0l5axAi31HfIGmDKRwHjLyImNQLZKjnGFhxicafh/lrWJRITRGvOCmQmC+kocPHga7uarZZIsdL1WnrWsq7a0mErZ3fhPeOHPMMQpAE7uWPelJRh0po3fNoCMhYnIddBTQ4FdkLB9T4pcYtHkcW+Hw5g2YPzGSwxVtibkzZlfK02MJvBGZ4F9Do9Mc2EbYQfimV5GiqGXwDTZakURvslSpPo/jzwWt5aenuBp8EA7wWcabMTY/f1PsYdJ+NvczLpOJk8d6LCZcpgKYqYFTVwqjYsjOsP+mwUtXL2O/KDr64QYzN5QH6td6WjwA8bC+VtsKlaiviTGxmqIR4QLG7F6YA5h+KefZJ4EpvqDD6e7Xaw4iMeZjjL9ui9rcPqn5ysFe+NMuw5PI8zbD5qZVHy2Oe93osuHFh96p47fW7erduWimvaBFzjqj1q3sBTEltmlaxxOAqOI16f6sCLRJYnKSv+zuncy8B72/Rc4IVpKh7+1DJVlGzQyKMNi+4PyLfykWSB90/BJCsqFnhWp8ICazHqy9sP7BHXVpmJuEwRfUR5w6RIS8rRwH5FvjBtB6ezvdLXBLJ3Jy8fFeOyKYoS1eND4wMP763fjpTepjsZ/VyPnT2y2L3JkEb2qO8lOzgcgDM9zLSi8UwjQmKTMZp8jQLpKlNF18epvj/0hTOA7QDKAVQDiFoojpfaixk0dng6FxRqcNHv2/FpB+uVsZ0nOgxAsgLK8gp+Okdriwd9aZms5ubVzLWhHmsGVFvPtwsMSm4cBwA5RkEv21ZSe9KjN9HlmwfTwy0z+0MPcm0WJdXUfFQ2JSeXRvmwwZ0Ev8REqk4WEVqhuE9imsmtpsm+LjNaHKzCJBGhA8d0DyyVrAuj9PQ+PanBLizXOkoTtlwsOvEIVcKssxkOm41VZx+cIA3J6BfRyZMk9Ev/oqI6ZJKwZdgJ0DA7HHaycsNURkTm+bzSVjpIfWcaqL4Lux1Ef9odb6Hxt/TQawv9yC30vDmOtYY1PdAW31k30L8tx7th8nqjvLbDD9wO+89o/QG+)

where:

- `getSequence` is the existing implementation.
- `getSequence2` is the implementation in this PR.
- `getSequence3` removes the conditional but leaves the `const result = [0]` unchanged.

Running that benchmark in both Chrome and Firefox, it seems that `getSequence2` is fairly consistently slower than `getSequence`.

`getSequence3` is about the same as `getSequence`, though `getSequence3` is marginally faster.

Perhaps I'm missing something, but it seems that changing `const result = [0]` to `const result = []` has actually made things slower.",2025-06-13T22:13:10Z
3961,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg2MDQ2NDA4,posva,APPROVED,,2021-06-17T08:57:07Z
3962,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg1MDEyMzI2,posva,COMMENTED,,2021-06-16T10:48:19Z
3962,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg1MDEyNjc2,posva,COMMENTED,,2021-06-16T10:48:41Z
3962,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg1MDIwMDUz,edison1105,CHANGES_REQUESTED,,2021-06-16T10:57:29Z
3962,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg1MTExMDc2,edison1105,APPROVED,,2021-06-16T12:38:17Z
3962,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg1ODkzNzEy,cexbrayat,APPROVED,,2021-06-17T06:01:13Z
3962,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg2MDE4NDg5,posva,COMMENTED,,2021-06-17T08:30:31Z
3962,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg2MDIyMzg5,posva,COMMENTED,,2021-06-17T08:34:22Z
3962,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg2MDIzMTEy,posva,COMMENTED,,2021-06-17T08:35:03Z
3968,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg2MDMyNzcx,posva,CHANGES_REQUESTED,Can you add a test?,2021-06-17T08:44:21Z
3968,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg4ODU0MDg0,yyx990803,COMMENTED,,2021-06-21T20:56:18Z
3969,PRR_kwDOCCum185DO-hO,antfu,APPROVED,,2022-10-03T08:41:21Z
3969,PRR_kwDOCCum185DqTkQ,sxzz,APPROVED,,2022-10-08T01:53:46Z
3969,PRR_kwDOCCum185DqmrS,posva,CHANGES_REQUESTED,I think we should also handle the case where a plugin options are optional and it can be used in both scenarios: with the option provided and without them,2022-10-08T16:40:13Z
3969,PRR_kwDOCCum185DqzBM,tony19,COMMENTED,,2022-10-09T03:02:48Z
3969,PRR_kwDOCCum185Dqzt6,tony19,COMMENTED,,2022-10-09T03:47:05Z
3969,PRR_kwDOCCum185DtRU4,posva,CHANGES_REQUESTED,,2022-10-10T12:30:50Z
3969,PRR_kwDOCCum185Dvdoz,posva,CHANGES_REQUESTED,I added stricter tests and refactored the options to make it work at https://github.com/tony19-contrib/vue-next/pull/1,2022-10-10T20:47:54Z
3969,PRR_kwDOCCum185DxpSr,posva,COMMENTED,,2022-10-11T08:59:59Z
3969,PRR_kwDOCCum185Er2xP,tony19,COMMENTED,,2022-10-23T18:58:15Z
3969,PRR_kwDOCCum185Er9o1,posva,APPROVED,,2022-10-23T21:20:32Z
3991,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkwMzcyODU1,posva,COMMENTED,,2021-06-23T08:41:39Z
3991,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkwMzg0Mjk3,posva,COMMENTED,,2021-06-23T08:52:37Z
3992,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkwMzY4NTg5,posva,COMMENTED,,2021-06-23T08:37:24Z
3992,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkwMzY4NzEz,posva,COMMENTED,,2021-06-23T08:37:31Z
3992,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkwMzcxMjM2,posva,CHANGES_REQUESTED,can you add a test case?,2021-06-23T08:40:01Z
3994,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkwMzYyMjY1,posva,APPROVED,,2021-06-23T08:31:14Z
4014,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkzOTAxODIx,posva,APPROVED,Thanks!,2021-06-28T12:35:48Z
4077,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA3NDMyNzA2,edison1105,APPROVED,,2021-07-15T14:34:15Z
4079,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzAyMzQ1MTEw,yyx990803,COMMENTED,,2021-07-08T17:48:33Z
4100,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzAzNDg0OTU5,posva,COMMENTED,,2021-07-10T08:52:38Z
4100,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzAzNDg1MDM5,pikax,COMMENTED,,2021-07-10T08:54:02Z
4103,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzAzNjA4NzM1,posva,APPROVED,,2021-07-11T17:25:37Z
4112,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA1MTc2MDkz,yyx990803,COMMENTED,,2021-07-13T13:19:24Z
4141,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA4OTM0ODEz,edison1105,APPROVED,,2021-07-17T11:31:52Z
4150,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEwMjcyMzA5,posva,APPROVED,,2021-07-20T07:43:38Z
4156,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEwODg5MTcw,LinusBorg,COMMENTED,,2021-07-20T17:29:02Z
4162,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEyNDk4Nzcx,pikax,COMMENTED,"Can you update the test ""should keep symbols"" on [ref.spec.ts](https://github.com/Picknight/vue-next/blob/pick/types/packages/reactivity/__tests__/ref.spec.ts#L152-L165)
```ts
  it('should keep symbols', () => {
    const customSymbol = Symbol()
    const obj = {
      [Symbol.asyncIterator]: { a: 1 },
      [Symbol.unscopables]: { b: '1' },
      [Symbol.match]: ref(1),
      [customSymbol]: { c: [1, 2, 3] }
    }

    const objRef = ref(obj)

    expect(objRef.value[Symbol.asyncIterator]).toBe(obj[Symbol.asyncIterator])
    expect(objRef.value[Symbol.unscopables]).toBe(obj[Symbol.unscopables])
    expect(objRef.value[Symbol.match]).toStrictEqual(ref(1))
    expect(objRef.value[customSymbol]).toStrictEqual(obj[customSymbol])
  })
```
Because without that test, all the tests pass even without the `ExtractSymbol`",2021-07-22T08:45:33Z
4162,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEzNDY4MDIy,Picknight,COMMENTED,,2021-07-23T07:42:09Z
4162,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEzNDcwMzYw,pikax,COMMENTED,,2021-07-23T07:45:48Z
4162,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEzNjQ0NDU0,Picknight,COMMENTED,,2021-07-23T11:43:06Z
4162,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEzNjQ2NTYy,pikax,COMMENTED,,2021-07-23T11:46:28Z
4162,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEzNjQ5ODU5,Picknight,COMMENTED,,2021-07-23T11:51:32Z
4162,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE0MjQ5ODcy,pikax,APPROVED,,2021-07-24T17:38:32Z
4165,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzExNTAzMTM5,posva,COMMENTED,,2021-07-21T10:31:21Z
4166,PRR_kwDOCCum185DPDPa,antfu,APPROVED,,2022-10-03T08:56:17Z
4176,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEyNTc5NjIw,posva,COMMENTED,,2021-07-22T10:20:01Z
4176,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEyNTgyMTEz,Otto-J,COMMENTED,,2021-07-22T10:23:07Z
4176,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEyOTM0MTgx,posva,COMMENTED,,2021-07-22T15:28:53Z
4176,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEyOTM0NzU4,posva,APPROVED,,2021-07-22T15:29:25Z
4177,PRR_kwDOCCum185DO9Ul,antfu,APPROVED,,2022-10-03T08:37:46Z
4202,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE2NzA4Njc2,posva,APPROVED,,2021-07-28T08:12:40Z
4211,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE4Nzk4NTI5,posva,CHANGES_REQUESTED,Can you add a test?,2021-07-30T07:28:51Z
4216,PRR_kwDOCCum184w2pXh,lmiller1990,APPROVED,I hope we can merge this soon!,2021-11-30T22:40:36Z
4216,PRR_kwDOCCum184xE-MT,LinusBorg,APPROVED,,2021-12-05T12:43:24Z
4223,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1MzM2MjUw,antfu,APPROVED,I think it makes sense to expose the type (currently in VueUse we copied the type to make it work),2021-08-09T12:46:12Z
4238,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIwMTc2NTk5,posva,APPROVED,,2021-08-02T13:02:52Z
4239,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIwOTMzOTY1,posva,COMMENTED,,2021-08-03T08:38:54Z
4239,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIwOTQ5MjA0,webfansplz,COMMENTED,,2021-08-03T08:54:28Z
4239,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIwOTc3NTQw,posva,COMMENTED,,2021-08-03T09:22:54Z
4239,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIwOTg4ODE2,webfansplz,COMMENTED,,2021-08-03T09:34:26Z
4239,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0Nzk3Njg0,webfansplz,COMMENTED,,2021-08-07T06:43:26Z
4239,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1MTI3OTA1,posva,COMMENTED,,2021-08-09T08:22:11Z
4239,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1MTM2NjEx,webfansplz,COMMENTED,,2021-08-09T08:32:42Z
4239,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1MTM3Mjg1,posva,APPROVED,,2021-08-09T08:33:30Z
4242,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIyMDMzNzU3,posva,APPROVED,I don't remember the reason for symbol not being supported before and I couldn't find any old issue or PR. I would say this is worth adding.,2021-08-04T08:57:02Z
4242,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIyMDg2Mzg3,kritzware,APPROVED,,2021-08-04T09:51:32Z
4247,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIyMjM4Mzcx,edison1105,COMMENTED,,2021-08-04T12:48:09Z
4247,PRR_kwDOCCum184taPYa,cyfung1031,COMMENTED,,2021-09-23T10:42:32Z
4247,PRR_kwDOCCum184taPnn,cyfung1031,CHANGES_REQUESTED,"Just use `v-bind=""{...propsA, ...propsB}""`
don't need this PR",2021-09-23T10:43:38Z
4257,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIyOTk5NTcy,posva,COMMENTED,Thanks! This seems to only handle the `!` operator but not casting `a as number`/`<number>a`,2021-08-05T07:00:23Z
4258,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIyOTk1NzY4,posva,APPROVED,,2021-08-05T06:55:15Z
4271,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0NzgzNzg3,Amour1688,APPROVED,,2021-08-07T02:33:04Z
4273,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTEwMDAy,edison1105,CHANGES_REQUESTED,,2021-08-08T14:41:48Z
4273,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTEwODA1,Aaminly,COMMENTED,,2021-08-08T14:51:31Z
4273,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTEwOTk2,Aaminly,COMMENTED,,2021-08-08T14:53:23Z
4273,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTE3Mjcy,posva,CHANGES_REQUESTED,Can you add a failing test case that would pass with this change?,2021-08-08T16:07:23Z
4273,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTU1MDg4,edison1105,CHANGES_REQUESTED,,2021-08-09T00:40:32Z
4301,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3MzM5ODE2,posva,APPROVED,,2021-08-11T10:56:48Z
4302,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3NTgxNzEw,yyx990803,COMMENTED,,2021-08-11T14:45:29Z
4306,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3MjM3Njc3,edison1105,APPROVED,,2021-08-11T09:06:21Z
4309,PRR_kwDOCCum184vlMXD,tony19,COMMENTED,,2021-11-04T21:25:40Z
4309,PRR_kwDOCCum1843hGDR,muelbr,COMMENTED,,2022-04-05T07:50:44Z
4324,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI4NTg4OTg0,posva,APPROVED,,2021-08-12T13:19:44Z
4335,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwMTc3NDIz,posva,COMMENTED,,2021-08-15T11:26:59Z
4335,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwMjAwODA4,lidlanca,COMMENTED,,2021-08-15T16:00:53Z
4337,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwMTQ3Mzkz,edison1105,CHANGES_REQUESTED,,2021-08-15T03:56:38Z
4337,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwMTY4MjIx,lidlanca,COMMENTED,,2021-08-15T09:32:00Z
4338,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMxMTgwMDYy,yyx990803,COMMENTED,,2021-08-16T22:21:30Z
4353,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMxMDk0ODUw,yyx990803,CHANGES_REQUESTED,,2021-08-16T20:14:25Z
4353,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMxMTAyNzYw,webfansplz,COMMENTED,,2021-08-16T20:25:00Z
4359,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMxMjkxMDcw,HcySunYang,APPROVED,,2021-08-17T02:56:38Z
4359,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMxNDY1MDI4,posva,APPROVED,,2021-08-17T08:14:35Z
4368,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMxODczMzYx,edison1105,APPROVED,,2021-08-17T14:52:49Z
4393,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2NjM1MDI4,yyx990803,COMMENTED,,2021-08-23T23:02:22Z
4393,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2OTM3Mzkz,posva,COMMENTED,,2021-08-24T08:17:59Z
4404,PRR_kwDOCCum1842ozdw,tony19,COMMENTED,,2022-03-22T05:08:50Z
4404,PRR_kwDOCCum1842s-J8,gnuletik,COMMENTED,,2022-03-22T19:11:57Z
4404,PRR_kwDOCCum185j5x_0,haoqunjiang,CHANGES_REQUESTED,"I'd love to see this feature in Vue.js core.

However, for this PR to move forward, here are some improvements that need to be made:

- I've copied the `html-parsed-element` package's source code into the repository to fix some build issues. But as an IIFE, it cannot be tree-shaken, leading to an increase in bundle sizes. It's **crucial** that this code is refactored to be tree-shakable, ensuring that only users of `defineCustomElement` experience the bundle size increase.
- (In my opinion) Introducing an additional argument to `defineCustomComponent` seems aesthetically inconsistent. Personally, I would prefer a top-level component option alongside the `styles` option.
- (Possible caveats?) If this implementation is accepted and merged, we will need a companion PR to the `docs` repository to
  1. Document this new option
  2. Explain the special `parsedCallback` trick, which only executes in a `requestAnimationFrame` callback. This behavior might catch some users by surprise. While most asynchronous operations in Vue.js occur in `nextTick`, this specific one operates in `nextFrame`.",2023-10-13T09:21:27Z
4407,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2NjIzOTQ5,yyx990803,COMMENTED,,2021-08-23T22:38:51Z
4407,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2NjI0MDM4,yyx990803,COMMENTED,,2021-08-23T22:39:03Z
4407,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2NzM0MTI1,zhangenming,COMMENTED,,2021-08-24T02:53:08Z
4411,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM1NTM5NDU3,HcySunYang,COMMENTED,,2021-08-22T04:56:37Z
4411,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM1NTUyMDc2,SebastianSpeitel,COMMENTED,,2021-08-22T08:16:33Z
4411,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2NjE5ODgw,yyx990803,COMMENTED,,2021-08-23T22:30:16Z
4421,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2MjMxMTE0,posva,APPROVED,,2021-08-23T14:59:27Z
4424,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2NjMwNzIw,yyx990803,CHANGES_REQUESTED,,2021-08-23T22:53:23Z
4429,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM3MDEwMTYx,edison1105,CHANGES_REQUESTED,,2021-08-24T09:31:02Z
4429,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM3MDIyMjk3,shadowings-zy,COMMENTED,,2021-08-24T09:43:58Z
4429,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM3MDM3MTE5,shadowings-zy,COMMENTED,,2021-08-24T09:59:42Z
4429,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM3MjEzMjMw,edison1105,APPROVED,,2021-08-24T13:16:59Z
4432,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ0MzkxMzM1,yyx990803,CHANGES_REQUESTED,,2021-09-01T20:45:31Z
4432,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ2NTI1NTAw,royeden,COMMENTED,,2021-09-04T00:58:10Z
4434,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM4MDI1MDc1,posva,APPROVED,,2021-08-25T07:58:27Z
4447,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM5MTk1NDk0,posva,CHANGES_REQUESTED,Can you add tests?,2021-08-26T08:37:41Z
4447,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM5MzAzODg2,posva,CHANGES_REQUESTED,beforeUnmount should be added too,2021-08-26T10:27:30Z
4447,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM5MzgxNzE0,posva,APPROVED,,2021-08-26T11:59:22Z
4465,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQxMDQxMTA3,znck,COMMENTED,,2021-08-28T16:51:59Z
4465,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQyMzM2ODc3,znck,COMMENTED,,2021-08-31T06:49:18Z
4465,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ3MDA3NzIx,KaelWD,COMMENTED,,2021-09-06T09:15:20Z
4465,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ3MDEwNDg5,KaelWD,COMMENTED,,2021-09-06T09:18:11Z
4465,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ3MDE0MDE0,KaelWD,COMMENTED,,2021-09-06T09:21:41Z
4466,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQxNjI0Nzkw,edison1105,CHANGES_REQUESTED,,2021-08-30T13:05:55Z
4466,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQxNjg5MDQ2,webfansplz,COMMENTED,,2021-08-30T14:05:37Z
4490,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ0NjgyMzk2,posva,APPROVED,,2021-09-02T07:07:59Z
4506,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ1NzY0NzE2,edison1105,CHANGES_REQUESTED,,2021-09-03T06:58:34Z
4506,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ1Nzk4MzM5,webfansplz,COMMENTED,,2021-09-03T07:22:02Z
4506,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ1ODg5ODc2,edison1105,APPROVED,,2021-09-03T09:06:37Z
4512,PRR_kwDOCCum185DOtPJ,antfu,APPROVED,,2022-10-03T07:46:49Z
4520,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ2NTY5MDM4,lidlanca,CHANGES_REQUESTED,"consider an additional test for the ""local variable"" in template, which is not explicitly
covered by the assignment fix test case

```js
  test('template local variable', ()=>{
    const { content } = compile(
      `<script setup>
      import {ref} from ""vue""
      const v = ref()
      </script>
      <template>
        <div @click=""(e) => {
          let a = 1 
          const b = a
          var c = b
          (a,b,c,d,e)  // all local

          // nested scopes
          (()=>{
            let x = a
            (()=>{
              let z = x
              let z2 = z
            })
            let fromNonLocalZ = z // _ctx is expected
          })        
          v = a
          var d = 4
      }""/>

      </template>
      `,
      { inlineTemplate: true }
    )
    assertCode(content)
  })
```",2021-09-04T13:08:39Z
4526,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ2OTI1NDQ0,posva,APPROVED,,2021-09-06T07:49:28Z
4534,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ3NzMxOTYw,posva,APPROVED,,2021-09-07T09:06:35Z
4549,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzUxMjMyNjY1,haoqunjiang,APPROVED,,2021-09-10T09:39:02Z
4549,MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzUxOTAwMDUy,edison1105,APPROVED,,2021-09-11T08:03:24Z
4569,PRR_kwDOCCum184tF4Tt,yyx990803,COMMENTED,,2021-09-16T16:23:16Z
4597,PRR_kwDOCCum184tB2t2,lidlanca,COMMENTED,,2021-09-15T17:59:42Z
4608,PRR_kwDOCCum184tFOVa,henribru,COMMENTED,,2021-09-16T14:01:46Z
4608,PRR_kwDOCCum184tFacm,LinusBorg,COMMENTED,,2021-09-16T14:39:58Z
4619,PRR_kwDOCCum184tJk0A,edison1105,COMMENTED,,2021-09-17T13:47:54Z
4619,PRR_kwDOCCum184tj6Qt,yyx990803,DISMISSED,,2021-09-27T14:54:30Z
4619,PRR_kwDOCCum184tkCbq,LinusBorg,COMMENTED,,2021-09-27T15:20:14Z
4619,PRR_kwDOCCum184tkJyR,LinusBorg,COMMENTED,,2021-09-27T15:45:10Z
4619,PRR_kwDOCCum184tkJ0K,LinusBorg,COMMENTED,,2021-09-27T15:45:16Z
4619,PRR_kwDOCCum184tk-z3,yyx990803,COMMENTED,,2021-09-27T19:32:09Z
4619,PRR_kwDOCCum184zRYLI,edison1105,APPROVED,,2022-01-22T10:33:55Z
4619,PRR_kwDOCCum185HvtX9,Hossein13M,APPROVED,,2022-12-04T18:01:12Z
4625,PRR_kwDOCCum184tLw6o,edison1105,APPROVED,,2021-09-18T12:30:29Z
4631,PRR_kwDOCCum184tTX1o,yyx990803,CHANGES_REQUESTED,,2021-09-21T17:31:22Z
4631,PRR_kwDOCCum184tgrXq,skirtles-code,COMMENTED,,2021-09-25T00:24:25Z
4647,PRR_kwDOCCum185lKGum,edison1105,COMMENTED,,2023-10-25T12:10:36Z
4649,PRR_kwDOCCum184tWGaa,posva,APPROVED,,2021-09-22T11:08:27Z
4651,PRR_kwDOCCum184taiPG,zhangenming,COMMENTED,,2021-09-23T12:10:43Z
4657,PRR_kwDOCCum184wY3Y7,LinusBorg,APPROVED,,2021-11-20T12:05:35Z
4659,PRR_kwDOCCum184tZ2xc,Smrtnyk,COMMENTED,,2021-09-23T08:55:16Z
4659,PRR_kwDOCCum184tqhTQ,Justineo,COMMENTED,,2021-09-29T01:44:37Z
4682,PRR_kwDOCCum184tjW1V,yyx990803,CHANGES_REQUESTED,,2021-09-27T13:01:53Z
4699,PRR_kwDOCCum184tqfjz,Justineo,COMMENTED,,2021-09-29T01:38:52Z
4699,PRR_kwDOCCum184tq0aV,caozhong1996,COMMENTED,,2021-09-29T04:52:00Z
4700,PRR_kwDOCCum184tqYty,edison1105,APPROVED,,2021-09-29T00:35:13Z
4704,PRR_kwDOCCum184uNGPZ,yyx990803,CHANGES_REQUESTED,,2021-10-08T16:02:45Z
4704,PRR_kwDOCCum184uOafi,danranVm,COMMENTED,,2021-10-09T02:09:27Z
4731,PRR_kwDOCCum184t5d7v,posva,COMMENTED,,2021-10-04T09:05:47Z
4734,PRR_kwDOCCum184uNEHn,yyx990803,COMMENTED,,2021-10-08T15:53:51Z
4734,PRR_kwDOCCum184uORIZ,caozhong1996,COMMENTED,,2021-10-08T22:28:15Z
4742,PRR_kwDOCCum1852pGS-,skirtles-code,COMMENTED,,2024-04-10T00:13:02Z
4766,PRR_kwDOCCum185NqqXg,baohangxing,COMMENTED,nice works,2023-02-17T09:35:17Z
4770,PRR_kwDOCCum184uOlK3,edison1105,CHANGES_REQUESTED,,2021-10-09T12:17:24Z
4787,PRR_kwDOCCum184una_d,posva,APPROVED,,2021-10-18T13:51:40Z
4788,PRR_kwDOCCum184uVp86,posva,CHANGES_REQUESTED,What is the bug you found? Can you provide a reproduction?,2021-10-12T14:02:18Z
4788,PRR_kwDOCCum184uX4M7,emojiiii,COMMENTED,,2021-10-13T01:37:57Z
4790,PRR_kwDOCCum184ubTdo,yyx990803,CHANGES_REQUESTED,,2021-10-13T17:45:59Z
4792,PRR_kwDOCCum184ub18c,LinusBorg,COMMENTED,,2021-10-13T20:20:41Z
4804,PRR_kwDOCCum184ujA9g,posva,CHANGES_REQUESTED,Can you add a test about the warning? Especially as it doesn't appear in the SFC,2021-10-15T14:49:50Z
4804,PRR_kwDOCCum184unW_x,posva,CHANGES_REQUESTED,,2021-10-18T13:39:31Z
4804,PRR_kwDOCCum184uvg33,benkroeger,COMMENTED,,2021-10-20T09:11:33Z
4804,PRR_kwDOCCum184uvnhv,benkroeger,COMMENTED,,2021-10-20T09:33:23Z
4804,PRR_kwDOCCum184uvuK2,posva,COMMENTED,,2021-10-20T09:57:44Z
4804,PRR_kwDOCCum184u9lDh,posva,CHANGES_REQUESTED,,2021-10-25T09:48:22Z
4804,PRR_kwDOCCum184vCnQP,benkroeger,COMMENTED,,2021-10-26T11:15:17Z
4804,PRR_kwDOCCum184vCoHN,benkroeger,COMMENTED,,2021-10-26T11:19:00Z
4804,PRR_kwDOCCum184vComL,benkroeger,COMMENTED,,2021-10-26T11:20:59Z
4804,PRR_kwDOCCum184vC4V1,posva,COMMENTED,,2021-10-26T12:00:14Z
4804,PRR_kwDOCCum184vC4pw,posva,COMMENTED,,2021-10-26T12:01:27Z
4804,PRR_kwDOCCum185Gra1v,posva,CHANGES_REQUESTED,Sorry for the delay on this one!,2022-11-18T09:46:52Z
4804,PRR_kwDOCCum185Up2U0,benkroeger,COMMENTED,,2023-05-10T09:56:53Z
4814,PRR_kwDOCCum184unjpr,pi0,COMMENTED,,2021-10-18T14:08:30Z
4836,PRR_kwDOCCum185L1tAh,posva,COMMENTED,Thank you for this! I think it's worth getting multiple pairs of eyes on this PR. I think it will be very welcomed! 😄 ,2023-01-27T09:40:52Z
4836,PRR_kwDOCCum185L6587,lmiller1990,COMMENTED,,2023-01-28T02:06:49Z
4836,PRR_kwDOCCum185L-wsH,defaude,COMMENTED,,2023-01-30T09:16:53Z
4836,PRR_kwDOCCum185L-ynu,defaude,COMMENTED,,2023-01-30T09:20:22Z
4836,PRR_kwDOCCum185L-0pb,defaude,COMMENTED,,2023-01-30T09:25:25Z
4836,PRR_kwDOCCum185L-4BA,defaude,COMMENTED,,2023-01-30T09:31:21Z
4836,PRR_kwDOCCum185L_Jgq,posva,COMMENTED,,2023-01-30T10:08:45Z
4836,PRR_kwDOCCum185L_Km7,posva,COMMENTED,,2023-01-30T10:11:13Z
4836,PRR_kwDOCCum185MjcEm,defaude,COMMENTED,,2023-02-05T21:54:30Z
4836,PRR_kwDOCCum185MjkHu,lmiller1990,COMMENTED,,2023-02-06T00:24:47Z
4836,PRR_kwDOCCum185MlDk2,posva,COMMENTED,,2023-02-06T08:57:58Z
4836,PRR_kwDOCCum185Mr4-7,yyx990803,COMMENTED,,2023-02-07T08:01:55Z
4836,PRR_kwDOCCum185MznJI,defaude,COMMENTED,,2023-02-08T07:19:21Z
4836,PRR_kwDOCCum185M3ZoT,defaude,COMMENTED,,2023-02-08T16:47:30Z
4836,PRR_kwDOCCum185NKO59,posva,COMMENTED,"It's looking great but we should definitely address the unresolved reviews as well!
I think that in general, using the vuejs.org API versions (sometimes without the example or with a shorter one) would make up for an overrall more correct, concise, and complete version.

I added a few comments to the remaining comments but I noticed there were more than I expected so I stopped midway 😅 ",2023-02-11T13:05:56Z
4836,PRR_kwDOCCum185NwRug,defaude,COMMENTED,,2023-02-18T09:23:02Z
4836,PRR_kwDOCCum185NwSRI,defaude,COMMENTED,,2023-02-18T09:49:23Z
4836,PRR_kwDOCCum185N2i37,posva,CHANGES_REQUESTED,Thanks! Almost finished 🙌 ,2023-02-20T17:09:05Z
4836,PRR_kwDOCCum185N5OzP,defaude,COMMENTED,,2023-02-21T07:36:59Z
4836,PRR_kwDOCCum185N5PLC,defaude,COMMENTED,,2023-02-21T07:38:17Z
4836,PRR_kwDOCCum185OAfKf,posva,APPROVED,Thanks a lot!,2023-02-22T08:36:16Z
4840,PRR_kwDOCCum184wY3fV,LinusBorg,APPROVED,,2021-11-20T12:11:31Z
4850,PRR_kwDOCCum184u9m1c,posva,CHANGES_REQUESTED,Can you add a test too?,2021-10-25T09:55:15Z
4850,PRR_kwDOCCum184u91tk,zhaozhongyu,COMMENTED,,2021-10-25T10:57:48Z
4850,PRR_kwDOCCum185iC2Dx,skirtles-code,COMMENTED,,2023-09-26T18:12:42Z
4850,PRR_kwDOCCum185nQgyp,skirtles-code,COMMENTED,,2023-11-15T16:04:07Z
4852,PRR_kwDOCCum184u-GIZ,edison1105,CHANGES_REQUESTED,,2021-10-25T12:09:48Z
4852,PRR_kwDOCCum184u-G5h,zhaozhongyu,COMMENTED,,2021-10-25T12:12:56Z
4852,PRR_kwDOCCum184u-J7j,posva,CHANGES_REQUESTED,Can you add a test?,2021-10-25T12:24:47Z
4862,PRR_kwDOCCum184vG2qu,posva,COMMENTED,,2021-10-27T08:39:22Z
4862,PRR_kwDOCCum184vG3V_,posva,COMMENTED,,2021-10-27T08:41:44Z
4889,PRR_kwDOCCum184vb1vz,posva,APPROVED,Thanks!,2021-11-02T19:19:32Z
4899,PRR_kwDOCCum184vgPTH,posva,CHANGES_REQUESTED,Can you remove the changes to the lock and rebase from master?,2021-11-03T19:01:34Z
4899,PRR_kwDOCCum184vgbG-,JensDll,COMMENTED,,2021-11-03T19:54:43Z
4899,PRR_kwDOCCum184wHGkj,JensDll,COMMENTED,,2021-11-16T11:25:20Z
4900,PRR_kwDOCCum1842-TEP,edison1105,APPROVED,,2022-03-26T09:40:13Z
4905,PRR_kwDOCCum184vmOZ0,edison1105,APPROVED,,2021-11-05T07:17:38Z
4925,PRR_kwDOCCum184wBHCT,yyx990803,COMMENTED,,2021-11-15T03:08:13Z
4934,PRR_kwDOCCum184v56dR,edison1105,APPROVED,its faster.,2021-11-11T11:51:59Z
4938,PRR_kwDOCCum184v8hQC,yyx990803,COMMENTED,,2021-11-12T03:51:05Z
4955,PRR_kwDOCCum184wL-8l,posva,COMMENTED,,2021-11-17T11:14:14Z
4955,PRR_kwDOCCum184wMA57,yuwu9145,COMMENTED,,2021-11-17T11:22:32Z
4958,PRR_kwDOCCum184wNay6,LinusBorg,APPROVED,,2021-11-17T16:23:35Z
4964,PRR_kwDOCCum184wUNIP,lmiller1990,COMMENTED,,2021-11-18T23:33:06Z
4964,PRR_kwDOCCum184wU2jN,boboldehampsink,APPROVED,,2021-11-19T05:27:36Z
4966,PRR_kwDOCCum184wRFbA,JensDll,COMMENTED,,2021-11-18T11:15:36Z
4974,PRR_kwDOCCum184xCXAM,LinusBorg,APPROVED,,2021-12-03T14:16:30Z
4978,PRR_kwDOCCum184wY2ld,LinusBorg,CHANGES_REQUESTED,Can you write a separate test for this instead of repurposing the existing one? KeepAlive.spec would be a good place for this since we are testing the correct behaviour of the wrapped KeepAlive hooks.,2021-11-20T11:13:11Z
4978,PRR_kwDOCCum184wZhs0,ygj6,COMMENTED,,2021-11-22T00:58:54Z
4978,PRR_kwDOCCum184waDrZ,LinusBorg,APPROVED,,2021-11-22T06:55:24Z
4997,PRR_kwDOCCum184wnoY8,edison1105,CHANGES_REQUESTED,,2021-11-25T08:41:31Z
4997,PRR_kwDOCCum184wn-uW,yyx990803,COMMENTED,,2021-11-25T10:04:17Z
5004,PRR_kwDOCCum186PGfb9,edison1105,COMMENTED,,2024-10-29T06:34:52Z
5010,PRR_kwDOCCum186Oi2gc,edison1105,COMMENTED,,2024-10-24T07:02:52Z
5010,PRR_kwDOCCum186ulDd-,skirtles-code,COMMENTED,,2025-06-15T03:37:24Z
5011,PRR_kwDOCCum184wtchY,LinusBorg,COMMENTED,,2021-11-28T13:51:50Z
5011,PRR_kwDOCCum184wtckN,candy-Tong,COMMENTED,,2021-11-28T13:53:25Z
5012,PRR_kwDOCCum184wthrv,posva,APPROVED,,2021-11-28T17:31:23Z
5022,PRR_kwDOCCum1841VeXy,pikax,APPROVED,,2022-02-28T09:13:54Z
5029,PRR_kwDOCCum184xCVx8,LinusBorg,APPROVED,,2021-12-03T14:11:57Z
5033,PRR_kwDOCCum185Deqm6,antfu,COMMENTED,,2022-10-05T22:23:22Z
5033,PRR_kwDOCCum185Dm3iz,LinusBorg,COMMENTED,,2022-10-07T10:28:05Z
5033,PRR_kwDOCCum185DnLAB,antfu,APPROVED,,2022-10-07T11:41:27Z
5046,PRR_kwDOCCum184xE9ld,posva,COMMENTED,,2021-12-05T12:17:40Z
5046,PRR_kwDOCCum184xE9p7,posva,CHANGES_REQUESTED,,2021-12-05T12:20:36Z
5046,PRR_kwDOCCum184xFA0P,sudongyuer,COMMENTED,,2021-12-05T14:27:40Z
5046,PRR_kwDOCCum184xFE84,posva,COMMENTED,,2021-12-05T17:18:27Z
5069,PRR_kwDOCCum184xLb1a,posva,COMMENTED,,2021-12-07T10:28:30Z
5097,PRR_kwDOCCum184xd6Bd,posva,APPROVED,,2021-12-13T08:59:34Z
5100,PRR_kwDOCCum185Gnmy9,sxzz,APPROVED,,2022-11-17T17:51:57Z
5114,PRR_kwDOCCum184xnaIx,lidlanca,COMMENTED,,2021-12-15T07:38:00Z
5115,PRR_kwDOCCum184xwcDZ,zhangenming,COMMENTED,,2021-12-17T02:30:17Z
5117,PRR_kwDOCCum184xpV_9,Justineo,APPROVED,We should switch to `includes` wherever possible. See https://github.com/vuejs/vue-next/pull/286#discussion_r335017495.,2021-12-15T14:49:33Z
5118,PRR_kwDOCCum18407HDW,LinusBorg,APPROVED,,2022-02-19T10:04:11Z
5123,PRR_kwDOCCum184xsVZe,posva,COMMENTED,,2021-12-16T06:58:22Z
5123,PRR_kwDOCCum184xsViK,posva,COMMENTED,,2021-12-16T06:59:21Z
5124,PRR_kwDOCCum184xsK_n,edison1105,CHANGES_REQUESTED,,2021-12-16T05:36:24Z
5131,PRR_kwDOCCum184xxQPj,posva,COMMENTED,,2021-12-17T09:14:25Z
5131,PRR_kwDOCCum184x0IRD,zhangenming,COMMENTED,,2021-12-18T06:23:10Z
5131,PRR_kwDOCCum184zNkcn,yyx990803,CHANGES_REQUESTED,,2022-01-21T07:40:13Z
5135,PRR_kwDOCCum1842fhhQ,LinusBorg,APPROVED,,2022-03-18T11:19:10Z
5143,PRR_kwDOCCum184x5VUk,posva,COMMENTED,,2021-12-21T07:52:26Z
5143,PRR_kwDOCCum184x5Zdn,zhangenming,COMMENTED,,2021-12-21T08:11:58Z
5143,PRR_kwDOCCum184x5lVj,caozhong1996,COMMENTED,,2021-12-21T09:03:39Z
5143,PRR_kwDOCCum184x5pnA,zhangenming,COMMENTED,,2021-12-21T09:19:59Z
5143,PRR_kwDOCCum184x5w0X,caozhong1996,COMMENTED,,2021-12-21T09:48:09Z
5145,PRR_kwDOCCum184x9ya-,posva,COMMENTED,I think this is a good idea but I wonder if GitHub issues forms are still ready for us because they are lacking some i18n integration and a lot of our users use the Chinese version,2021-12-22T09:59:30Z
5162,PRR_kwDOCCum184yDNUI,wxsms,APPROVED,,2021-12-24T02:27:02Z
5177,PRR_kwDOCCum1842fh__,LinusBorg,APPROVED,,2022-03-18T11:21:26Z
5193,PRR_kwDOCCum184yMmIO,edison1105,CHANGES_REQUESTED,,2021-12-31T05:47:03Z
5194,PRR_kwDOCCum184yM62g,edison1105,CHANGES_REQUESTED,,2021-12-31T13:01:52Z
5194,PRR_kwDOCCum184yM7BE,macheteHot,COMMENTED,,2021-12-31T13:05:42Z
5195,PRR_kwDOCCum184yPPNu,posva,COMMENTED,,2022-01-03T16:10:01Z
5212,PRR_kwDOCCum184zElMv,pikax,APPROVED,,2022-01-19T14:05:50Z
5229,PRR_kwDOCCum186JCiwY,edison1105,COMMENTED,,2024-09-12T03:30:12Z
5237,PRR_kwDOCCum184ykE1z,sqal,COMMENTED,,2022-01-10T20:41:35Z
5237,PRR_kwDOCCum184yk-Jv,cool-little-fish,COMMENTED,,2022-01-11T02:51:02Z
5261,PRR_kwDOCCum184zKo39,elizatlawy,APPROVED,,2022-01-20T15:36:04Z
5281,PRR_kwDOCCum184zrKPc,LinusBorg,CHANGES_REQUESTED,"A general remark that doesn't to one specific line/change:

You have made sure that we include all custom element properties in the getters/setters that we add. I'm not sure that is the right direction to go here.

Because we can't observer property additions, your change would still only affect DOM properties present at the moment of `connectCallback`. Later additions won't be propagated.

So I would rather prefer that we kee the current beavior of only reflecting actual props with getter/setters. However then we should also limit the initial reflection we do before we add these getters/setters to props - if any are defined:

```diff
- for (const key of Object.keys(this)) {
+ for (const key of rawKeys) {
        if (key[0] !== '_') {
          this._setProp(key, this[key as keyof this], true, false)
```

Thoughts? Opinions?",2022-01-29T11:36:16Z
5281,PRR_kwDOCCum1842etBl,LinusBorg,APPROVED,,2022-03-18T07:29:11Z
5282,PRR_kwDOCCum184y_7n8,LinusBorg,APPROVED,,2022-01-18T15:50:52Z
5282,PRR_kwDOCCum184zKnrp,elizatlawy,APPROVED,,2022-01-20T15:33:10Z
5291,PRR_kwDOCCum184zFqkj,LinusBorg,APPROVED,,2022-01-19T17:25:15Z
5306,PRR_kwDOCCum184zRqS6,ota-meshi,COMMENTED,,2022-01-23T03:36:06Z
5306,PRR_kwDOCCum184zRwZL,edison1105,COMMENTED,,2022-01-23T08:41:57Z
5306,PRR_kwDOCCum184zR20B,yyx990803,COMMENTED,,2022-01-23T12:54:56Z
5306,PRR_kwDOCCum184zR3AT,yyx990803,COMMENTED,,2022-01-23T13:01:34Z
5310,PRR_kwDOCCum184zR1yb,edison1105,APPROVED,,2022-01-23T12:16:01Z
5332,PRR_kwDOCCum184zgeWj,LinusBorg,COMMENTED,,2022-01-26T21:53:19Z
5332,PRR_kwDOCCum18456Ttz,yyx990803,COMMENTED,,2022-05-13T00:23:00Z
5358,PRR_kwDOCCum1842De1R,edison1105,APPROVED,,2022-03-11T08:07:17Z
5377,PRR_kwDOCCum185EqKB0,antfu,APPROVED,,2022-10-22T09:13:59Z
5378,PRR_kwDOCCum1848wUPo,edison1105,APPROVED,,2022-06-25T11:20:01Z
5378,PRR_kwDOCCum185FOliw,Hossein13M,APPROVED,,2022-10-31T07:53:53Z
5382,PRR_kwDOCCum1840humk,Matrix53,APPROVED,,2022-02-14T07:52:12Z
5382,PRR_kwDOCCum1840iqbo,Justineo,APPROVED,,2022-02-14T11:32:14Z
5383,PRR_kwDOCCum18415HNt,Akryum,COMMENTED,,2022-03-09T10:33:48Z
5383,PRR_kwDOCCum1841_kSN,bichikim,COMMENTED,,2022-03-10T13:47:43Z
5389,PRR_kwDOCCum1840eNSk,pikax,APPROVED,,2022-02-11T15:31:53Z
5389,PRR_kwDOCCum1840eNyU,pikax,COMMENTED,,2022-02-11T15:33:30Z
5389,PRR_kwDOCCum1840eiPm,pikax,APPROVED,,2022-02-11T16:37:45Z
5394,PRR_kwDOCCum1840W_qn,edison1105,APPROVED,,2022-02-10T07:52:11Z
5394,PRR_kwDOCCum185Da16S,antfu,APPROVED,,2022-10-05T09:03:05Z
5394,PRR_kwDOCCum185DbK0U,sxzz,APPROVED,,2022-10-05T10:11:52Z
5400,PRR_kwDOCCum1840b2Or,caozhong1996,COMMENTED,,2022-02-11T02:15:28Z
5408,PRR_kwDOCCum185jEhqw,sxzz,APPROVED,,2023-10-06T15:26:37Z
5416,PRR_kwDOCCum18432yIB,pikax,CHANGES_REQUESTED,"Thank you, just a few comments.

It would be nice to also have tests to the other overloads, just to make sure we are passing the correct options to other overloads. 

The goal of `DefineComponent` is to hold all the type from `defineComponent`, appending types per `defineComponent` return will make it harder to extract generics",2022-04-09T09:40:26Z
5416,PRR_kwDOCCum18433YGW,Zclhlmgqzc,COMMENTED,,2022-04-10T12:57:03Z
5416,PRR_kwDOCCum18433YRd,Zclhlmgqzc,COMMENTED,,2022-04-10T13:03:14Z
5416,PRR_kwDOCCum18433YRv,Zclhlmgqzc,COMMENTED,,2022-04-10T13:03:22Z
5416,PRR_kwDOCCum18433YSI,Zclhlmgqzc,COMMENTED,,2022-04-10T13:03:33Z
5417,PRR_kwDOCCum1840glFr,cexbrayat,APPROVED,"Thanks @lidlanca 

This looks good to me, I just added a few comments.",2022-02-13T09:15:06Z
5417,PRR_kwDOCCum1844EIB-,waldi,COMMENTED,,2022-04-13T08:27:51Z
5417,PRR_kwDOCCum1844EV63,koernchen02,COMMENTED,,2022-04-13T09:11:01Z
5428,PRR_kwDOCCum186OieF9,edison1105,COMMENTED,,2024-10-24T06:17:08Z
5432,PRR_kwDOCCum1840oLXK,pikax,COMMENTED,,2022-02-15T13:00:26Z
5432,PRR_kwDOCCum1840oTg_,danielroe,APPROVED,,2022-02-15T13:27:17Z
5432,PRR_kwDOCCum185jVqy5,haoqunjiang,APPROVED,,2023-10-10T08:02:49Z
5432,PRR_kwDOCCum185k5572,yyx990803,COMMENTED,,2023-10-23T15:38:45Z
5444,PRR_kwDOCCum18407PLo,jahermosilla,COMMENTED,,2022-02-19T16:08:36Z
5444,PRR_kwDOCCum18409HTb,jasonkellydk,COMMENTED,,2022-02-21T09:49:59Z
5449,PRR_kwDOCCum18403SMp,LinusBorg,APPROVED,,2022-02-18T07:24:23Z
5458,PRR_kwDOCCum18407HGB,pikax,APPROVED,,2022-02-19T10:06:18Z
5458,PRR_kwDOCCum185CtXio,antfu,APPROVED,,2022-09-24T07:14:16Z
5476,PRR_kwDOCCum1841JdAQ,LinusBorg,APPROVED,,2022-02-23T20:57:10Z
5485,PRR_kwDOCCum1841XIQd,posva,COMMENTED,,2022-02-28T15:45:08Z
5485,PRR_kwDOCCum1841XYil,zhmushan,COMMENTED,,2022-02-28T16:34:00Z
5485,PRR_kwDOCCum1841XaaF,posva,APPROVED,,2022-02-28T16:40:12Z
5498,PRR_kwDOCCum1844EiCu,yyx990803,CHANGES_REQUESTED,,2022-04-13T09:49:09Z
5498,PRR_kwDOCCum1844En5E,zhmushan,COMMENTED,,2022-04-13T10:08:24Z
5498,PRR_kwDOCCum1844EsVM,zhmushan,COMMENTED,,2022-04-13T10:24:29Z
5501,PRR_kwDOCCum1841gLH-,edison1105,CHANGES_REQUESTED,,2022-03-02T14:11:20Z
5532,PRR_kwDOCCum1841vodo,LinusBorg,APPROVED,,2022-03-07T13:22:03Z
5557,PRR_kwDOCCum186OUAm8,edison1105,COMMENTED,,2024-10-23T07:47:26Z
5564,PRR_kwDOCCum1842AJNx,LinusBorg,COMMENTED,,2022-03-10T15:25:06Z
5565,PRR_kwDOCCum1842DGLa,edison1105,APPROVED,,2022-03-11T05:32:23Z
5565,PRR_kwDOCCum1842FSXR,HcySunYang,APPROVED,,2022-03-11T15:13:37Z
5575,PRR_kwDOCCum1842hNCv,posva,CHANGES_REQUESTED,Can you add a regression test for this?,2022-03-18T17:36:57Z
5575,PRR_kwDOCCum1842iUQn,a65162,COMMENTED,,2022-03-19T03:47:44Z
5575,PRR_kwDOCCum1842ibv2,posva,COMMENTED,,2022-03-19T11:48:38Z
5575,PRR_kwDOCCum1842v2Lk,posva,COMMENTED,,2022-03-23T10:08:06Z
5575,PRR_kwDOCCum1842v3ux,posva,APPROVED,,2022-03-23T10:12:59Z
5593,PRR_kwDOCCum184225Iy,shamilfrontend,COMMENTED,,2022-03-24T14:27:50Z
5595,PRR_kwDOCCum184224qG,shamilfrontend,COMMENTED,,2022-03-24T14:26:42Z
5595,PRR_kwDOCCum184228ud,jp-liu,COMMENTED,,2022-03-24T14:36:51Z
5595,PRR_kwDOCCum1843K6B4,posva,COMMENTED,,2022-03-30T06:51:33Z
5601,PRR_kwDOCCum1842ov9O,tony19,COMMENTED,,2022-03-22T04:42:20Z
5601,PRR_kwDOCCum1842pOP8,LinusBorg,COMMENTED,,2022-03-22T07:40:50Z
5627,PRR_kwDOCCum1842-hss,LinusBorg,CHANGES_REQUESTED,"As of now, I would not rate #5627 a bug. Until my question in that issue is resolved, this should not be merged.",2022-03-26T21:38:00Z
5627,PRR_kwDOCCum185kstYo,LinusBorg,APPROVED,,2023-10-20T07:47:44Z
5627,PRR_kwDOCCum185lPH_j,skirtles-code,COMMENTED,,2023-10-25T23:55:21Z
5627,PRR_kwDOCCum185lPeqM,edison1105,COMMENTED,,2023-10-26T00:51:53Z
5638,PRR_kwDOCCum1843K5hg,posva,APPROVED,,2022-03-30T06:49:18Z
5670,PRR_kwDOCCum1849PnqR,edison1105,COMMENTED,,2022-07-04T12:45:41Z
5670,PRR_kwDOCCum1849RiwE,javastation,COMMENTED,,2022-07-05T03:22:28Z
5670,PRR_kwDOCCum185Drdei,antfu,APPROVED,,2022-10-10T04:19:29Z
5670,PRR_kwDOCCum185DreOC,antfu,COMMENTED,,2022-10-10T04:28:54Z
5682,PRR_kwDOCCum1843vs0f,fnlctrl,COMMENTED,,2022-04-07T15:20:11Z
5691,PRR_kwDOCCum185knKRC,nandi95,COMMENTED,,2023-10-19T14:59:17Z
5695,PRR_kwDOCCum18433bfK,unshame,COMMENTED,,2022-04-10T14:53:34Z
5695,PRR_kwDOCCum1844Je3O,yyx990803,CHANGES_REQUESTED,,2022-04-14T09:12:29Z
5695,PRR_kwDOCCum1844Lb-Y,unshame,COMMENTED,,2022-04-14T16:27:33Z
5695,PRR_kwDOCCum1846L-UN,yyx990803,CHANGES_REQUESTED,,2022-05-17T23:53:29Z
5695,PRR_kwDOCCum1847M1HZ,unshame,COMMENTED,,2022-06-02T08:50:28Z
5717,PRR_kwDOCCum1844JlzR,edison1105,COMMENTED,,2022-04-14T09:36:34Z
5717,PRR_kwDOCCum185GV9yS,mortal-link,COMMENTED,,2022-11-15T03:57:46Z
5732,PRR_kwDOCCum1844QjHi,sxzz,APPROVED,,2022-04-16T15:10:24Z
5752,PRR_kwDOCCum185AxGdP,posva,COMMENTED,,2022-08-26T08:37:50Z
5752,PRR_kwDOCCum185Ax6al,sxzz,COMMENTED,,2022-08-26T11:37:37Z
5752,PRR_kwDOCCum185AyEst,posva,COMMENTED,,2022-08-26T12:16:17Z
5752,PRR_kwDOCCum185AygEl,sxzz,COMMENTED,,2022-08-26T13:42:56Z
5752,PRR_kwDOCCum185DPCe4,antfu,APPROVED,,2022-10-03T08:53:57Z
5754,PRR_kwDOCCum1844orkn,edison1105,APPROVED,,2022-04-22T14:36:38Z
5759,PRR_kwDOCCum1844dCv2,Justineo,APPROVED,,2022-04-20T13:14:15Z
5770,PRR_kwDOCCum1844hSz5,LinusBorg,CHANGES_REQUESTED,,2022-04-21T08:30:34Z
5770,PRR_kwDOCCum1844hd0N,shadowings-zy,COMMENTED,,2022-04-21T09:04:50Z
5770,PRR_kwDOCCum1844hmux,LinusBorg,APPROVED,,2022-04-21T09:32:12Z
5780,PRR_kwDOCCum186wA5Wg,skirtles-code,COMMENTED,,2025-06-24T09:47:21Z
5781,PRR_kwDOCCum1844oOL2,edison1105,CHANGES_REQUESTED,,2022-04-22T13:14:25Z
5781,PRR_kwDOCCum1844ovtC,javastation,COMMENTED,,2022-04-22T14:49:00Z
5787,PRR_kwDOCCum1844r1lR,leopiccionia,COMMENTED,,2022-04-23T16:29:42Z
5787,PRR_kwDOCCum1844s5QL,catrope,COMMENTED,,2022-04-25T02:28:34Z
5806,PRR_kwDOCCum186DleLX,skirtles-code,COMMENTED,"Overall I think this is a good change, but I'm not sure about the test.

I did an experiment where I 'fixed' the problem with the following crude hack:

```js
      for (i = 0, l = this.effects.length; i < l; i++) {
        if (this.effects[i]) {
          this.effects[i].stop()
        }
      }
```

I don't think this is the right fix, but the proposed test does still pass with this code. I feel like there should be a test that fails with my dodgy fix.",2024-07-30T13:06:22Z
5806,PRR_kwDOCCum186FNDzg,edison1105,COMMENTED,,2024-08-13T07:51:56Z
5810,PRR_kwDOCCum18457PbS,yyx990803,COMMENTED,,2022-05-13T07:43:53Z
5810,PRR_kwDOCCum1845_od9,liulinboyi,COMMENTED,,2022-05-14T06:06:15Z
5821,PRR_kwDOCCum1845DXCr,hunyan-io,CHANGES_REQUESTED,This doesn't handle sources that contain spaces,2022-04-29T01:25:55Z
5821,PRR_kwDOCCum1845Ddf3,hchlq,COMMENTED,,2022-04-29T02:52:33Z
5821,PRR_kwDOCCum1858NHaR,skirtles-code,COMMENTED,,2024-05-28T20:41:54Z
5831,PRR_kwDOCCum185GNuAj,sxzz,COMMENTED,,2022-11-12T02:31:27Z
5842,PRR_kwDOCCum1845JLXG,edison1105,CHANGES_REQUESTED,,2022-05-02T04:41:23Z
5842,PRR_kwDOCCum1845JNvv,liulinboyi,COMMENTED,,2022-05-02T05:13:20Z
5842,PRR_kwDOCCum1845LSpk,hchlq,CHANGES_REQUESTED,,2022-05-02T16:09:59Z
5842,PRR_kwDOCCum1845LcTL,liulinboyi,COMMENTED,,2022-05-02T16:48:01Z
5852,PRR_kwDOCCum1845QNwG,edison1105,APPROVED,,2022-05-03T15:18:39Z
5856,PRR_kwDOCCum1845S90H,antfu,COMMENTED,,2022-05-04T01:10:52Z
5856,PRR_kwDOCCum1845S-TC,antfu,COMMENTED,,2022-05-04T01:16:56Z
5856,PRR_kwDOCCum18456P0S,yyx990803,DISMISSED,,2022-05-12T23:44:03Z
5856,PRR_kwDOCCum1846ihF5,Hebilicious,COMMENTED,,2022-05-23T17:23:51Z
5856,PRR_kwDOCCum1846ihsQ,antfu,COMMENTED,,2022-05-23T17:26:18Z
5856,PRR_kwDOCCum185Gnt_z,sxzz,COMMENTED,,2022-11-17T18:09:29Z
5871,PRR_kwDOCCum1845fMLh,pikax,APPROVED,,2022-05-06T10:45:49Z
5872,PRR_kwDOCCum1858NWCm,skirtles-code,COMMENTED,,2024-05-28T21:23:20Z
5872,PRR_kwDOCCum186FdTQf,skirtles-code,COMMENTED,"I assume this change is just intended to be a DX improvement, as developers may add spaces after commas instinctively without expecting them to have any impact, leading to confusion about why the code isn't working. Is there any other reason for supporting spaces like this?

I'm not opposed to making the change, but it's maybe worth considering whether it'd be better to add a warning instead.",2024-08-14T19:42:53Z
5904,PRR_kwDOCCum18451Sri,hchlq,COMMENTED,,2022-05-12T05:33:12Z
5906,PRR_kwDOCCum184525dj,tony19,COMMENTED,"This PR only checks for the negative case, where 'debugger' doesn't exist, but maybe there should also be a test for the positive case, where 'debugger' does exist.",2022-05-12T11:31:46Z
5906,PRR_kwDOCCum18455hnE,dsonet,CHANGES_REQUESTED,,2022-05-12T19:50:44Z
5911,PRR_kwDOCCum1846HD8o,sxzz,APPROVED,,2022-05-17T06:57:27Z
5912,PRR_kwDOCCum185htNpc,sxzz,APPROVED,LGTM. Plz resolve the conflicts,2023-09-22T06:39:32Z
5912,PRR_kwDOCCum185htdx3,edison1105,COMMENTED,,2023-09-22T07:27:05Z
5912,PRR_kwDOCCum185iorw-,basvanmeurs,COMMENTED,"Amazing to see this work.

I was responsible for adding the `TrackedMarkers` solution, so I though it would be helpful to review.

I like the idea a lot. It seems to me like a better solution in terms of both performance and simplicity.

You might have overlooked 2 things:
* dependencies might change on each run, and should be updated directly to avoid unnecessary triggering
* memory leaks may occur if dependencies are not immediately cleaned up after calling `stop`

See comments. The second issue can be easily fixed. The first might require more thinking, but would it possibly be a solution to increment effect.trackId on each run? Or would that have undesired side effects?

Also, could you please share a full run of all the benchmarks? I am interested to see the difference in performance in specific tests.",2023-10-03T10:05:53Z
5912,PRR_kwDOCCum185irVO6,johnsoncodehk,COMMENTED,,2023-10-03T15:36:24Z
5912,PRR_kwDOCCum185i8Uaw,johnsoncodehk,COMMENTED,,2023-10-05T14:13:03Z
5912,PRR_kwDOCCum185kz4Bz,dsonet,COMMENTED,,2023-10-21T18:57:56Z
5912,PRR_kwDOCCum185kz4IP,johnsoncodehk,COMMENTED,,2023-10-21T19:02:00Z
5912,PRR_kwDOCCum185lHR53,dsonet,COMMENTED,,2023-10-25T05:40:08Z
5912,PRR_kwDOCCum185lHTbD,johnsoncodehk,COMMENTED,,2023-10-25T05:46:56Z
5912,PRR_kwDOCCum185lMno-,dsonet,COMMENTED,,2023-10-25T16:33:11Z
5914,PRR_kwDOCCum1846R4Ip,yyx990803,CHANGES_REQUESTED,,2022-05-18T23:56:04Z
5914,PRR_kwDOCCum1846SMQ7,liulinboyi,COMMENTED,,2022-05-19T02:30:57Z
5914,PRR_kwDOCCum186RwKST,yyx990803,APPROVED,,2024-11-19T12:28:43Z
5944,PRR_kwDOCCum1846bBj8,edison1105,APPROVED,,2022-05-20T13:59:05Z
5944,PRR_kwDOCCum1846bJ_F,zhmushan,CHANGES_REQUESTED,"Can you explain why it is so fast? I've come to the exact opposite conclusion in Nodejs than in the browser. I'm worried that as browsers upgrade, the optimizations we're doing now won't make sense or will even be a hindrance.",2022-05-20T14:21:43Z
5944,PRR_kwDOCCum1846dYud,zhmushan,APPROVED,LGTM,2022-05-21T03:59:32Z
5949,PRR_kwDOCCum1846OTav,cexbrayat,APPROVED,,2022-05-18T11:59:28Z
5952,PRR_kwDOCCum185GRXou,MarcRO3,APPROVED,,2022-11-14T12:01:59Z
5955,PRR_kwDOCCum185kq5jK,sxzz,APPROVED,,2023-10-20T01:09:59Z
5955,PRR_kwDOCCum185liF3P,haoqunjiang,APPROVED,,2023-10-30T07:43:39Z
5958,PRR_kwDOCCum1846bOv-,zhmushan,APPROVED,,2022-05-20T14:32:38Z
5998,PRR_kwDOCCum1846suhE,edison1105,CHANGES_REQUESTED,,2022-05-25T13:22:07Z
5998,PRR_kwDOCCum1846szis,livthomas,COMMENTED,,2022-05-25T13:34:36Z
5998,PRR_kwDOCCum1847RM6l,dsonet,COMMENTED,,2022-06-03T01:49:51Z
5998,PRR_kwDOCCum1847RpXX,livthomas,COMMENTED,,2022-06-03T06:16:29Z
5998,PRR_kwDOCCum1849zQzv,LinusBorg,COMMENTED,,2022-07-13T06:53:46Z
5998,PRR_kwDOCCum184_PHhi,rhues,COMMENTED,,2022-08-03T19:56:12Z
5998,PRR_kwDOCCum184_PU4B,rhues,COMMENTED,,2022-08-03T20:38:37Z
5998,PRR_kwDOCCum184_PckC,rhues,COMMENTED,,2022-08-03T21:07:22Z
5998,PRR_kwDOCCum185AsbHu,smakinson,COMMENTED,,2022-08-25T12:50:58Z
5998,PRR_kwDOCCum185AslaA,smakinson,COMMENTED,,2022-08-25T13:16:45Z
6002,PRR_kwDOCCum1846srXh,edison1105,COMMENTED,,2022-05-25T13:14:09Z
6002,PRR_kwDOCCum1846wT2A,melan0802,COMMENTED,,2022-05-26T05:31:56Z
6002,PRR_kwDOCCum1847CdTL,melan0802,COMMENTED,,2022-05-31T13:54:58Z
6002,PRR_kwDOCCum1847HK_i,edison1105,COMMENTED,,2022-06-01T10:21:58Z
6012,PRR_kwDOCCum1846zxSp,b-d-k,APPROVED,"Checked in [vue-sfc-playground.netlify.app](https://deploy-preview-6012--vue-sfc-playground.netlify.app/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSdcblxuY29uc3QgbXNnID0gcmVmKCdIZWxsbyBXb3JsZCEnKVxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGZvcm0gbWV0aG9kPVwicG9zdFwiIGFjdGlvbj1cIi9zb21lcGxhY2UvXCI+XG4gICAgPHNlbGVjdCBuYW1lPVwic2VsZWN0VGVzdFwiPlxuICAgICAgPG9wdGlvbiB2YWx1ZT1cIjFcIj5vcHRpb24gb25lPC9vcHRpb24+XG4gICAgICA8b3B0aW9uIHZhbHVlPVwiMlwiIHNlbGVjdGVkPm9wdGlvbiB0d288L29wdGlvbj5cbiAgICAgIDxvcHRpb24gdmFsdWU9XCIzXCI+b3B0aW9uIHRocmVlPC9vcHRpb24+XG4gICAgPC9zZWxlY3Q+XG5cbiAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cImNoZWNrVGVzdFwiIHZhbHVlPVwib25lXCIgY2hlY2tlZCAvPlxuICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIHZhbHVlPVwidGV4dCBpbnB1dCB2YWx1ZVwiIC8+XG4gICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJmYXZfbGFuZ3VhZ2VcIiB2YWx1ZT1cImZyXCI+XG4gICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJmYXZfbGFuZ3VhZ2VcIiB2YWx1ZT1cImVuXCIgY2hlY2tlZD5cbiAgICBcbiAgICA8aW5wdXQgdHlwZT1cInJlc2V0XCI+XG4gIDwvZm9ybT5cbjwvdGVtcGxhdGU+IiwiaW1wb3J0LW1hcC5qc29uIjoie1xuICBcImltcG9ydHNcIjoge1xuICAgIFwidnVlXCI6IFwiaHR0cHM6Ly9kZXBsb3ktcHJldmlldy02MDEyLS12dWUtc2ZjLXBsYXlncm91bmQubmV0bGlmeS5hcHAvdnVlLnJ1bnRpbWUuZXNtLWJyb3dzZXIuanNcIlxuICB9XG59In0=), and it appears to be working. Thank you.",2022-05-26T18:51:48Z
6012,PRR_kwDOCCum1847RMqf,dsonet,CHANGES_REQUESTED,,2022-06-03T01:47:15Z
6012,PRR_kwDOCCum1847Rg7s,zhmushan,COMMENTED,,2022-06-03T05:16:44Z
6012,PRR_kwDOCCum185BAkPt,LinusBorg,CHANGES_REQUESTED,"I think the fix is fine in terms of what it does, but these checks should be part of `shouldSetAsProp` where we already handle a few other special cases.",2022-08-30T16:52:42Z
6025,PRR_kwDOCCum18467JG4,edison1105,APPROVED,,2022-05-29T07:04:57Z
6026,PRR_kwDOCCum18467dGa,tony19,COMMENTED,,2022-05-29T21:25:10Z
6026,PRR_kwDOCCum18468A-K,amirkian007,COMMENTED,,2022-05-30T05:52:57Z
6026,PRR_kwDOCCum18468B_x,amirkian007,COMMENTED,,2022-05-30T05:59:23Z
6026,PRR_kwDOCCum1846_bkz,tony19,COMMENTED,,2022-05-30T22:43:58Z
6026,PRR_kwDOCCum1847Ayen,amirkian007,COMMENTED,,2022-05-31T08:41:18Z
6026,PRR_kwDOCCum1847DkfY,amirkian007,COMMENTED,,2022-05-31T16:43:19Z
6026,PRR_kwDOCCum1847zJ4m,tony19,COMMENTED,,2022-06-10T20:13:17Z
6026,PRR_kwDOCCum1847zuS3,amirkian007,COMMENTED,,2022-06-11T02:33:49Z
6026,PRR_kwDOCCum1847zwuF,tony19,APPROVED,LGTM. Thanks for the updates!,2022-06-11T05:03:43Z
6037,PRR_kwDOCCum1847Wq2y,bbcvc,APPROVED,,2022-06-04T11:53:33Z
6037,PRR_kwDOCCum185iD6zP,skirtles-code,COMMENTED,,2023-09-26T20:55:00Z
6037,PRR_kwDOCCum185iE1vc,edison1105,COMMENTED,,2023-09-27T01:33:39Z
6041,PRR_kwDOCCum185DPEx6,antfu,APPROVED,,2022-10-03T09:00:54Z
6041,PRR_kwDOCCum185GNjYZ,sxzz,APPROVED,,2022-11-12T01:21:58Z
6112,PRR_kwDOCCum1848HDXj,Justineo,COMMENTED,,2022-06-16T04:39:51Z
6112,PRR_kwDOCCum1848HD1W,Justineo,COMMENTED,,2022-06-16T04:43:24Z
6136,PRR_kwDOCCum185DPEeH,antfu,APPROVED,,2022-10-03T08:59:58Z
6138,PRR_kwDOCCum1849OQ5E,LinusBorg,CHANGES_REQUESTED,,2022-07-04T07:49:46Z
6138,PRR_kwDOCCum1849OdCa,DrJume,COMMENTED,,2022-07-04T08:29:35Z
6138,PRR_kwDOCCum1849OlsD,LinusBorg,COMMENTED,,2022-07-04T08:56:45Z
6138,PRR_kwDOCCum1849Olxo,LinusBorg,APPROVED,,2022-07-04T08:57:00Z
6138,PRR_kwDOCCum185Dres-,antfu,APPROVED,,2022-10-10T04:35:18Z
6138,PRR_kwDOCCum185DsL4m,sxzz,APPROVED,,2022-10-10T08:38:27Z
6139,PRR_kwDOCCum185DPEMu,antfu,APPROVED,,2022-10-03T08:59:09Z
6160,PRR_kwDOCCum1848pNjj,BlackCrowxyz,APPROVED,,2022-06-23T18:00:16Z
6160,PRR_kwDOCCum185QkrAO,sxzz,APPROVED,,2023-03-22T06:16:31Z
6160,PRR_kwDOCCum185QmdMW,antfu,APPROVED,,2023-03-22T10:48:23Z
6160,PRR_kwDOCCum185SB18o,sxzz,APPROVED,,2023-04-07T13:44:10Z
6160,PRR_kwDOCCum185X0dBY,sxzz,APPROVED,,2023-06-10T09:32:37Z
6169,PRR_kwDOCCum1848wUd_,edison1105,APPROVED,,2022-06-25T11:30:26Z
6177,PRR_kwDOCCum1848wUYJ,edison1105,APPROVED,,2022-06-25T11:25:59Z
6177,PRR_kwDOCCum185X9u-2,sxzz,APPROVED,,2023-06-12T20:53:06Z
6182,PRR_kwDOCCum1848wUQd,edison1105,APPROVED,,2022-06-25T11:20:30Z
6182,PRR_kwDOCCum185FUGRc,antfu,APPROVED,,2022-11-01T06:33:49Z
6184,PRR_kwDOCCum185A_kXl,danielroe,APPROVED,,2022-08-30T14:14:34Z
6187,PRR_kwDOCCum185DPD59,antfu,APPROVED,,2022-10-03T08:58:18Z
6212,PRR_kwDOCCum185X9unA,sxzz,APPROVED,,2023-06-12T20:51:50Z
6215,PRR_kwDOCCum1849Ms9t,pikax,COMMENTED,,2022-07-02T08:49:01Z
6215,PRR_kwDOCCum1849Ms_K,pikax,COMMENTED,,2022-07-02T08:49:57Z
6215,PRR_kwDOCCum1849MtAN,pikax,COMMENTED,,2022-07-02T08:50:37Z
6215,PRR_kwDOCCum1849MtCL,pikax,COMMENTED,,2022-07-02T08:52:29Z
6224,PRR_kwDOCCum1849P9EW,LinusBorg,CHANGES_REQUESTED,,2022-07-04T13:55:14Z
6224,PRR_kwDOCCum1849QTe0,baiwusanyu-c,COMMENTED,,2022-07-04T15:14:31Z
6231,PRR_kwDOCCum1849ZUZD,unrevised6419,COMMENTED,,2022-07-06T12:56:05Z
6231,PRR_kwDOCCum1849ZUzE,unrevised6419,COMMENTED,,2022-07-06T12:57:11Z
6235,PRR_kwDOCCum1849Zs0d,ttttdx,APPROVED,,2022-07-06T13:58:18Z
6235,PRR_kwDOCCum184-DANd,chenhaihong,COMMENTED,"老哥，你的测试用例是不正确的。

KeepAlive[include='A']    A[key='1']   ==> 缓存A1
KeepAlive[include='A']    A[key='2']   ==> 缓存A2
KeepAlive[include='B']    A[key='2']   ==> 删除A1缓存
KeepAlive[include='B']    B[key='2']   ==> 删除A2缓存

你的测试用例的过程，之前的代码就能pass的。",2022-07-16T09:30:01Z
6235,PRR_kwDOCCum185ALdIN,yokiyokiyoki,APPROVED,yeap!,2022-08-18T06:07:02Z
6238,PRR_kwDOCCum186HLPk8,edison1105,CHANGES_REQUESTED,,2024-08-29T07:14:36Z
6238,PRR_kwDOCCum186HRNXX,qmhc,COMMENTED,,2024-08-29T16:31:15Z
6239,PRR_kwDOCCum185X9rt4,sxzz,COMMENTED,"Outdated. The file is removed in https://github.com/vuejs/core/commit/28b95daa70903dc92d16e4843abfc0595d436468#diff-e58783a8145cf75d03c863a5bd1dd2629876021076c489dee90fcbaa501eb343

I'll close this.",2023-06-12T20:42:57Z
6244,PRR_kwDOCCum1849nheE,Justineo,CHANGES_REQUESTED,,2022-07-11T04:00:22Z
6244,PRR_kwDOCCum1849njLR,Justineo,APPROVED,,2022-07-11T04:17:46Z
6254,PRR_kwDOCCum185GNibc,sxzz,COMMENTED,Could you please add some unit tests for it?,2022-11-12T00:56:12Z
6254,PRR_kwDOCCum185GNihj,sxzz,COMMENTED,~~maybe we could use `@babel/parser` to analyze the statement since `compiler-core` had depended on it already.~~,2022-11-12T00:58:43Z
6266,PRR_kwDOCCum184_rMMV,posva,COMMENTED,,2022-08-10T13:31:02Z
6266,PRR_kwDOCCum184_rj13,danielroe,COMMENTED,,2022-08-10T14:25:14Z
6266,PRR_kwDOCCum184_zpHP,edison1105,APPROVED,,2022-08-12T00:59:03Z
6294,PRR_kwDOCCum185X9srf,sxzz,APPROVED,LGTM,2023-06-12T20:45:53Z
6303,PRR_kwDOCCum184-wdqc,dammy001,COMMENTED,,2022-07-27T17:39:37Z
6303,PRR_kwDOCCum184-w8ic,sxzz,COMMENTED,,2022-07-27T18:24:41Z
6303,PRR_kwDOCCum184-xGyp,dammy001,COMMENTED,,2022-07-27T18:35:32Z
6303,PRR_kwDOCCum185DO1tV,antfu,APPROVED,,2022-10-03T08:13:11Z
6320,PRR_kwDOCCum184-YUVu,Dids,COMMENTED,,2022-07-21T13:46:43Z
6320,PRR_kwDOCCum184-YUZ0,Dids,COMMENTED,,2022-07-21T13:46:52Z
6320,PRR_kwDOCCum184-bAQG,linshuohao,COMMENTED,,2022-07-22T00:37:31Z
6321,PRR_kwDOCCum184-hwO6,IlyaBorisov-wb,APPROVED,,2022-07-25T08:13:25Z
6321,PRR_kwDOCCum185F_r3v,arnauddoub,APPROVED,,2022-11-09T15:57:20Z
6321,PRR_kwDOCCum185GAO30,sxzz,APPROVED,,2022-11-09T17:23:03Z
6322,PRR_kwDOCCum185X9qqH,sxzz,APPROVED,,2023-06-12T20:40:00Z
6351,PRR_kwDOCCum185X9pfe,sxzz,APPROVED,LGTM,2023-06-12T20:36:32Z
6355,PRR_kwDOCCum186OIC_j,edison1105,COMMENTED,,2024-10-22T09:02:13Z
6355,PRR_kwDOCCum186OIgUC,hubvue,COMMENTED,,2024-10-22T09:38:00Z
6355,PRR_kwDOCCum186O__pw,edison1105,APPROVED,,2024-10-28T13:50:46Z
6364,PRR_kwDOCCum184-4p_j,sxzz,APPROVED,,2022-07-29T05:48:15Z
6371,PRR_kwDOCCum184_1tgD,saschakreher,APPROVED,,2022-08-12T12:53:26Z
6380,PRR_kwDOCCum185DO1j7,antfu,COMMENTED,,2022-10-03T08:12:43Z
6380,PRR_kwDOCCum185DO2UT,sxzz,COMMENTED,,2022-10-03T08:15:09Z
6380,PRR_kwDOCCum185DO2ys,antfu,APPROVED,,2022-10-03T08:16:39Z
6414,PRR_kwDOCCum185X9o1U,sxzz,COMMENTED,"This package will never be published to npm registry, so I don't think it's necessary.",2023-06-12T20:34:41Z
6421,PRR_kwDOCCum185jEiLf,sxzz,APPROVED,,2023-10-06T15:27:28Z
6430,PRR_kwDOCCum184_zqLS,edison1105,COMMENTED,,2022-08-12T01:10:30Z
6430,PRR_kwDOCCum184_4I1P,sxzz,COMMENTED,,2022-08-12T19:24:42Z
6457,PRR_kwDOCCum185DO16g,antfu,APPROVED,,2022-10-03T08:13:51Z
6459,PRR_kwDOCCum185DO2gl,antfu,APPROVED,,2022-10-03T08:15:47Z
6461,PRR_kwDOCCum184_7EbO,timhere,APPROVED,,2022-08-15T10:02:45Z
6461,PRR_kwDOCCum185DO2EA,antfu,APPROVED,,2022-10-03T08:14:19Z
6467,PRR_kwDOCCum185AGVoe,YuuinIH,APPROVED,,2022-08-17T09:51:46Z
6467,PRR_kwDOCCum185AK6BC,YuuinIH,APPROVED,,2022-08-18T01:59:54Z
6467,PRR_kwDOCCum185AR_6u,edison1105,COMMENTED,,2022-08-19T08:19:12Z
6467,PRR_kwDOCCum185ASAGc,edison1105,COMMENTED,,2022-08-19T08:19:51Z
6467,PRR_kwDOCCum185ASAMo,edison1105,COMMENTED,,2022-08-19T08:20:11Z
6484,PRR_kwDOCCum185fz56b,baiwusanyu-c,APPROVED,,2023-09-01T18:13:23Z
6484,PRR_kwDOCCum185f3TWH,sxzz,APPROVED,,2023-09-02T15:48:36Z
6484,PRR_kwDOCCum185gqA6w,sxzz,APPROVED,,2023-09-12T08:27:12Z
6484,PRR_kwDOCCum185kjJ1X,haoqunjiang,APPROVED,,2023-10-19T07:36:28Z
6484,PRR_kwDOCCum185kr243,edison1105,APPROVED,,2023-10-20T04:56:21Z
6491,PRR_kwDOCCum185AHIVa,edison1105,CHANGES_REQUESTED,,2022-08-17T12:12:22Z
6491,PRR_kwDOCCum185ALARm,hcg1023,COMMENTED,,2022-08-18T02:29:59Z
6491,PRR_kwDOCCum185ALgCX,hcg1023,COMMENTED,,2022-08-18T06:22:05Z
6491,PRR_kwDOCCum185ALnZq,edison1105,COMMENTED,,2022-08-18T06:54:08Z
6491,PRR_kwDOCCum185ANCgA,hcg1023,COMMENTED,,2022-08-18T11:12:49Z
6491,PRR_kwDOCCum185ANaGv,edison1105,COMMENTED,,2022-08-18T12:27:00Z
6491,PRR_kwDOCCum185ARBmU,hcg1023,COMMENTED,,2022-08-19T02:33:06Z
6491,PRR_kwDOCCum185ARJrU,edison1105,COMMENTED,,2022-08-19T03:38:55Z
6491,PRR_kwDOCCum185ZUmny,mslawins,COMMENTED,,2023-06-26T13:47:53Z
6491,PRR_kwDOCCum185crr7f,reitowo,COMMENTED,,2023-07-31T14:42:53Z
6497,PRR_kwDOCCum185X9xvz,sxzz,APPROVED,,2023-06-12T21:00:35Z
6497,PRR_kwDOCCum185X99RZ,sxzz,CHANGES_REQUESTED,"We have already supported the number type key. To avoid any breaking changes, I suggest that we keep it.",2023-06-12T21:35:45Z
6497,PRR_kwDOCCum185o9PDa,sxzz,APPROVED,,2023-12-02T14:57:52Z
6506,PRR_kwDOCCum185BVVt-,zhenzhenChange,COMMENTED,,2022-09-05T08:58:13Z
6506,PRR_kwDOCCum185BYu9K,zhenzhenChange,COMMENTED,,2022-09-06T06:29:47Z
6506,PRR_kwDOCCum185BYzHX,zhenzhenChange,COMMENTED,,2022-09-06T06:46:30Z
6506,PRR_kwDOCCum185BY2KD,zhenzhenChange,COMMENTED,,2022-09-06T06:57:27Z
6506,PRR_kwDOCCum185BY308,zhenzhenChange,COMMENTED,,2022-09-06T07:03:19Z
6506,PRR_kwDOCCum185BY6v3,zhenzhenChange,COMMENTED,,2022-09-06T07:12:26Z
6529,PRR_kwDOCCum185Ac8t5,edison1105,COMMENTED,,2022-08-23T00:57:50Z
6529,PRR_kwDOCCum185AfGLh,nhpupu,COMMENTED,,2022-08-23T10:41:51Z
6565,PRR_kwDOCCum185X9xH1,sxzz,COMMENTED,Done via 7a0a6658c6f44c76f26c129e430a08da5977cc88,2023-06-12T20:59:26Z
6610,PRR_kwDOCCum185UQz4J,johnp,COMMENTED,"~~Works with Vite build & HMR~~. Passes all tests I threw at it, including all the one's from the alternative PR [here](https://github.com/vuejs/core/pull/7942#pullrequestreview-1413680050).

edit: Looking back, I'm having trouble replicating my Vite/HMR results. Might've used a direct `vue.esm-browser.js` import accidentally.",2023-05-04T18:31:01Z
6622,PRR_kwDOCCum185Da2NJ,antfu,APPROVED,,2022-10-05T09:04:01Z
6622,PRR_kwDOCCum185DbKj2,sxzz,APPROVED,,2022-10-05T10:10:55Z
6635,PRR_kwDOCCum185BtLk-,btea,COMMENTED,,2022-09-09T13:56:33Z
6636,PRR_kwDOCCum185CP2Zt,LinusBorg,APPROVED,,2022-09-17T16:28:47Z
6636,PRR_kwDOCCum185C2k2_,yyx990803,DISMISSED,,2022-09-27T09:12:43Z
6636,PRR_kwDOCCum185C2qhp,btea,COMMENTED,,2022-09-27T09:27:30Z
6636,PRR_kwDOCCum185DOxeT,antfu,APPROVED,,2022-10-03T08:00:25Z
6636,PRR_kwDOCCum185FtdCg,edison1105,APPROVED,,2022-11-06T05:02:39Z
6636,PRR_kwDOCCum185Ftupq,sxzz,APPROVED,,2022-11-06T15:41:17Z
6659,PRR_kwDOCCum185CjDtK,posva,CHANGES_REQUESTED,Can you add a failing test or provide a boiled-down repro (without vuetify)?,2022-09-22T07:00:00Z
6660,PRR_kwDOCCum185CjED2,posva,CHANGES_REQUESTED,can you add a unit test?,2022-09-22T07:01:24Z
6671,PRR_kwDOCCum185DgAue,sxzz,APPROVED,,2022-10-06T07:48:01Z
6671,PRR_kwDOCCum185DlN3R,antfu,APPROVED,,2022-10-07T02:13:26Z
6688,PRR_kwDOCCum185C8oWm,edison1105,APPROVED,,2022-09-28T07:51:37Z
6688,PRR_kwDOCCum186pxYEY,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 1222437ec26a6da1dbd5b882aecd4a048a6e3571 and 1c02e5a9c2dbabf741e7381e9ead84b97a345510.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/runtime-core/__tests__/componentEmits.spec.ts` (2 hunks)
* `packages/runtime-core/src/componentEmits.ts` (2 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/runtime-core/__tests__/componentEmits.spec.ts (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/componentEmits.ts (1)</summary>

* `emit` (73-195)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>🔇 Additional comments (3)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/componentEmits.ts (1)</summary>

`30-30`: **Appropriate import for tracking control.**

The added import brings in reactivity tracking control methods, which will be used to pause dependency tracking during event handler execution.

</details>
<details>
<summary>packages/runtime-core/__tests__/componentEmits.spec.ts (2)</summary>

`10-12`: **Added necessary imports for reactive testing.**

These imports are required for the new test case that verifies the reactivity tracking behavior.

---

`437-467`: **Well-designed test for the reactivity tracking fix.**

This test effectively verifies that event handlers aren't being tracked as dependencies of reactive effects. By using a `watchEffect` that emits an event, and an event handler that modifies reactive state and triggers multiple ticks, it confirms that the counter only increments once instead of causing an infinite loop.

The test design aligns perfectly with the fix implemented in `componentEmits.ts` by proving that reactive tracking is properly paused during handler execution.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-17T14:18:42Z
6689,PRR_kwDOCCum185D3VO9,antfu,APPROVED,"Other than the nitpicking on naming, the implementation LGTM",2022-10-12T07:32:21Z
6689,PRR_kwDOCCum185D3c9I,sxzz,APPROVED,,2022-10-12T07:56:11Z
6689,PRR_kwDOCCum185D3hkP,zhangzhonghe,COMMENTED,,2022-10-12T08:08:25Z
6700,PRR_kwDOCCum185kq7nG,sxzz,APPROVED,,2023-10-20T01:12:30Z
6708,PRR_kwDOCCum185CYYDD,posva,CHANGES_REQUESTED,Thanks!,2022-09-20T12:04:57Z
6708,PRR_kwDOCCum185CYaai,kidonng,COMMENTED,,2022-09-20T12:12:08Z
6708,PRR_kwDOCCum185CYcKy,posva,APPROVED,,2022-09-20T12:17:14Z
6708,PRR_kwDOCCum185CtXhg,antfu,APPROVED,,2022-09-24T07:13:32Z
6714,PRR_kwDOCCum185DSCJ9,sxzz,COMMENTED,,2022-10-03T17:58:44Z
6714,PRR_kwDOCCum185DSFjd,baiwusanyu-c,COMMENTED,,2022-10-03T18:10:15Z
6714,PRR_kwDOCCum185DlksF,LinusBorg,CHANGES_REQUESTED,A better / correct solution would involve reading ref.value in lines 101/102 in order to make it a template dependency in DEV as well (where the ref is only passed via it's string name and thus not being read in line 87).,2022-10-07T05:37:19Z
6729,PRR_kwDOCCum185CtXnA,antfu,COMMENTED,,2022-09-24T07:16:22Z
6729,PRR_kwDOCCum185CtYeY,PengBoUESTC,COMMENTED,,2022-09-24T07:31:06Z
6729,PRR_kwDOCCum185C8Sbt,PengBoUESTC,COMMENTED,,2022-09-28T06:42:10Z
6729,PRR_kwDOCCum185DOqu_,antfu,APPROVED,,2022-10-03T07:37:45Z
6736,PRR_kwDOCCum185DNTGI,DamianGlowala,COMMENTED,,2022-10-01T19:18:43Z
6764,PRR_kwDOCCum185DO0fJ,antfu,APPROVED,,2022-10-03T08:09:11Z
6765,PRR_kwDOCCum185kpPRR,skirtles-code,COMMENTED,,2023-10-19T19:49:44Z
6765,PRR_kwDOCCum185kq4gX,godxiaoji,COMMENTED,,2023-10-20T01:06:04Z
6765,PRR_kwDOCCum185ktxfd,skirtles-code,COMMENTED,,2023-10-20T10:22:38Z
6765,PRR_kwDOCCum185kvKaf,godxiaoji,COMMENTED,,2023-10-20T13:48:01Z
6765,PRR_kwDOCCum1858ZNyV,edison1105,CHANGES_REQUESTED,,2024-05-30T02:26:52Z
6765,PRR_kwDOCCum1858aUhG,edison1105,APPROVED,,2024-05-30T05:41:24Z
6769,PRR_kwDOCCum185DOqCG,antfu,APPROVED,,2022-10-03T07:35:08Z
6774,PRR_kwDOCCum185DOuDh,antfu,APPROVED,We have some conflicts. Otherwise LGTM.,2022-10-03T07:49:39Z
6777,PRR_kwDOCCum185DEM7a,songjianet,APPROVED,LGTM,2022-09-29T12:08:15Z
6777,PRR_kwDOCCum185DOtrt,antfu,APPROVED,Could we have a test case to avoid future regression?,2022-10-03T07:48:24Z
6777,PRR_kwDOCCum185DOvrj,antfu,APPROVED,,2022-10-03T07:54:56Z
6777,PRR_kwDOCCum185F0dD0,yyx990803,COMMENTED,,2022-11-08T03:14:09Z
6778,PRR_kwDOCCum185DOxEb,antfu,APPROVED,,2022-10-03T07:59:09Z
6781,PRR_kwDOCCum185DOvc0,antfu,COMMENTED,,2022-10-03T07:54:09Z
6781,PRR_kwDOCCum185DO3Li,antfu,APPROVED,In general LGTM. Though I think the message could be improved.,2022-10-03T08:17:56Z
6804,PRR_kwDOCCum185DO3jx,antfu,APPROVED,,2022-10-03T08:19:10Z
6808,PRR_kwDOCCum185DOneZ,antfu,COMMENTED,,2022-10-03T07:28:30Z
6808,PRR_kwDOCCum185DOvcG,rudyxu1102,COMMENTED,,2022-10-03T07:54:07Z
6808,PRR_kwDOCCum185DOwG5,antfu,APPROVED,,2022-10-03T07:56:07Z
6808,PRR_kwDOCCum185DO7Me,sxzz,CHANGES_REQUESTED,,2022-10-03T08:30:46Z
6808,PRR_kwDOCCum185DO_oa,rudyxu1102,COMMENTED,,2022-10-03T08:45:06Z
6808,PRR_kwDOCCum185DO_8B,sxzz,COMMENTED,PR title: `tranform` -> `transform`,2022-10-03T08:46:02Z
6809,PRR_kwDOCCum185DOjwH,antfu,APPROVED,,2022-10-03T07:16:15Z
6810,PRR_kwDOCCum185DOmDy,antfu,APPROVED,,2022-10-03T07:25:33Z
6810,PRR_kwDOCCum185DUEk-,sxzz,APPROVED,,2022-10-04T05:58:47Z
6812,PRR_kwDOCCum185DOtXR,antfu,APPROVED,,2022-10-03T07:47:15Z
6812,PRR_kwDOCCum185DO06j,antfu,COMMENTED,,2022-10-03T08:10:35Z
6812,PRR_kwDOCCum185DPMuF,posva,COMMENTED,,2022-10-03T09:25:22Z
6812,PRR_kwDOCCum185DPNDA,Akryum,APPROVED,,2022-10-03T09:26:24Z
6812,PRR_kwDOCCum185DPNcB,Akryum,COMMENTED,,2022-10-03T09:27:32Z
6813,PRR_kwDOCCum185DUJ_3,antfu,APPROVED,,2022-10-04T06:27:48Z
6815,PRR_kwDOCCum185DUJFh,antfu,APPROVED,,2022-10-04T06:23:08Z
6815,PRR_kwDOCCum185DiFu1,posva,APPROVED,[Nice!](https://deploy-preview-6815--vue-sfc-playground.netlify.app/#__DEV__eNqlUEtOwzAUvMqTN2mlOhELEAopEvfwJp+X1iixLdtJFVVZlA1iDeIKLFCF2CGx5ChBFcfAaYpUSnfs3psZvxnPklwp5dcVkpBEJtVcWTBoK3XJBC+V1BaWoDGHFnItS/Cc1GOCiVQKYwHFrOBmDtNeM/I0Zt74h/t8W28eb49S3eq5W713N/fd6uGoINex+HiKuTlgo2DI6NK5xWKpithiv9ko4zWkRWzMlJGYkcChAL/QZECjYP+hiIxtin4ESGTWLPsBIJWF1CHUNOEiGw1/GV8c4zavd18v64FrtxG398iEDAXSMlb+tZHCVbw9znaEYSSEnR0jrth+Z2RurTJhEGSoCtlQpbHmuKBn5yenlDoVNXlKXfxmpmUlMl+gLXje+LFSgaN9XQnLS/TRlDTRcmFQO3tGJntOgQNr1FSjyFCj/r/zwcE/7rt2WtJ+AzOa4w4=),2022-10-06T13:30:34Z
6816,PRR_kwDOCCum185ER352,posva,APPROVED,"Despite devtools not highlighting the syntax correctly: [the `)` looks like it closes the `var()` statement](https://deploy-preview-6816--vue-sfc-playground.netlify.app/#eNqlUe1S2zAQfJWrmtZJiSzgB8MYh7bPgfhw7HMiRpY00tkhE8Kzo9gYMvCTf7q93dvV3Y79dy7tWmQZy0PplSMISK27lkYaAI0EZRvINveB2rqGBUw81tPL09PZ2J+scYQTj0mPgxDwQ7Kfk1+/k+nsz8k8FdlVvrj+++9Gytu7h93z/mXUF6P6/H3kcoTODja5GJL1mXLCxumCMFYAeaU6KHURwkIywieSrMcB1qi17SkiciKYiyNlLANt9TAkPQhhN+hKq63PoONLZarp4W8nIFkl2exqILiiqpRZcY01vfOmRaQtZyDgPD4S95TAyK+tIb5BtVp/0JPjnSYDc99/tA/F5kw1znriTeHSx2BNPE+fT741gmTZmFiyeL9DLdmayIVMiAqdtlvuPHYKN/zi8uyC88jioS553MF25W1rqtQgaVVv08I5Edupbw2pBlMMDV96uwnoo71k8yMnEcEOPfdoKvTov+/8aeAX97ft7Nn+FT164EY=)

![Screenshot 2022-10-18 at 12 32 25](https://user-images.githubusercontent.com/664177/196406937-1672f418-91bd-4fa8-a7b4-7ecb7916fc62.png)
😆 

It looks good! 👍 
",2022-10-18T10:35:03Z
6816,PRR_kwDOCCum185ESWM6,antfu,COMMENTED,"LGTM. Giving the fact that ` ` and `.` are quite common, maybe we could replace them to `_` for better readbility?",2022-10-18T12:04:18Z
6816,PRR_kwDOCCum185FGNbB,antfu,APPROVED,,2022-10-28T01:54:30Z
6819,PRR_kwDOCCum185DZ4UQ,sxzz,COMMENTED,"I'm not sure if we should have an issue discussing this feature first.
",2022-10-05T03:51:16Z
6819,PRR_kwDOCCum185DabLj,sxzz,COMMENTED,,2022-10-05T07:38:43Z
6819,PRR_kwDOCCum185DanYz,jaulz,COMMENTED,,2022-10-05T08:18:01Z
6819,PRR_kwDOCCum185DbJd9,sxzz,COMMENTED,,2022-10-05T10:06:57Z
6821,PRR_kwDOCCum185Da1Dn,antfu,APPROVED,,2022-10-05T09:00:24Z
6821,PRR_kwDOCCum185DiEGq,posva,APPROVED,,2022-10-06T13:26:46Z
6823,PRR_kwDOCCum185DeNMI,antfu,APPROVED,,2022-10-05T20:13:09Z
6826,PRR_kwDOCCum185DeM8K,antfu,APPROVED,,2022-10-05T20:12:22Z
6827,PRR_kwDOCCum185DfkjI,sxzz,COMMENTED,Could you please add unit tests of the issue?,2022-10-06T06:04:28Z
6827,PRR_kwDOCCum185Dg-Hm,sxzz,COMMENTED,,2022-10-06T10:12:34Z
6827,PRR_kwDOCCum185DhG6M,godxiaoji,COMMENTED,,2022-10-06T10:41:23Z
6827,PRR_kwDOCCum185DhJxx,sxzz,COMMENTED,,2022-10-06T10:51:04Z
6827,PRR_kwDOCCum185DiAmc,godxiaoji,COMMENTED,,2022-10-06T13:18:30Z
6827,PRR_kwDOCCum185DiCSz,posva,CHANGES_REQUESTED,"Thanks! It's actually the other way around, it **should fail** in dev (like it does in prod): https://github.com/vitejs/vite/issues/3872#issuecomment-866583703",2022-10-06T13:22:35Z
6827,PRR_kwDOCCum185DiDW6,sxzz,APPROVED,,2022-10-06T13:25:02Z
6827,PRR_kwDOCCum185DiEjX,sxzz,COMMENTED,,2022-10-06T13:27:49Z
6827,PRR_kwDOCCum185DigzY,posva,COMMENTED,,2022-10-06T14:31:45Z
6827,PRR_kwDOCCum185Div-L,godxiaoji,COMMENTED,,2022-10-06T15:05:54Z
6827,PRR_kwDOCCum185Iaca9,posva,COMMENTED,,2022-12-13T08:08:28Z
6827,PRR_kwDOCCum185Iah5i,godxiaoji,COMMENTED,,2022-12-13T08:19:26Z
6828,PRR_kwDOCCum185Djpo-,znck,CHANGES_REQUESTED,"
We can shorten the condition to: 
(prev.type === ELEMENT || prev.type === COMMENT) && (next.type === ELEMENT || next.type === COMMENT)

",2022-10-06T17:49:58Z
6828,PRR_kwDOCCum185DwMPq,znck,APPROVED,,2022-10-11T03:01:42Z
6830,PRR_kwDOCCum185Dq29u,antfu,APPROVED,,2022-10-09T06:56:14Z
6839,PRR_kwDOCCum185Drecz,antfu,COMMENTED,,2022-10-10T04:31:55Z
6839,PRR_kwDOCCum185Drkc7,zhangzhonghe,COMMENTED,,2022-10-10T05:39:50Z
6839,PRR_kwDOCCum185DrlHJ,zhangzhonghe,COMMENTED,,2022-10-10T05:45:45Z
6839,PRR_kwDOCCum185DsD56,antfu,APPROVED,,2022-10-10T08:11:39Z
6840,PRR_kwDOCCum185Dq1Og,sxzz,COMMENTED,,2022-10-09T05:34:51Z
6840,PRR_kwDOCCum185DrctL,antfu,APPROVED,,2022-10-10T04:09:10Z
6843,PRR_kwDOCCum185D37UG,antfu,APPROVED,,2022-10-12T09:13:08Z
6855,PRR_kwDOCCum185D3L-j,sxzz,APPROVED,,2022-10-12T07:01:10Z
6855,PRR_kwDOCCum185D3UFi,antfu,APPROVED,,2022-10-12T07:28:43Z
6855,PRR_kwDOCCum185EGQ5d,haoqunjiang,APPROVED,,2022-10-14T14:06:49Z
6855,PRR_kwDOCCum185EKik2,Shinigami92,APPROVED,,2022-10-17T07:19:33Z
6858,PRR_kwDOCCum185Fm7ej,edison1105,COMMENTED,,2022-11-04T01:29:05Z
6864,PRR_kwDOCCum185k-q3e,haoqunjiang,CHANGES_REQUESTED,"Thanks for the PR!
I can confirm this fixed the linked bug.
But I've got a few questions on the implementation details.",2023-10-24T07:06:09Z
6864,PRR_kwDOCCum185lAtba,weidehai,COMMENTED,,2023-10-24T12:07:56Z
6864,PRR_kwDOCCum185lAtgX,weidehai,COMMENTED,,2023-10-24T12:08:08Z
6865,PRR_kwDOCCum185D85Zv,sxzz,COMMENTED,,2022-10-13T04:34:30Z
6865,PRR_kwDOCCum185D9Bh8,SuzumiyaHaku,COMMENTED,,2022-10-13T05:28:23Z
6883,PRR_kwDOCCum185EFOR_,sxzz,COMMENTED,"Consider this example:

```ts
const msg = $ref('test')
$$([msg]) // It really should be `Ref<string>[]`
```

Why escape a normal variable for you demo?",2022-10-14T10:44:05Z
6901,PRR_kwDOCCum185EPksO,sxzz,APPROVED,Nice!,2022-10-18T00:01:05Z
6901,PRR_kwDOCCum185EP9xu,baiwusanyu-c,APPROVED,good ！,2022-10-18T03:15:01Z
6901,PRR_kwDOCCum185Eqeir,hexiaokang,APPROVED,,2022-10-22T13:59:14Z
6902,PRR_kwDOCCum185ERn-b,posva,CHANGES_REQUESTED,,2022-10-18T09:56:25Z
6902,PRR_kwDOCCum185ETmdn,baiwusanyu-c,COMMENTED,,2022-10-18T14:53:06Z
6902,PRR_kwDOCCum185ET7lh,sxzz,COMMENTED,,2022-10-18T15:36:06Z
6902,PRR_kwDOCCum185EXhE5,posva,COMMENTED,,2022-10-19T07:47:18Z
6902,PRR_kwDOCCum185EXkip,baiwusanyu-c,COMMENTED,,2022-10-19T07:55:21Z
6902,PRR_kwDOCCum185Ekq0O,posva,APPROVED,,2022-10-21T07:21:14Z
6902,PRR_kwDOCCum185FMnsl,sxzz,COMMENTED,,2022-10-29T07:15:35Z
6908,PRR_kwDOCCum185EUy1s,sxzz,COMMENTED,,2022-10-18T18:09:18Z
6908,PRR_kwDOCCum185EqeOH,hexiaokang,APPROVED,,2022-10-22T13:56:51Z
6916,PRR_kwDOCCum185Eh7rg,sxzz,APPROVED,,2022-10-20T18:07:04Z
6916,PRR_kwDOCCum185EqIww,antfu,APPROVED,,2022-10-22T09:11:23Z
6919,PRR_kwDOCCum185EgjE_,sxzz,COMMENTED,"Could you please explain why did you make this PR and improve what? 🤔 I'm a bit confused.
",2022-10-20T14:33:04Z
6933,PRR_kwDOCCum185GNwhY,ysy945,COMMENTED,@sxzz ,2022-11-12T04:41:13Z
6936,PRR_kwDOCCum185EyH0L,edison1105,CHANGES_REQUESTED,,2022-10-25T01:00:28Z
6936,PRR_kwDOCCum185EybGU,zhangzhonghe,COMMENTED,,2022-10-25T03:12:54Z
6936,PRR_kwDOCCum185EypKs,edison1105,APPROVED,,2022-10-25T04:56:55Z
6944,PRR_kwDOCCum185FCEB9,sxzz,COMMENTED,"It will break existing code. We should keep expressions in backets.

[Before](https://sfc.vuejs.org/#eNo9T8sOgkAM/JVN40EDLJ4RTfyPvSCpCmEf2RY9kP13u6DeOjOd6XSBawj6NSM00FIfh8CKkOdwMW5CVr2fHauzOp6MM673jlhFpHnK5G63X/WiKLfFg3FtvaWIXwCjDVPHKEipZflZU8qLfxFKGGzwkSvbBT2Sd9JmyRbzFchAo1Ymc1I3YwNP5kBNXdO9zz+MpH181DLpKG0GixrJVrfo34RRgg3kCDmeIH0Aeu1Wyg==)

[After](https://deploy-preview-6944--vue-sfc-playground.netlify.app/#eNo9jttOwzAMhl8lsnYB2pJyMSFRBhLvkZvSeRCUgxW7m6qq746zwS79H/x/C3wQufOE0MOBxxpIDKNM9O5zRDFjmbKYN/P06rPPY8kspiJPsYmbzcPV3253t+Cjz4fu9kX7eggmioOgXsYsy391XVvwbsIOQqJSxaaB3A+XrDRLq/g/gz305qo0TXHb7eFbhLjvuiNSLLOliueAF/v8st9bqynLp9HqxvxVFe/oMkoMp9kNRJ3aripzSOiQk/2s5cJYdd5DG1LEFdZfWP9kmg==)",2022-10-27T12:23:03Z
6944,PRR_kwDOCCum185FCfKV,sxzz,COMMENTED,"Still error... It's a pretty troubling example.
https://deploy-preview-6944--vue-sfc-playground.netlify.app/#eNqlUMtOwzAQ/BXL6gHU2OFQIREKEv/hS0i2JciP1XqTKory76wbhBAce/M8PDPaRb8h2mkE3ehj7mhAVhl4xFcXPbDq0hhZvaiHZxe7FHPyYH063135exd3u+2531ebV7hjvQVJhACGgL5lEKTUsiiCPHpW61qMP6Ku9BAwEZvQov3MKcqgpXxx30J2ulFXpnCyuGCnP5gxN3XdA/o0GySYBriYx6fDwRhxmXzqjHTMZ5J5vY3AfjjNtkWsRbYkm4cAFnIw75QuGUjqna5+NdVCTkCGIPZAQLc3/wn8117K5UCrXr8ABJKTFw==",2022-10-27T13:30:37Z
6944,PRR_kwDOCCum185FDCt3,sxzz,COMMENTED,😖[Another case](https://deploy-preview-6944--vue-sfc-playground.netlify.app/#eNqlUMtOwzAQ/BXL6gHU2OFQIREKEv/hS0i2JciP1XqTKory76wbhBAce5zHzox20W+IdhpBN/qYOxqQVQYe8dVFD6y6NEZWL+rh2cUuxZw8WJ/Od1f+3sXCbo7dbiP3+2q7EvVYb5ESJoAhoG8ZBCm1LIogj57Vuhbjj6grPQRMxCa0aD9zijJtKSfuW8hON+rKFE62F+z0BzPmpq57QJ9mgwTTABfz+HQ4GCMuk0+dkY75TDKvtxHYD6fZtoi1yJZk8xDAQg7mndIlA0m909WvplrICcgQxB4I6PbmP4H/2ku5PGjV6xe7ipaH),2022-10-27T14:42:55Z
6944,PRR_kwDOCCum185FGP-H,tuchg,COMMENTED,,2022-10-28T02:07:14Z
6944,PRR_kwDOCCum185FGUuG,sxzz,COMMENTED,[Another case](https://deploy-preview-6944--vue-sfc-playground.netlify.app/#eNqlkMFqwzAQRH9FiBwSYsk9hELdtND/0MW1N6mLLC2rtYMx/veunFJKcgzoMjO7+wbN+gPRjgPoSh9TQx2ySsADvrvggVUTh8DqTT29utDEkKIH6+N5u/o7F1zYbLbyVr3fF9eFnSTH8npODolg6NHXDKKUmmdFkAbPalny4F+oC931GIlNX6P9TjFIrTmvuN8gOV2p1cme9M7a6S9mTFVZtoA+TgYJxg4u5vnlcDBGpkw6NUYY05mkX2sDsO9Ok60RS4ktSemuBwupN58ULwlI8E4X/0ilmCOQIQgtENDj5JuDd/QMlw9a9PIDf2mUeg==),2022-10-28T02:31:49Z
6944,PRR_kwDOCCum185FJWTz,sxzz,COMMENTED,"😅 Such a huge number of edge cases. We should also handle spaces.

[Another case](https://deploy-preview-6944--vue-sfc-playground.netlify.app/#eNqlkEFrwzAMhf+KMD1sUDs7lMGybrD/4UuWqF2GYwtZSQkh/31yO8Zojz2+9yR9Dy3mg8hNI5ra7HPLPQlklJHefQwo0KYxCrzB06uPbYo5BXQhHR/O/qOPPm42cFGgcl9dbui2CsGBQiOoCmBZgDGPQWBdy+BfaLamHyix2KEh951T1C5LWfG/QfamhrNTPC1btDdfIpTrquqQQpotMU49nuzzy25nrU7ZfGitMuYja7/ORZTQH2bXEFUaO9bS/YAO82A/OZ0ysuK92f4jVWpOyJYxdsjI95OvDt7QC1wftJr1By+akVY=)",2022-10-28T13:35:48Z
6944,PRR_kwDOCCum185FJada,tuchg,COMMENTED,,2022-10-28T13:47:00Z
6944,PRR_kwDOCCum185FKBKd,sxzz,COMMENTED,"🙇🏻 Sorry, but...
[Another case](https://deploy-preview-6944--vue-sfc-playground.netlify.app/#eNqlkFFLxDAQhP/KEu7hxEuqcAjWU/B/5KW2e2clTZbNtkcp/e9uzkNEH32cmc18QxbzSuSmEU1tDrnlngQyykgvPgYUaNMYBZ7h7snHNsWcArqQTtuLf+Ojj5vN9qrgFu7VOlRfPdqgQnCg0AiqAlgWYMxjEFjXcvgdmp3pB0osdmjIfeQUdc9SnvhrkL2p4eIUTwcX7c27COW6qjqkkGZLjFOPZ/vwuN9bq1c2H1urjPnEurFzESX0x9k1RJXGjnV4P6DDPNg3TueMrHhvdj9IlZoTsmWMHTLy/8m/Cv/QC1w/aDXrJ350kgM=)",2022-10-28T15:28:24Z
6944,PRR_kwDOCCum185FKC8i,sxzz,CHANGES_REQUESTED,[Case 2](https://deploy-preview-6944--vue-sfc-playground.netlify.app/#eNqlkM1OwzAQhF/FsnooUu1wqJAIBYnnwBxCsi1B/lmtN6miKO/OOiCE2mNvnpnd/Uae9SuiHQfQtT7klnpklYEHfHHRA6s2DZHVs7p/crFNMScP1qfTdvXvXNxstm/r+13Eofq5ILsiGAL6hkGUUvOsCPLgWS1LGfwL9U73AROxCQ3ar5yiNJnLivsNstO1Wp3iSdWinf5kxlxXVQfo02SQYOzhbB4e93tjZMrkY2uEMZ1I+nU2Avv+ONkGsZLYkpTuA1jIwXxQOmcgwTu9+0eqxByBDEHsgIBuJ18cvKIXuHzQopdvjyuRBA==),2022-10-28T15:33:28Z
6944,PRR_kwDOCCum185FMehY,sxzz,COMMENTED,"❤️ Great! Thanks for your contribution! 

Could you please add more tests about the examples I provided?",2022-10-29T03:02:09Z
6944,PRR_kwDOCCum185FMnSq,sxzz,APPROVED,"LGTM, thanks!",2022-10-29T06:58:39Z
6944,PRR_kwDOCCum185F7LmH,sxzz,COMMENTED,"Could you please revert the format commit? (Just run `pnpm run format` to fix that)
It causes lots of unrelated changes.",2022-11-09T02:02:05Z
6944,PRR_kwDOCCum185F7g4-,sxzz,APPROVED,LGTM,2022-11-09T03:28:28Z
6944,PRR_kwDOCCum185GPJxm,yyx990803,COMMENTED,,2022-11-14T02:26:55Z
6944,PRR_kwDOCCum185GPSi9,yyx990803,COMMENTED,,2022-11-14T03:45:05Z
6948,PRR_kwDOCCum185Fj1lg,sxzz,APPROVED,,2022-11-03T14:30:09Z
6952,PRR_kwDOCCum185E5sLH,edison1105,COMMENTED,,2022-10-26T07:14:16Z
6952,PRR_kwDOCCum185E7jMb,rudyxu1102,COMMENTED,,2022-10-26T13:01:04Z
6952,PRR_kwDOCCum185E_du-,edison1105,COMMENTED,,2022-10-27T01:49:41Z
6962,PRR_kwDOCCum185E8Dfr,edison1105,COMMENTED,,2022-10-26T14:10:44Z
6962,PRR_kwDOCCum185E_uCl,zhangzhonghe,COMMENTED,,2022-10-27T03:31:29Z
6962,PRR_kwDOCCum185E_wKO,edison1105,COMMENTED,,2022-10-27T03:47:40Z
6963,PRR_kwDOCCum185FF-kT,antfu,APPROVED,,2022-10-28T00:47:21Z
6966,PRR_kwDOCCum185FApEA,ysy945,COMMENTED,update,2022-10-27T08:10:00Z
6966,PRR_kwDOCCum185FAuo2,tuchg,COMMENTED,it always to trigger a unmounted hook. I think this shadowDom should be cached rather than rebuilt.,2022-10-27T08:25:13Z
6969,PRR_kwDOCCum185FBMAk,ysy945,COMMENTED,update,2022-10-27T09:40:09Z
6969,PRR_kwDOCCum185FBUxA,ysy945,COMMENTED,update,2022-10-27T09:58:20Z
6969,PRR_kwDOCCum185FBYhi,ysy945,COMMENTED,update,2022-10-27T10:09:00Z
6969,PRR_kwDOCCum185FB2zv,ysy945,COMMENTED,update,2022-10-27T11:44:25Z
6969,PRR_kwDOCCum185FB3rm,ysy945,COMMENTED,update,2022-10-27T11:47:06Z
6969,PRR_kwDOCCum185FCBkN,ysy945,COMMENTED,update,2022-10-27T12:16:02Z
6969,PRR_kwDOCCum185FCE6X,ysy945,COMMENTED,"u
",2022-10-27T12:25:23Z
6972,PRR_kwDOCCum185FF-qR,antfu,APPROVED,,2022-10-28T00:48:17Z
6975,PRR_kwDOCCum185FY-CO,znck,APPROVED,,2022-11-01T23:17:41Z
6990,PRR_kwDOCCum185FNOKK,sxzz,COMMENTED,,2022-10-30T10:24:36Z
6990,PRR_kwDOCCum185FNdQg,JayFate,COMMENTED,,2022-10-30T15:42:49Z
6990,PRR_kwDOCCum185FNezE,JayFate,COMMENTED,,2022-10-30T16:33:54Z
6990,PRR_kwDOCCum185FOa9H,sxzz,CHANGES_REQUESTED,,2022-10-31T07:06:50Z
6990,PRR_kwDOCCum185FTjZe,JayFate,COMMENTED,,2022-11-01T02:23:00Z
6990,PRR_kwDOCCum185FTjaa,JayFate,COMMENTED,,2022-11-01T02:23:07Z
6990,PRR_kwDOCCum185FTjbQ,JayFate,COMMENTED,,2022-11-01T02:23:13Z
6990,PRR_kwDOCCum185FTjby,JayFate,COMMENTED,,2022-11-01T02:23:18Z
6990,PRR_kwDOCCum185FnXSg,sxzz,COMMENTED,,2022-11-04T05:02:33Z
6990,PRR_kwDOCCum185FnzT7,JayFate,COMMENTED,,2022-11-04T07:27:55Z
6990,PRR_kwDOCCum185GD1sj,sxzz,APPROVED,,2022-11-10T09:59:13Z
6993,PRR_kwDOCCum185GP6JM,yyx990803,COMMENTED,,2022-11-14T07:46:24Z
6993,PRR_kwDOCCum185GP7OQ,yyx990803,COMMENTED,,2022-11-14T07:50:26Z
7004,PRR_kwDOCCum185FV96s,sxzz,COMMENTED,,2022-11-01T14:00:27Z
7004,PRR_kwDOCCum185GfnMm,sxzz,APPROVED,,2022-11-16T14:28:26Z
7017,PRR_kwDOCCum185FnYNg,sxzz,COMMENTED,LGTM,2022-11-04T05:09:26Z
7017,PRR_kwDOCCum185FpZbp,antfu,COMMENTED,,2022-11-04T12:56:16Z
7017,PRR_kwDOCCum185Fp6BE,ben-lau,COMMENTED,,2022-11-04T14:20:41Z
7017,PRR_kwDOCCum185FsPZI,posva,COMMENTED,"Thanks for the PR! Pushing and popping into an array every time a component mounts is likely to have a negative impact on performance.

Let's wait until we can confirm https://github.com/vuejs/core/issues/7021 is indeed a bug",2022-11-04T21:54:01Z
7018,PRR_kwDOCCum185FkkA1,znck,COMMENTED,I looked at the linked issue and still I don't understand the use-case for this. We cannot throw errors in template as `throw new Error()` is a statement and we cannot use statements in template (except for v-on).,2022-11-03T15:51:40Z
7018,PRR_kwDOCCum185Fk-An,sxzz,APPROVED,,2022-11-03T16:47:03Z
7018,PRR_kwDOCCum185ktJ5W,sxzz,APPROVED,,2023-10-20T08:51:01Z
7031,PRR_kwDOCCum185Fsg0G,webfansplz,APPROVED,,2022-11-05T02:29:10Z
7032,PRR_kwDOCCum185FthRX,sxzz,APPROVED,,2022-11-06T09:46:18Z
7037,PRR_kwDOCCum185FyVb6,sxzz,APPROVED,,2022-11-07T17:33:50Z
7037,PRR_kwDOCCum185GPtYL,sxzz,COMMENTED,,2022-11-14T06:51:17Z
7041,PRR_kwDOCCum185FyYjv,sxzz,COMMENTED,"Consider this example:
`export const foo = default_`

Let's check if the brackets (`{}`) exist.
`export { foo as default }`",2022-11-07T17:43:22Z
7061,PRR_kwDOCCum185F5LJz,sxzz,COMMENTED,,2022-11-08T18:07:12Z
7061,PRR_kwDOCCum185F59pz,ycmjason,COMMENTED,,2022-11-08T20:54:52Z
7061,PRR_kwDOCCum185F7Igy,sxzz,COMMENTED,,2022-11-09T01:45:00Z
7061,PRR_kwDOCCum185F8gjZ,ycmjason,COMMENTED,,2022-11-09T07:44:42Z
7061,PRR_kwDOCCum185F8gkT,ycmjason,COMMENTED,,2022-11-09T07:44:46Z
7062,PRR_kwDOCCum185F7J9s,sxzz,APPROVED,LGTM,2022-11-09T01:52:50Z
7063,PRR_kwDOCCum185F7I6y,sxzz,APPROVED,,2022-11-09T01:46:51Z
7067,PRR_kwDOCCum185F_lqa,znck,APPROVED,,2022-11-09T15:43:15Z
7068,PRR_kwDOCCum185F8qnd,znck,CHANGES_REQUESTED,,2022-11-09T08:13:40Z
7068,PRR_kwDOCCum185F9_dl,sxzz,COMMENTED,,2022-11-09T11:42:59Z
7068,PRR_kwDOCCum185F_iI3,znck,APPROVED,,2022-11-09T15:35:07Z
7068,PRR_kwDOCCum185GH1P0,znck,CHANGES_REQUESTED,"I think it's safer if we use `as __VUE_DEFAULT__` in the else case (see highlighted line in the screenshot below).

<img width=""941"" alt=""image"" src=""https://user-images.githubusercontent.com/2596484/201200514-6eb5a025-16e9-402b-934b-5107ccb82b6e.png"">
",2022-11-10T20:36:52Z
7068,PRR_kwDOCCum185GIs0T,znck,APPROVED,,2022-11-11T01:18:40Z
7068,PRR_kwDOCCum185GMJ7i,sxzz,COMMENTED,,2022-11-11T16:34:44Z
7068,PRR_kwDOCCum185GNjUD,yyx990803,CHANGES_REQUESTED,"A problem with this approach: `rewriteDefault` is used in `@vitejs/plugin-vue` [here](https://github.com/vitejs/vite/blob/main/packages/plugin-vue/src/main.ts#L324), on the script string **already transformed by `compileScript`**. This means the string no longer matches the Node positions in the AST exposed on the SFC descriptor.

I think we need to do something similar to reactivity transform's `transformAST`:

1. Accept both the AST **and** the corresponding MagicString instance in `rewriteDefault`
2. Also expose the MagicString instance on the script block returned by `compileScript`
3. In `@vitejs/plugin-vue`, feature detect by checking whether MagicString instance is available
  - If yes, use AST-based rewrite by passing in AST + MagicString
  - If no, fallback to old usage",2022-11-12T01:19:48Z
7069,PRR_kwDOCCum185F8kr8,znck,APPROVED,,2022-11-09T07:56:43Z
7071,PRR_kwDOCCum185F-CjG,LinusBorg,APPROVED,,2022-11-09T11:52:04Z
7071,PRR_kwDOCCum185F-HaK,edison1105,APPROVED,,2022-11-09T12:05:08Z
7076,PRR_kwDOCCum185GD2zQ,sxzz,APPROVED,,2022-11-10T10:02:03Z
7083,PRR_kwDOCCum185GI8ia,znck,COMMENTED,,2022-11-11T03:25:27Z
7083,PRR_kwDOCCum185GI8up,znck,COMMENTED,,2022-11-11T03:27:02Z
7083,PRR_kwDOCCum185GI84D,znck,COMMENTED,,2022-11-11T03:28:23Z
7083,PRR_kwDOCCum185GJQWV,znck,COMMENTED,,2022-11-11T05:57:16Z
7083,PRR_kwDOCCum185GPMfV,haoqunjiang,COMMENTED,,2022-11-14T02:49:39Z
7083,PRR_kwDOCCum185OihU4,KaelWD,COMMENTED,,2023-02-28T13:57:47Z
7085,PRR_kwDOCCum185GNh0B,sxzz,COMMENTED,,2022-11-12T00:42:30Z
7089,PRR_kwDOCCum185GH2k6,sxzz,APPROVED,,2022-11-10T20:40:51Z
7109,PRR_kwDOCCum185GNO1l,znck,APPROVED,,2022-11-11T21:24:57Z
7114,PRR_kwDOCCum185j6_Ue,pikax,COMMENTED,,2023-10-13T12:44:29Z
7116,PRR_kwDOCCum185GOLvB,hexiaokang,APPROVED,,2022-11-12T13:09:36Z
7116,PRR_kwDOCCum185J7TF7,sxzz,COMMENTED,,2023-01-09T10:52:28Z
7116,PRR_kwDOCCum185J7Wwi,sxzz,COMMENTED,,2023-01-09T11:02:15Z
7116,PRR_kwDOCCum185J7nKt,godxiaoji,COMMENTED,,2023-01-09T11:54:18Z
7116,PRR_kwDOCCum185KNRVE,sxzz,COMMENTED,,2023-01-12T05:35:22Z
7116,PRR_kwDOCCum185KNWHC,godxiaoji,COMMENTED,,2023-01-12T06:04:41Z
7126,PRR_kwDOCCum185e-8nb,sxzz,APPROVED,,2023-08-24T13:13:14Z
7139,PRR_kwDOCCum185GYivc,sxzz,APPROVED,,2022-11-15T13:08:15Z
7140,PRR_kwDOCCum185Gb2JX,sxzz,APPROVED,,2022-11-15T23:59:39Z
7142,PRR_kwDOCCum185GfNii,sxzz,APPROVED,,2022-11-16T13:37:42Z
7151,PRR_kwDOCCum186EBx3q,edison1105,COMMENTED,,2024-08-02T08:54:45Z
7152,PRR_kwDOCCum185GfEp0,sxzz,CHANGES_REQUESTED,,2022-11-16T13:16:54Z
7152,PRR_kwDOCCum185GfVJ2,yuri-li,COMMENTED,,2022-11-16T13:52:42Z
7152,PRR_kwDOCCum185GfWLZ,yuri-li,COMMENTED,,2022-11-16T13:54:47Z
7152,PRR_kwDOCCum185Gf_95,yuri-li,COMMENTED,,2022-11-16T15:17:12Z
7153,PRR_kwDOCCum185GfXMV,sxzz,COMMENTED,,2022-11-16T13:56:24Z
7153,PRR_kwDOCCum185Gfw5a,baiwusanyu-c,COMMENTED,,2022-11-16T14:47:59Z
7153,PRR_kwDOCCum185GjF2c,sxzz,COMMENTED,[Relate comment](https://github.com/vuejs/core/issues/7150#issuecomment-1317143863),2022-11-17T02:50:35Z
7153,PRR_kwDOCCum185GjF33,sxzz,APPROVED,,2022-11-17T02:50:42Z
7167,PRR_kwDOCCum185GwGhV,LittleSound,COMMENTED,,2022-11-19T03:56:01Z
7167,PRR_kwDOCCum185GwGyO,sxzz,COMMENTED,,2022-11-19T04:09:31Z
7167,PRR_kwDOCCum185Hu_8c,PraveenNanda124,COMMENTED,Good work,2022-12-03T16:55:25Z
7170,PRR_kwDOCCum185GrEbP,sxzz,APPROVED,LGTM,2022-11-18T08:48:17Z
7174,PRR_kwDOCCum185Gsgfw,sxzz,APPROVED,,2022-11-18T13:12:05Z
7176,PRR_kwDOCCum185Gv03B,sxzz,COMMENTED,,2022-11-18T23:40:34Z
7176,PRR_kwDOCCum185Gv0RY,enkot,COMMENTED,,2022-11-18T23:37:41Z
7176,PRR_kwDOCCum185Gv2sQ,hydrati,COMMENTED,,2022-11-18T23:56:02Z
7176,PRR_kwDOCCum185Gv3Fv,hydrati,COMMENTED,,2022-11-18T23:57:44Z
7176,PRR_kwDOCCum185Gv4bx,sxzz,APPROVED,LGTM,2022-11-19T00:01:31Z
7176,PRR_kwDOCCum185Gv4kR,enkot,APPROVED,,2022-11-19T00:02:52Z
7176,PRR_kwDOCCum185GwMAB,avinean,CHANGES_REQUESTED,,2022-11-19T08:07:11Z
7176,PRR_kwDOCCum185GwNAO,hydrati,COMMENTED,,2022-11-19T08:37:09Z
7176,PRR_kwDOCCum185GwNBT,avinean,COMMENTED,,2022-11-19T08:38:07Z
7176,PRR_kwDOCCum185GwNCT,avinean,COMMENTED,,2022-11-19T08:39:09Z
7176,PRR_kwDOCCum185GwNGM,hydrati,COMMENTED,,2022-11-19T08:42:18Z
7176,PRR_kwDOCCum185GwNIx,avinean,COMMENTED,,2022-11-19T08:44:21Z
7176,PRR_kwDOCCum185GwOZO,hydrati,COMMENTED,,2022-11-19T09:29:05Z
7176,PRR_kwDOCCum185GwO0l,hydrati,COMMENTED,,2022-11-19T09:47:56Z
7176,PRR_kwDOCCum185Gz0ox,avinean,COMMENTED,,2022-11-21T10:56:22Z
7176,PRR_kwDOCCum185HN7zf,hydrati,COMMENTED,,2022-11-26T07:30:21Z
7176,PRR_kwDOCCum185JdWDG,hydrati,COMMENTED,,2022-12-29T11:52:54Z
7178,PRR_kwDOCCum185GwXXG,sxzz,APPROVED,,2022-11-19T15:11:04Z
7178,PRR_kwDOCCum185X9y5k,sxzz,APPROVED,,2023-06-12T21:04:17Z
7181,PRR_kwDOCCum185Gwn02,edison1105,CHANGES_REQUESTED,,2022-11-20T01:54:16Z
7181,PRR_kwDOCCum185Gwp9z,rudyxu1102,COMMENTED,,2022-11-20T03:03:28Z
7181,PRR_kwDOCCum185N7rIe,skirtles-code,COMMENTED,,2023-02-21T13:59:37Z
7181,PRR_kwDOCCum185OJivm,rudyxu1102,COMMENTED,,2023-02-23T12:01:27Z
7181,PRR_kwDOCCum185OJjq1,rudyxu1102,COMMENTED,,2023-02-23T12:04:02Z
7181,PRR_kwDOCCum185OJkLY,rudyxu1102,COMMENTED,,2023-02-23T12:05:20Z
7181,PRR_kwDOCCum185OMY2y,skirtles-code,COMMENTED,,2023-02-23T18:07:34Z
7181,PRR_kwDOCCum185OOW4g,rudyxu1102,COMMENTED,,2023-02-24T01:54:02Z
7181,PRR_kwDOCCum185kjJq_,edison1105,APPROVED,,2023-10-19T07:36:06Z
7184,PRR_kwDOCCum185Y_f1_,pdanpdan,COMMENTED,,2023-06-22T12:06:47Z
7184,PRR_kwDOCCum185ZNCXD,edison1105,COMMENTED,,2023-06-24T12:40:06Z
7198,PRR_kwDOCCum185HNd4T,sxzz,APPROVED,,2022-11-25T18:46:10Z
7199,PRR_kwDOCCum185HKT0_,sxzz,APPROVED,,2022-11-25T06:38:22Z
7217,PRR_kwDOCCum185HN7XQ,sxzz,APPROVED,,2022-11-26T07:04:23Z
7221,PRR_kwDOCCum185HOVV4,sxzz,APPROVED,,2022-11-27T07:16:31Z
7221,PRR_kwDOCCum185Hu_7J,PraveenNanda124,COMMENTED,Good work,2022-12-03T16:54:36Z
7232,PRR_kwDOCCum185IUktb,sxzz,DISMISSED,,2022-12-12T11:31:35Z
7232,PRR_kwDOCCum185IUlKs,sxzz,COMMENTED,"I guess it could reduce a few characters (`, eventInfo`) in production mode, right?",2022-12-12T11:33:05Z
7232,PRR_kwDOCCum185X91Me,sxzz,COMMENTED,"I think it's on purpose for reducing bundle size (Although only a few characters)
dev: `triggerEffects(deps[0], eventInfo)`
prod: `triggerEffects(deps[0])`",2023-06-12T21:10:14Z
7233,PRR_kwDOCCum185IUlRr,sxzz,APPROVED,,2022-12-12T11:33:29Z
7245,PRR_kwDOCCum185HnwRj,sxzz,APPROVED,,2022-12-01T20:09:46Z
7247,PRR_kwDOCCum185OHqJ4,edison1105,COMMENTED,,2023-02-23T05:18:27Z
7247,PRR_kwDOCCum1858s2Y0,skirtles-code,COMMENTED,,2024-06-01T15:48:55Z
7247,PRR_kwDOCCum1858tGII,edison1105,COMMENTED,,2024-06-02T01:09:55Z
7247,PRR_kwDOCCum186Fwr3E,skirtles-code,COMMENTED,"This change looks good to me.

A couple of observations:

1. The test is based on the original issue, which makes it look a bit more complicated than it needs to be. The slot and recursion aren't really necessary to hit the problem. Just a parent template like `<component is=""div""><one v-show=""false"" /></component>` is enough, with a child of `<div />`. It took me a while to understand what was going on because of the extra complexity in the test case.
2. The code is modifying the `vnode`, with `vnode.props =`. I'm not sure whether this is potentially a problem. I couldn't find anywhere else in this section of the code that modifies the original VNode like this, though that may just be a coincidence. Maybe there could be a problem if the VNode is reused somehow, or if some other code is expecting to access the unaltered props? Not sure what that would look like in practice, so it may be a non-issue.",2024-08-17T18:12:11Z
7251,PRR_kwDOCCum185ksdk2,pikax,APPROVED,,2023-10-20T07:06:53Z
7260,PRR_kwDOCCum185Hnwi8,sxzz,COMMENTED,,2022-12-01T20:10:49Z
7260,PRR_kwDOCCum185Hoyl6,qmhc,COMMENTED,,2022-12-02T01:39:17Z
7260,PRR_kwDOCCum185Hu_6R,PraveenNanda124,COMMENTED,Good work,2022-12-03T16:53:57Z
7265,PRR_kwDOCCum1858sDol,skirtles-code,COMMENTED,,2024-06-01T02:06:14Z
7265,PRR_kwDOCCum1859Jy4N,rudyxu1102,COMMENTED,,2024-06-05T16:35:08Z
7265,PRR_kwDOCCum186DmJnc,skirtles-code,COMMENTED,,2024-07-30T14:12:06Z
7265,PRR_kwDOCCum186F7Qkw,edison1105,COMMENTED,,2024-08-20T03:35:43Z
7265,PRR_kwDOCCum186F7SK5,edison1105,COMMENTED,,2024-08-20T03:45:22Z
7266,PRR_kwDOCCum185Hu1Dz,edison1105,COMMENTED,,2022-12-03T12:15:16Z
7266,PRR_kwDOCCum185Hu_5x,PraveenNanda124,COMMENTED,Good work,2022-12-03T16:53:24Z
7266,PRR_kwDOCCum185JUsT7,PraveenNanda124,COMMENTED,Looks good,2022-12-26T16:19:09Z
7268,PRR_kwDOCCum185HvnkK,sxzz,COMMENTED,"I prefer to use `\s\S` instead of `(.|\n)` since some cases have already used it.
https://github.com/vuejs/core/blob/fe77e2bddaa5930ad37a43fe8e6254ddb0f9c2d7/packages/compiler-core/src/transforms/vFor.ts#L311",2022-12-04T14:47:00Z
7268,PRR_kwDOCCum185ISCXR,sxzz,APPROVED,,2022-12-11T12:19:01Z
7272,PRR_kwDOCCum185HvnhR,sxzz,COMMENTED,,2022-12-04T14:45:41Z
7272,PRR_kwDOCCum185HwJPS,quangnv13,COMMENTED,,2022-12-05T03:00:37Z
7272,PRR_kwDOCCum185HwYej,sxzz,COMMENTED,,2022-12-05T05:08:00Z
7279,PRR_kwDOCCum185IRq41,sxzz,APPROVED,,2022-12-10T17:15:23Z
7279,PRR_kwDOCCum185IRr9d,sxzz,CHANGES_REQUESTED,"Problem stills
```vue
<script setup lang=""ts"">
const { foo } = $({ foo: 123 }),
  a = 'b'
</script>
```",2022-12-10T18:01:39Z
7282,PRR_kwDOCCum185ISCkh,sxzz,APPROVED,,2022-12-11T12:25:11Z
7290,PRR_kwDOCCum185mA5lI,edison1105,COMMENTED,,2023-11-03T00:54:37Z
7290,PRR_kwDOCCum185mHQJ1,mmis1000,COMMENTED,,2023-11-03T17:08:25Z
7296,PRR_kwDOCCum185JAwuh,LinusBorg,APPROVED,,2022-12-20T18:10:27Z
7297,PRR_kwDOCCum1858EOY1,skirtles-code,COMMENTED,,2024-05-27T21:36:44Z
7300,PRR_kwDOCCum185JBo_m,LinusBorg,COMMENTED,,2022-12-20T21:30:44Z
7300,PRR_kwDOCCum185JLarx,steveworkman,COMMENTED,,2022-12-22T14:10:57Z
7300,PRR_kwDOCCum185JLduf,LinusBorg,COMMENTED,,2022-12-22T14:16:47Z
7301,PRR_kwDOCCum185Ih3ii,YasinAshorian,APPROVED,,2022-12-14T05:54:36Z
7301,PRR_kwDOCCum185JUswj,PraveenNanda124,COMMENTED,Looks good,2022-12-26T16:25:13Z
7301,PRR_kwDOCCum18577dlt,icarusgk,COMMENTED,,2024-05-25T21:55:55Z
7311,PRR_kwDOCCum185IOEXT,skirtles-code,COMMENTED,,2022-12-09T13:12:55Z
7314,PRR_kwDOCCum185Ih3eR,YasinAshorian,APPROVED,,2022-12-14T05:54:14Z
7314,PRR_kwDOCCum185JUsrV,PraveenNanda124,COMMENTED,Looks good,2022-12-26T16:24:06Z
7315,PRR_kwDOCCum185IRqul,sxzz,APPROVED,,2022-12-10T17:08:54Z
7315,PRR_kwDOCCum185Ih3cU,YasinAshorian,APPROVED,,2022-12-14T05:54:01Z
7315,PRR_kwDOCCum185JUsmd,PraveenNanda124,COMMENTED,Looks good,2022-12-26T16:23:04Z
7315,PRR_kwDOCCum185lqyGI,haoqunjiang,APPROVED,,2023-10-31T08:37:11Z
7316,PRR_kwDOCCum185IUl4R,sxzz,APPROVED,,2022-12-12T11:35:21Z
7316,PRR_kwDOCCum185Ih3aC,YasinAshorian,APPROVED,,2022-12-14T05:53:48Z
7316,PRR_kwDOCCum185JUsoe,PraveenNanda124,COMMENTED,Looks good,2022-12-26T16:23:31Z
7325,PRR_kwDOCCum185Ih3W1,YasinAshorian,APPROVED,,2022-12-14T05:53:32Z
7328,PRR_kwDOCCum185Ih3IB,YasinAshorian,APPROVED,,2022-12-14T05:52:46Z
7328,PRR_kwDOCCum186DSS68,skirtles-code,COMMENTED,"This change looks good to me.

I've got a couple of minor suggestions below.

It'd also be good to merge in the latest `main`, so it can be run against the latest PR checks.",2024-07-26T19:31:52Z
7328,PRR_kwDOCCum186F7587,edison1105,APPROVED,,2024-08-20T06:28:19Z
7330,PRR_kwDOCCum185Iaalp,posva,APPROVED,Nice! I think it would be even better to have 2 different count variables as it would make the test more robust,2022-12-13T08:04:33Z
7330,PRR_kwDOCCum185IbBwP,posva,APPROVED,,2022-12-13T09:12:39Z
7330,PRR_kwDOCCum185Ih2gd,YasinAshorian,APPROVED,,2022-12-14T05:52:08Z
7330,PRR_kwDOCCum185Ih2_i,YasinAshorian,APPROVED,,2022-12-14T05:52:28Z
7333,PRR_kwDOCCum185Ih1r1,YasinAshorian,APPROVED,,2022-12-14T05:51:43Z
7338,PRR_kwDOCCum185mINYR,pikax,APPROVED,,2023-11-03T19:45:24Z
7339,PRR_kwDOCCum185J8dlH,LinusBorg,APPROVED,,2023-01-09T14:31:46Z
7339,PRR_kwDOCCum185RFYRx,yyx990803,COMMENTED,,2023-03-28T07:18:56Z
7339,PRR_kwDOCCum185RG6sx,sxzz,COMMENTED,,2023-03-28T10:54:03Z
7341,PRR_kwDOCCum185kjMKP,haoqunjiang,APPROVED,,2023-10-19T07:41:36Z
7344,PRR_kwDOCCum185Ijz2O,moushicheng,COMMENTED,,2022-12-14T12:11:23Z
7344,PRR_kwDOCCum185IrFP5,baiwusanyu-c,COMMENTED,,2022-12-15T13:53:31Z
7354,PRR_kwDOCCum185I1KF6,sxzz,APPROVED,,2022-12-17T21:01:57Z
7364,PRR_kwDOCCum186Nhsmk,edison1105,COMMENTED,,2024-10-17T07:45:00Z
7365,PRR_kwDOCCum185JUskk,PraveenNanda124,COMMENTED,Looks good,2022-12-26T16:22:40Z
7373,PRR_kwDOCCum185I98nQ,sxzz,COMMENTED,,2022-12-20T09:52:10Z
7378,PRR_kwDOCCum185I9_Nc,sxzz,APPROVED,,2022-12-20T09:59:27Z
7378,PRR_kwDOCCum185X92LT,sxzz,APPROVED,,2023-06-12T21:12:57Z
7383,PRR_kwDOCCum185JJMNt,sxzz,APPROVED,,2022-12-22T05:39:50Z
7387,PRR_kwDOCCum185JUsd9,PraveenNanda124,COMMENTED,Looks good,2022-12-26T16:21:21Z
7394,PRR_kwDOCCum185J8cz7,LinusBorg,APPROVED,,2023-01-09T14:29:51Z
7412,PRR_kwDOCCum185JRyfs,paul-thebaud,COMMENTED,,2022-12-23T20:52:03Z
7412,PRR_kwDOCCum185JSYmz,LinusBorg,COMMENTED,,2022-12-24T08:34:13Z
7412,PRR_kwDOCCum185JS3uf,paul-thebaud,COMMENTED,,2022-12-24T18:01:30Z
7412,PRR_kwDOCCum185JUsbv,PraveenNanda124,COMMENTED,Looks good,2022-12-26T16:20:49Z
7416,PRR_kwDOCCum185JUjn7,sxzz,APPROVED,,2022-12-26T14:38:56Z
7416,PRR_kwDOCCum185JUsYH,PraveenNanda124,COMMENTED,Looks good,2022-12-26T16:20:04Z
7416,PRR_kwDOCCum185X0cUw,sxzz,APPROVED,,2023-06-10T09:10:05Z
7425,PRR_kwDOCCum185JcuP5,zhangzhonghe,APPROVED,LGTM,2022-12-29T07:56:34Z
7425,PRR_kwDOCCum185JkPJ2,Justineo,APPROVED,,2023-01-03T08:54:07Z
7425,PRR_kwDOCCum185J03ul,sxzz,APPROVED,,2023-01-06T09:44:15Z
7428,PRR_kwDOCCum185JctK1,edison1105,COMMENTED,,2022-12-29T07:50:48Z
7428,PRR_kwDOCCum185Jc-Le,sxzz,COMMENTED,,2022-12-29T09:27:20Z
7432,PRR_kwDOCCum185J8d8o,LinusBorg,APPROVED,,2023-01-09T14:32:40Z
7435,PRR_kwDOCCum185KH1PQ,LinusBorg,COMMENTED,,2023-01-11T09:33:03Z
7444,PRR_kwDOCCum185e6Rxk,sxzz,COMMENTED,,2023-08-23T20:09:53Z
7444,PRR_kwDOCCum185fh4Gb,rudyxu1102,COMMENTED,,2023-08-30T13:29:09Z
7444,PRR_kwDOCCum185fh6aM,rudyxu1102,COMMENTED,,2023-08-30T13:33:28Z
7444,PRR_kwDOCCum185fxkPq,sxzz,COMMENTED,,2023-09-01T12:11:59Z
7444,PRR_kwDOCCum185f3QFy,rudyxu1102,COMMENTED,,2023-09-02T14:46:16Z
7444,PRR_kwDOCCum185f3WKg,sxzz,COMMENTED,,2023-09-02T16:49:13Z
7444,PRR_kwDOCCum185f351W,rudyxu1102,COMMENTED,,2023-09-03T09:48:42Z
7444,PRR_kwDOCCum185gIBi3,sxzz,COMMENTED,,2023-09-06T07:53:19Z
7444,PRR_kwDOCCum185gJw_B,rudyxu1102,COMMENTED,,2023-09-06T12:05:37Z
7444,PRR_kwDOCCum185gJxlt,rudyxu1102,COMMENTED,,2023-09-06T12:07:05Z
7447,PRR_kwDOCCum185Jh0Dq,zhangzhonghe,APPROVED,Looks good to me.,2023-01-02T09:14:09Z
7447,PRR_kwDOCCum185Ji2b0,sxzz,COMMENTED,,2023-01-02T15:49:20Z
7447,PRR_kwDOCCum185Ji2ym,sxzz,CHANGES_REQUESTED,Left a comment for you.,2023-01-02T15:51:54Z
7447,PRR_kwDOCCum185Ji6-J,smallnine9,COMMENTED,,2023-01-02T16:23:02Z
7451,PRR_kwDOCCum185PrJQ0,antfu,APPROVED,This would also be greatly helpful for Nuxt and VueUse as well 👍,2023-03-13T10:43:07Z
7451,PRR_kwDOCCum185P2B9r,sxzz,APPROVED,,2023-03-14T15:22:33Z
7457,PRR_kwDOCCum185J5PLq,sxzz,COMMENTED,,2023-01-08T07:36:06Z
7457,PRR_kwDOCCum185QWA37,haoqunjiang,CHANGES_REQUESTED,"This implementation conflicts with the documentation:
> The casting rules for `Boolean` will apply regardless of type appearance order.

https://vuejs.org/guide/components/props.html#boolean-casting",2023-03-20T07:41:59Z
7461,PRR_kwDOCCum185JpQHh,sxzz,APPROVED,,2023-01-04T09:08:31Z
7461,PRR_kwDOCCum185Jqg07,sxzz,APPROVED,,2023-01-04T13:28:54Z
7475,PRR_kwDOCCum185J2JDm,roydukkey,COMMENTED,,2023-01-06T14:44:14Z
7475,PRR_kwDOCCum185J2d9b,baiwusanyu-c,COMMENTED,,2023-01-06T15:45:02Z
7475,PRR_kwDOCCum185J5PI_,sxzz,COMMENTED,,2023-01-08T07:34:04Z
7475,PRR_kwDOCCum185J5bli,Justineo,COMMENTED,,2023-01-08T14:35:59Z
7475,PRR_kwDOCCum185NwTR0,seahindeniz,COMMENTED,,2023-02-18T10:34:47Z
7475,PRR_kwDOCCum185NwpGH,Justineo,COMMENTED,,2023-02-18T13:51:29Z
7475,PRR_kwDOCCum185NxRjI,seahindeniz,COMMENTED,,2023-02-19T11:45:17Z
7475,PRR_kwDOCCum185Nz0WE,Justineo,COMMENTED,,2023-02-20T09:49:28Z
7475,PRR_kwDOCCum185O906K,roydukkey,COMMENTED,,2023-03-04T01:08:29Z
7475,PRR_kwDOCCum1853ItM7,skirtles-code,COMMENTED,"I think it needs to clear any old value for the property when the new value is `null`/`undefined`. e.g.:

- [Playground](https://deploy-preview-7475--vue-sfc-playground.netlify.app/#eNp9UsFO4zAQ/ZWRtVKKxCYHbt2AdhdxgAMg4OhLmk6LwbEte1KKovw74wkNHIBT7Hlv3rzxy6D+hVDuelRLVac2mkCQkPpwpp3pgo8EA0TcwAib6DsomFrM0Lnvwnu9rPIlKzGsXetdImi99RFOs8CiWFnGjrSrq2kOT+ALYRdsQ5hvVIvgUtpOtZKvVlBN4Kon8g7+tta0zweY1V1vrVZn5xabWFcTizvqatZWx4oSW9qYbfmUvONlB+0AskYXjMV4E8iwZa2WIEjGGmv9y5XUKPZ4fKi3j9g+f1F/Svtc0+o2YsK4Q61mjJq4RZrgi/tr3PN5Bju/7i2zfwDvMHnbZ48T7X/v1mz7E0/cXkouxm0f0sWe0KXDUtloZo7C14pzym/93eofdk/KE+nTbuRXPGT8xd+yxo1xeBt9SAvRkXiWcE+R/XD7T9ED1AFa26QkufIWDh3PFwhgGOBXyMowshEmV3nip4BFL9GrzcdyFpgWejey+70ybr0o5Foc/WFL4ki61PgGBrIITQ==)

Currently the text remains blue in that example after clicking the button, which is incorrect.",2024-04-13T00:22:58Z
7490,PRR_kwDOCCum185KHx3C,sxzz,APPROVED,,2023-01-11T09:25:00Z
7502,PRR_kwDOCCum185KHP6z,LinusBorg,CHANGES_REQUESTED,,2023-01-11T07:42:14Z
7502,PRR_kwDOCCum185KHgDZ,baiwusanyu-c,COMMENTED,,2023-01-11T08:36:17Z
7502,PRR_kwDOCCum1859mxua,yyx990803,COMMENTED,,2024-06-10T09:48:13Z
7513,PRR_kwDOCCum1858tUL_,edison1105,APPROVED,,2024-06-02T09:28:56Z
7530,PRR_kwDOCCum185L6hag,sxzz,APPROVED,,2023-01-27T23:00:59Z
7536,PRR_kwDOCCum185KjTQj,edison1105,APPROVED,,2023-01-17T01:07:12Z
7540,PRR_kwDOCCum185KfSLj,LinusBorg,APPROVED,,2023-01-16T08:14:53Z
7541,PRR_kwDOCCum1854BKWx,skirtles-code,COMMENTED,,2024-04-21T23:49:26Z
7541,PRR_kwDOCCum186F7t8C,edison1105,CHANGES_REQUESTED,,2024-08-20T05:51:55Z
7541,PRR_kwDOCCum186F7zhI,edison1105,APPROVED,,2024-08-20T06:10:00Z
7557,PRR_kwDOCCum185j6GJJ,pikax,COMMENTED,LGTM,2023-10-13T10:12:28Z
7557,PRR_kwDOCCum185kjkDm,haoqunjiang,APPROVED,,2023-10-19T08:29:35Z
7557,PRR_kwDOCCum185ks4iM,yyx990803,COMMENTED,,2023-10-20T08:14:29Z
7570,PRR_kwDOCCum185LaLA2,sail-sail,COMMENTED,"fix(runtime-core): fixIn function shouldUpdateComponent, if isHmrUpdating is true, component may be null.",2023-01-23T08:23:42Z
7570,PRR_kwDOCCum185LteH7,dsonet,COMMENTED,,2023-01-25T22:16:09Z
7570,PRR_kwDOCCum185OESUI,skirtles-code,COMMENTED,,2023-02-22T17:09:00Z
7570,PRR_kwDOCCum186F7yA-,edison1105,COMMENTED,,2024-08-20T06:05:21Z
7583,PRR_kwDOCCum185L9Dk8,sxzz,APPROVED,,2023-01-29T20:54:09Z
7584,PRR_kwDOCCum185L8VB1,edison1105,COMMENTED,,2023-01-29T07:48:56Z
7584,PRR_kwDOCCum185L8Ymd,liuseen-l,COMMENTED,,2023-01-29T08:51:41Z
7587,PRR_kwDOCCum185L6huw,sxzz,APPROVED,,2023-01-27T23:02:56Z
7589,PRR_kwDOCCum185L6hNL,sxzz,APPROVED,,2023-01-27T22:59:27Z
7593,PRR_kwDOCCum185X0e9U,sxzz,COMMENTED,,2023-06-10T10:10:05Z
7593,PRR_kwDOCCum185X0hzu,sxzz,APPROVED,,2023-06-10T10:45:23Z
7593,PRR_kwDOCCum185X0mzD,edison1105,CHANGES_REQUESTED,,2023-06-10T12:47:29Z
7593,PRR_kwDOCCum185X0m4a,vaakian,COMMENTED,,2023-06-10T12:51:17Z
7594,PRR_kwDOCCum185MJWb_,ArjunSharda,COMMENTED,LGTM!,2023-01-31T15:55:28Z
7600,PRR_kwDOCCum185MNbRd,antfu,APPROVED,,2023-02-01T07:59:21Z
7608,PRR_kwDOCCum185MNHIZ,sxzz,APPROVED,,2023-02-01T06:35:41Z
7612,PRR_kwDOCCum185OEItZ,skirtles-code,COMMENTED,,2023-02-22T16:47:22Z
7612,PRR_kwDOCCum185OSV-T,thomasrockhu-codecov,COMMENTED,,2023-02-24T13:31:41Z
7612,PRR_kwDOCCum185OSWBn,thomasrockhu-codecov,COMMENTED,,2023-02-24T13:31:50Z
7622,PRR_kwDOCCum185NVuAX,LinusBorg,APPROVED,,2023-02-14T12:51:15Z
7626,PRR_kwDOCCum185Mki2a,LittleSound,COMMENTED,LGTM,2023-02-06T07:10:01Z
7645,PRR_kwDOCCum185Mjq9m,edison1105,APPROVED,,2023-02-06T01:14:25Z
7654,PRR_kwDOCCum185MjBUn,sxzz,APPROVED,,2023-02-05T15:35:47Z
7662,PRR_kwDOCCum185NMVui,edison1105,COMMENTED,,2023-02-13T07:40:03Z
7662,PRR_kwDOCCum185NlO8O,baiwusanyu-c,COMMENTED,,2023-02-16T14:52:41Z
7664,PRR_kwDOCCum185lIPd3,pikax,APPROVED,,2023-10-25T08:17:37Z
7676,PRR_kwDOCCum185M82vn,baiwusanyu-c,COMMENTED,,2023-02-09T12:19:27Z
7676,PRR_kwDOCCum185Nhj2h,leno23,COMMENTED,,2023-02-16T02:02:11Z
7678,PRR_kwDOCCum185Nv0UG,skirtles-code,COMMENTED,"For anyone wishing to see this running:

* [Current Playground (broken)](https://sfc.vuejs.org/#eNp9kr1OxDAMgF/FZAGka4OQWEo5QDwAC2OW0HMh0CZR4hahqu+O05ZyHCeWyL+f7diDuPc+7zsUhShjFYwniEid3yprWu8CwQABaxihDq6FUw49XV2PFhdzLllOnB/n04dbnSwvTmUrZyNBbQK/N4l9RqHDc2VLOTfApVkhbH2jCVkDKJ87ImfhrmpM9X6jxHf6ySQosX141fYFoXJc3KKlUs4pU/owLPXGcaI9BW2jIcPE1u2Qea6jzFjmJD9HrBwoTFzr3U4TF2k0JUDOrckfGhtKudc4q5E+myTmfcY0DJmuyPS4mSwN6h4XCwyJRiurAN00cJFfXkVAHTHjFq+V5QH2YOl/N7CSyM0U53Vl6LOAizmDf3ZpQ2zEvJ6s1T5/i87y4qcctTiiEsVMSTZeWtKVeCXysZAy1lXa5FvMXXiRLOWhs2RazDG22XNwHxEDg5XgEVeGZGPP/Qa0OwwY/mMehP7hJizPNPIoy82l2/19LjvTb9lZyiQcLIXzlnM8mgd9Zuq0cd1Enn3Lsccx4xdBuB8p)
* [This PR (fixed)](https://deploy-preview-7678--vue-sfc-playground.netlify.app/#eNptkt1unTAMx1/Fy0036YRUk7ZOjJ5t2gP0ppe5STmmTQtJlBiOEOLd6wClH+pN5Phv/2zHmcS/EIqhR1GKKtXRBoKE1IejdrYLPhJMELGBGZroO7jg0ItdunG4uQvFdua8irdnv4tsb6J2tXeJoLGRz+vM/kqxx2/aVWptgEvzhbALrSHkG0B11xN5B3/r1tZP11q8pH9ZDC2O/x+Mu0eoPRd36KhSa8qSPk1bvXleaLfRuGTJMrHzJ2Se70lax5ysc8TOgdKmvd6fZeIyj6YFqLU19UpjR6XeNM7XRGObzWKQTMMoTU12wMPiadEMuHlgyjTaWSWYtoXL4vuPBGgSSm7xt3Y8wBtYft8D7CTyK8UHU1saS7hcM/hltzbEQazrkZ0JxWPyjhe/5OhNSFqUKyX7eGn5rsUDUUilUicMrR9liDhYPMurn1e/pOQomZpa8tzjffS9OxUOqbXNWJgQFMtF7B3ZDgtMnbyL/pwwcnktciHucObGth+Uf+L75Z/scGSxUtn48MSct32uT/NgkLbJ+zNt4kmOHPs5Zn4Gt78Nyw==)

Suggestions from me below.",2023-02-18T00:59:23Z
7678,PRR_kwDOCCum185N586-,AlexVagrant,COMMENTED,,2023-02-21T09:32:32Z
7680,PRR_kwDOCCum185NKce2,sxzz,APPROVED,,2023-02-11T16:54:58Z
7687,PRR_kwDOCCum185NFeaA,haoqunjiang,DISMISSED,,2023-02-10T14:33:22Z
7687,PRR_kwDOCCum185NFgkJ,haoqunjiang,APPROVED,,2023-02-10T14:38:40Z
7689,PRR_kwDOCCum185NKXcf,LinusBorg,COMMENTED,,2023-02-11T15:42:51Z
7692,PRR_kwDOCCum185NK_xc,zhangzhonghe,APPROVED,,2023-02-12T15:09:43Z
7692,PRR_kwDOCCum185OFW5H,sxzz,APPROVED,,2023-02-22T19:26:06Z
7692,PRR_kwDOCCum185X0car,sxzz,APPROVED,,2023-06-10T09:11:52Z
7693,PRR_kwDOCCum185NQLv5,ArjunSharda,COMMENTED,LGTM to me!,2023-02-13T17:04:09Z
7693,PRR_kwDOCCum185ODzxt,skirtles-code,APPROVED,,2023-02-22T16:19:47Z
7693,PRR_kwDOCCum185OHXzL,Lioness100,COMMENTED,,2023-02-23T03:09:50Z
7693,PRR_kwDOCCum185OHwiM,sxzz,APPROVED,,2023-02-23T06:04:45Z
7693,PRR_kwDOCCum185X0ch6,sxzz,APPROVED,,2023-06-10T09:15:51Z
7696,PRR_kwDOCCum185Nz32h,edison1105,APPROVED,,2023-02-20T09:57:49Z
7696,PRR_kwDOCCum185OFWjZ,sxzz,APPROVED,,2023-02-22T19:25:21Z
7716,PRR_kwDOCCum1859kV2L,skirtles-code,COMMENTED,,2024-06-10T05:42:56Z
7717,PRR_kwDOCCum185OFVHp,sxzz,DISMISSED,,2023-02-22T19:22:06Z
7717,PRR_kwDOCCum185OFV-f,sxzz,COMMENTED,,2023-02-22T19:23:53Z
7717,PRR_kwDOCCum185OHJJo,liuseen-l,COMMENTED,,2023-02-23T01:02:20Z
7717,PRR_kwDOCCum185X95ca,sxzz,COMMENTED,,2023-06-12T21:21:43Z
7722,PRR_kwDOCCum185NdIpc,baiwusanyu-c,COMMENTED,,2023-02-15T13:21:26Z
7722,PRR_kwDOCCum185Nds3c,BeADre,COMMENTED,,2023-02-15T14:41:19Z
7722,PRR_kwDOCCum185NitfI,Justineo,COMMENTED,,2023-02-16T08:13:21Z
7722,PRR_kwDOCCum185NiyjZ,BeADre,COMMENTED,,2023-02-16T08:27:50Z
7722,PRR_kwDOCCum185Nqegu,Justineo,APPROVED,,2023-02-17T09:14:24Z
7722,PRR_kwDOCCum185OFU0h,sxzz,APPROVED,,2023-02-22T19:21:10Z
7730,PRR_kwDOCCum1858qcO1,skirtles-code,COMMENTED,,2024-05-31T18:38:31Z
7730,PRR_kwDOCCum186F8TVA,edison1105,COMMENTED,,2024-08-20T07:26:55Z
7734,PRR_kwDOCCum185NoYhP,sxzz,APPROVED,,2023-02-16T23:25:59Z
7743,PRR_kwDOCCum185Nqe0v,danielroe,APPROVED,,2023-02-17T09:14:58Z
7743,PRR_kwDOCCum185ODnmt,skirtles-code,COMMENTED,,2023-02-22T15:56:19Z
7743,PRR_kwDOCCum185OIyUP,DrPhil,COMMENTED,,2023-02-23T09:51:50Z
7743,PRR_kwDOCCum185Vc6vb,yyx990803,COMMENTED,,2023-05-19T01:07:38Z
7743,PRR_kwDOCCum185Vc60W,yyx990803,COMMENTED,,2023-05-19T01:08:14Z
7753,PRR_kwDOCCum185NxRjK,sxzz,APPROVED,,2023-02-19T11:45:18Z
7753,PRR_kwDOCCum185X0cZ5,sxzz,APPROVED,,2023-06-10T09:11:22Z
7760,PRR_kwDOCCum185OAqlN,sxzz,APPROVED,,2023-02-22T09:03:50Z
7760,PRR_kwDOCCum185QSbrW,antfu,APPROVED,,2023-03-18T14:36:35Z
7761,PRR_kwDOCCum185OJSPJ,sxzz,COMMENTED,,2023-02-23T11:12:53Z
7761,PRR_kwDOCCum185OOC9k,sxzz,APPROVED,,2023-02-23T23:44:50Z
7768,PRR_kwDOCCum185N6LP4,edison1105,CHANGES_REQUESTED,,2023-02-21T10:05:07Z
7768,PRR_kwDOCCum185N6SNc,AlexVagrant,COMMENTED,,2023-02-21T10:21:42Z
7768,PRR_kwDOCCum185ODX3d,skirtles-code,CHANGES_REQUESTED,,2023-02-22T15:27:54Z
7768,PRR_kwDOCCum185OHR-1,AlexVagrant,COMMENTED,,2023-02-23T02:17:55Z
7776,PRR_kwDOCCum185ODUmJ,skirtles-code,CHANGES_REQUESTED,,2023-02-22T15:21:28Z
7776,PRR_kwDOCCum185bMdj7,edison1105,COMMENTED,,2023-07-14T09:51:13Z
7776,PRR_kwDOCCum185bMkp2,baiwusanyu-c,COMMENTED,,2023-07-14T10:09:51Z
7776,PRR_kwDOCCum185hGNHU,Justineo,COMMENTED,,2023-09-15T13:58:02Z
7776,PRR_kwDOCCum186G0vtc,edison1105,COMMENTED,,2024-08-27T02:34:56Z
7776,PRR_kwDOCCum186IBXb6,baiwusanyu-c,COMMENTED,,2024-09-05T07:20:43Z
7780,PRR_kwDOCCum185OJS22,skirtles-code,CHANGES_REQUESTED,,2023-02-23T11:14:10Z
7780,PRR_kwDOCCum185OJVbh,sxzz,COMMENTED,,2023-02-23T11:21:13Z
7780,PRR_kwDOCCum185OJVnF,sxzz,COMMENTED,,2023-02-23T11:21:46Z
7780,PRR_kwDOCCum185OJXpO,JayFate,COMMENTED,,2023-02-23T11:27:57Z
7780,PRR_kwDOCCum185OJZ6K,JayFate,COMMENTED,,2023-02-23T11:34:48Z
7780,PRR_kwDOCCum185OJbs8,JayFate,COMMENTED,,2023-02-23T11:40:22Z
7783,PRR_kwDOCCum185Of1TV,sxzz,APPROVED,,2023-02-28T07:58:13Z
7786,PRR_kwDOCCum185OS0Ot,baiwusanyu-c,COMMENTED,looks good👍🏻,2023-02-24T14:34:05Z
7786,PRR_kwDOCCum185lEO38,pikax,APPROVED,LGTM,2023-10-24T18:20:50Z
7786,PRR_kwDOCCum18539eBF,skirtles-code,COMMENTED,,2024-04-19T22:08:00Z
7786,PRR_kwDOCCum186GSkxK,moushicheng,COMMENTED,,2024-08-22T03:03:40Z
7786,PRR_kwDOCCum186myrEm,jacekkarczmarczyk,COMMENTED,,2025-04-28T07:51:23Z
7795,PRR_kwDOCCum185OfU8u,sxzz,APPROVED,,2023-02-28T05:43:17Z
7795,PRR_kwDOCCum185RKPwu,sxzz,COMMENTED,,2023-03-28T17:55:26Z
7795,PRR_kwDOCCum185RMBab,edison1105,COMMENTED,,2023-03-29T00:52:27Z
7795,PRR_kwDOCCum185RMp8A,sxzz,APPROVED,,2023-03-29T05:24:01Z
7795,PRR_kwDOCCum185RM-wv,sxzz,COMMENTED,snapshot need to be updated for unit tests,2023-03-29T06:49:41Z
7803,PRR_kwDOCCum185OjqUa,sxzz,COMMENTED,I don't think the implementation currently is elegant... 😵‍💫,2023-02-28T16:07:56Z
7803,PRR_kwDOCCum185OjzK8,sxzz,DISMISSED,,2023-02-28T16:19:13Z
7803,PRR_kwDOCCum185Oj-AL,baiwusanyu-c,COMMENTED,,2023-02-28T16:35:51Z
7803,PRR_kwDOCCum185OnRwN,baiwusanyu-c,COMMENTED,,2023-03-01T01:54:08Z
7803,PRR_kwDOCCum185OnjFk,sxzz,COMMENTED,,2023-03-01T03:35:08Z
7803,PRR_kwDOCCum185OnoPh,sxzz,CHANGES_REQUESTED,"Consider [this case](https://deploy-preview-7803--vue-sfc-playground.netlify.app/#__DEV__eNqlkMFOwzAQRH/F8iWtVCcgDqDQROIPuMDJFzfeFCNnd2U7qaIo/45TOCA49rLSzqzmjXaRL8zlNIKs5TF2wXESEdLIwhs8N0WKRauxI4xJLD2RaMS9WPO00DuE10Acj4tGIQrCN7YmQT2QBf9u/AhFLXaT8fWJyIPBfdNO5OyzxrXd7TUeq29iKw/SDUwhqcFw+RkJc51rqv4xopa1uCqblvtuu5YfKXGsq8oCe5oVB5gcXNTj092DUvlKxb5T7M18DjSiLRGSd/1cGuYq22UYMbkBSoiDOgW6RAgZr+XhF6nK4gRBBUALAcLt5D+B/+gbfM1PkusXAymQ5Q==)

We should still add quotes",2023-03-01T04:14:30Z
7803,PRR_kwDOCCum185OoBiN,sxzz,COMMENTED,,2023-03-01T06:34:16Z
7803,PRR_kwDOCCum185OoCdx,baiwusanyu-c,COMMENTED,,2023-03-01T06:38:58Z
7803,PRR_kwDOCCum185OoY54,baiwusanyu-c,COMMENTED,,2023-03-01T08:00:03Z
7803,PRR_kwDOCCum185PAJ-J,sxzz,COMMENTED,,2023-03-06T02:35:05Z
7803,PRR_kwDOCCum185PBD5e,sxzz,APPROVED,,2023-03-06T08:02:39Z
7803,PRR_kwDOCCum185TPJ5b,reslear,COMMENTED,,2023-04-21T23:31:00Z
7810,PRR_kwDOCCum185Oqbft,baiwusanyu-c,COMMENTED,"````
<script setup lang=""ts"">
console.log('Oups...')
const a = defineProps(['b'])
(window.testFunc) = () => 'props'
</script>
````
````
<script setup lang=""ts"">
console.log('Oups...')
const a = defineProps(['b']);
(window.testFunc) = () => 'props'
</script>
````
````
<script setup lang=""ts"">
console.log('Oups...')
defineProps(['b'])
;(window.testFunc) = () => 'props'
</script>
````
This case will still report an error",2023-03-01T12:31:02Z
7810,PRR_kwDOCCum185OqcLY,baiwusanyu-c,COMMENTED,,2023-03-01T12:32:38Z
7810,PRR_kwDOCCum185Oqckd,yangxiuxiu1115,COMMENTED,,2023-03-01T12:33:46Z
7819,PRR_kwDOCCum185O3l8i,edison1105,CHANGES_REQUESTED,,2023-03-03T07:07:12Z
7827,PRR_kwDOCCum185O_DYq,skirtles-code,COMMENTED,,2023-03-05T04:05:31Z
7827,PRR_kwDOCCum185SH4MU,dsonet,COMMENTED,,2023-04-10T16:31:07Z
7829,PRR_kwDOCCum1858UgiT,skirtles-code,COMMENTED,,2024-05-29T15:27:53Z
7829,PRR_kwDOCCum1858--_m,rudyxu1102,COMMENTED,,2024-06-04T16:26:02Z
7829,PRR_kwDOCCum186GFV0P,edison1105,APPROVED,,2024-08-21T02:45:49Z
7830,PRR_kwDOCCum1858QPut,haoqunjiang,CHANGES_REQUESTED,"没有必要重构掉 `new Array`。在已知数组长度的情况下，`new Array(len)` 的性能是高于逐个填充数组元素的。

至于缓存 `source.length` 的性能提升，是否有更进一步的性能数据（比如 trace.json 文件）？",2024-05-29T08:10:08Z
7836,PRR_kwDOCCum185PDENa,sxzz,COMMENTED,"It's a breaking change to Vue, right? Can we avoid it?

Maybe we can change API `isSVG?: boolean` to `namespace?: boolean | 'svg' | 'mathml'`. If `namespace` is `true` then fallback to `svg`.",2023-03-06T13:12:54Z
7836,PRR_kwDOCCum185PDFRZ,sxzz,COMMENTED,,2023-03-06T13:14:49Z
7836,PRR_kwDOCCum185PDKXR,sto3psl,COMMENTED,,2023-03-06T13:23:58Z
7836,PRR_kwDOCCum185PIX8J,sxzz,COMMENTED,,2023-03-07T03:49:17Z
7836,PRR_kwDOCCum185PJQBN,sxzz,APPROVED,,2023-03-07T07:57:44Z
7836,PRR_kwDOCCum185X0c_3,sxzz,APPROVED,"I hope this can be included in the next minor release, version 3.4.",2023-06-10T09:31:47Z
7836,PRR_kwDOCCum185dOOk6,winstliu,COMMENTED,"Was also looking to add MathML to my Vue app today and was disappointed when it didn't render correctly, but glad to see that it's in the works :).
I see this PR has been approved; is there anything else that needs to be done for it to be merged?",2023-08-05T20:26:57Z
7836,PRR_kwDOCCum185fndsP,sto3psl,COMMENTED,,2023-08-31T08:06:30Z
7837,PRR_kwDOCCum185PSCyC,LinusBorg,APPROVED,,2023-03-08T08:10:53Z
7837,PRR_kwDOCCum185X-5Mz,sxzz,APPROVED,,2023-06-13T01:50:41Z
7853,PRR_kwDOCCum185PWBe0,sxzz,COMMENTED,Could you please add unit tests to `packages/dts-test/ref.test-d.ts`?,2023-03-08T17:58:25Z
7853,PRR_kwDOCCum185Phy_E,sxzz,APPROVED,,2023-03-10T07:00:41Z
7853,PRR_kwDOCCum185lCx8Z,pikax,APPROVED,,2023-10-24T15:25:13Z
7861,PRR_kwDOCCum185PWAJr,sxzz,COMMENTED,,2023-03-08T17:54:45Z
7861,PRR_kwDOCCum185PYfv2,edison1105,COMMENTED,,2023-03-09T00:40:52Z
7861,PRR_kwDOCCum185PY0x3,skirtles-code,COMMENTED,,2023-03-09T02:51:50Z
7861,PRR_kwDOCCum185PY2-G,edison1105,COMMENTED,,2023-03-09T03:05:32Z
7861,PRR_kwDOCCum185RNBJz,sxzz,APPROVED,,2023-03-29T06:57:25Z
7866,PRR_kwDOCCum185kwL8E,sxzz,APPROVED,,2023-10-20T15:43:28Z
7866,PRR_kwDOCCum185mWWWu,haoqunjiang,APPROVED,,2023-11-07T08:52:34Z
7872,PRR_kwDOCCum185Ph3F0,skirtles-code,COMMENTED,"I think there are some similar special cases that might also be worth considering:

[Playground](https://deploy-preview-7872--vue-sfc-playground.netlify.app/#eNp1Uj1PwzAQ/SuWF5Y6RixFUUBqu7DAyuLFaS7UyF+ynZQoyn/nnDZRK8ES3Xvvzvf8nJHuvC/6DmhJq3gMyicSIXX+VVhlvAuJvA+Hk9INaYMz5KHgV5yHHoSt+GUK+xEkMF7LBIgIqZbJntXKNi+CjpOgxFkmSYnfGplW6ghIZnxE/Ig1x+mKr0fRDb04YUb64js6i17HvEBchShoSWYmc+grY0FPKflYct6A125gPkCv4My2z9snxrCLxfbIcMfwFVxnm8JC0qodCuk9R7kInU3KQAHRsDq4c4SA6wXNiyZhJzR2k0UO8P76jern4lqOI159R6ap4n8p+3+Vw52yVDcJzdGvzwA/87M10MpOp0suVhrIkbyB1u7TBd0IusmCDw4zWsJDfyXZO6dB2lnO1H6VCUmDx3PuO8iyqiQpYPYzOa3jh5J8dKaGsMR288/Q6RdM3dTt)",2023-03-10T07:17:16Z
7875,PRR_kwDOCCum185Plq0d,sxzz,DISMISSED,"Could you please format the code?

`pnpm format`",2023-03-10T17:17:25Z
7912,PRR_kwDOCCum185QSbsa,antfu,APPROVED,,2023-03-18T14:37:06Z
7914,PRR_kwDOCCum185QUefm,sxzz,APPROVED,,2023-03-19T18:18:28Z
7922,PRR_kwDOCCum185Qc6ye,sxzz,APPROVED,,2023-03-21T06:09:02Z
7937,PRR_kwDOCCum185mIT_p,pikax,APPROVED,,2023-11-03T20:04:45Z
7942,PRR_kwDOCCum185UQwuy,johnp,COMMENTED,"Here are the issues as tests (expect the possible style grouping issue):

```js
    test('nested child components w/ fragments in shadow dom should have styles', async () => {
      const GrandChild = {
        styles: [`.my-green { color: green; }`],
        render() {
          return h('p', { class: ""my-green"" }, ""This should be green"")
        }
      }
      const Child = {
        components: { GrandChild },
        styles: [`.my-blue { color: blue; }`],
        render() {
          return h('div', {}, [
            h('p', { class: ""my-blue"" }, ""This should be blue""),
            h('div', {}, h(GrandChild))
          ])
        }
      }
      const Foo = defineCustomElement({
        components: { Child },
        styles: [`.my-red { color: red; }`],
        render() {
          return [
            h('p', { class: ""my-red"" }, ""This should be red""),
            h(Child)
          ]
        }
      })
      customElements.define('my-el-with-grandchild-styles', Foo)
      container.innerHTML = `<my-el-with-grandchild-styles></my-el-with-grandchild-styles>`
      await nextTick()

      const el = container.childNodes[0] as VueElement
      const style = el.shadowRoot?.querySelectorAll('style')!
      expect(style.length).toBe(3)
      expect(style[0].textContent).toBe(`.my-red { color: red; }`)
      expect(style[1].textContent).toBe(`.my-blue { color: blue; }`)
      expect(style[2].textContent).toBe(`.my-green { color: green; }`)
    })

    test('deeply nested child components w/ fragments in shadow dom should have styles', async () => {
      const GreatGrandChild = {
        styles: [`.my-grey { color: grey; }`],
        render() {
          return h('p', { class: ""my-grey"" }, ""This should be grey"")
        }
      }
      const GrandChild = {
        components: { GreatGrandChild },
        styles: [`.my-green { color: green; }`],
        render() {
          return [
            h('p', { class: ""my-green"" }, ""This should be green""),
            h('span', {}, h(GreatGrandChild))
          ]
        }
      }
      const Child = {
        components: { GrandChild },
        styles: [`.my-blue { color: blue; }`],
        render() {
          return h('div', {}, [
            h('p', { class: ""my-blue"" }, ""This should be blue""),
            h('div', {}, h(GrandChild))
          ])
        }
      }
      const Foo = defineCustomElement({
        components: { Child },
        styles: [`.my-red { color: red; }`],
        render() {
          return [
            h('p', { class: ""my-red"" }, ""This should be red""),
            h(Child)
          ]
        }
      })
      customElements.define('my-el-with-greatgrandchild-styles', Foo)
      container.innerHTML = `<my-el-with-greatgrandchild-styles></my-el-with-greatgrandchild-styles>`
      await nextTick()

      const el = container.childNodes[0] as VueElement
      const style = el.shadowRoot?.querySelectorAll('style')!
      expect(style.length).toBe(4)
      expect(style[0].textContent).toBe(`.my-red { color: red; }`)
      expect(style[1].textContent).toBe(`.my-blue { color: blue; }`)
      expect(style[2].textContent).toBe(`.my-green { color: green; }`)
      expect(style[3].textContent).toBe(`.my-grey { color: grey; }`)
    })
```",2023-05-04T18:25:23Z
7942,PRR_kwDOCCum185UgBgI,johnp,COMMENTED,"> `vue-ce-child-style\node_modules\.vite\deps\vue.js`

That explains a lot. I occasionally cleared the `node_modules/.vite` folder, but not always, and didn't know it actually kept a copy of Vue there. TIL.

All the tests and your test-repo now work for me without issue, including HMR with vite. 

I've added a suggestion which might allow us to get by without `ceStyleId`s.",2023-05-09T00:36:59Z
7942,PRR_kwDOCCum185Uh-jz,baiwusanyu-c,COMMENTED,,2023-05-09T08:57:06Z
7942,PRR_kwDOCCum185UjA5u,johnp,COMMENTED,,2023-05-09T11:20:13Z
7942,PRR_kwDOCCum185UvTlM,baiwusanyu-c,COMMENTED,,2023-05-11T03:17:42Z
7942,PRR_kwDOCCum185VEtiZ,johnp,COMMENTED,,2023-05-15T20:11:27Z
7942,PRR_kwDOCCum185ZhVnN,bogdantica,COMMENTED,Looks good! Let's merge this :D,2023-06-27T21:54:35Z
7942,PRR_kwDOCCum185lQuLg,edison1105,COMMENTED,,2023-10-26T07:15:18Z
7942,PRR_kwDOCCum185lQ9ac,baiwusanyu-c,COMMENTED,,2023-10-26T07:51:01Z
7942,PRR_kwDOCCum186ELF69,Shinigami92,COMMENTED,,2024-08-04T08:47:33Z
7954,PRR_kwDOCCum185RJ-d3,sxzz,COMMENTED,,2023-03-28T17:09:15Z
7954,PRR_kwDOCCum185RLrcr,yuwu9145,COMMENTED,,2023-03-28T22:50:58Z
7954,PRR_kwDOCCum185RMpTf,sxzz,APPROVED,,2023-03-29T05:20:42Z
7959,PRR_kwDOCCum185Q8ZRl,remcohaszing,COMMENTED,,2023-03-26T12:27:46Z
7959,PRR_kwDOCCum185RET9O,yyx990803,COMMENTED,,2023-03-28T01:46:18Z
7959,PRR_kwDOCCum185RG8W3,wooorm,COMMENTED,,2023-03-28T10:58:17Z
7962,PRR_kwDOCCum185Q_YNn,sxzz,APPROVED,,2023-03-27T10:13:57Z
7963,PRR_kwDOCCum185REuu5,aa900031,COMMENTED,,2023-03-28T04:42:55Z
7963,PRR_kwDOCCum185UZ9eP,yyx990803,COMMENTED,,2023-05-08T04:07:20Z
7970,PRR_kwDOCCum185RGvgd,antfu,APPROVED,,2023-03-28T10:27:03Z
7971,PRR_kwDOCCum185WB2KP,baiwusanyu-c,COMMENTED,,2023-05-25T08:11:14Z
7971,PRR_kwDOCCum185WCBKZ,baiwusanyu-c,COMMENTED,,2023-05-25T08:34:55Z
7971,PRR_kwDOCCum185WDZEk,yangxiuxiu1115,COMMENTED,,2023-05-25T12:01:48Z
7979,PRR_kwDOCCum185RNi3J,yyx990803,COMMENTED,,2023-03-29T08:19:29Z
7979,PRR_kwDOCCum185RNi9Z,yyx990803,COMMENTED,,2023-03-29T08:19:41Z
7982,PRR_kwDOCCum185RkqtD,yyx990803,APPROVED,,2023-04-03T08:44:18Z
7982,PRR_kwDOCCum185R1j9C,yyx990803,COMMENTED,,2023-04-05T14:05:59Z
7995,PRR_kwDOCCum185Rbe7l,skirtles-code,CHANGES_REQUESTED,,2023-03-31T02:20:19Z
7995,PRR_kwDOCCum185Rbkhy,baiwusanyu-c,COMMENTED,,2023-03-31T02:52:23Z
7995,PRR_kwDOCCum185Rbmhl,Justineo,COMMENTED,,2023-03-31T03:06:25Z
7995,PRR_kwDOCCum185RbsHT,Justineo,APPROVED,,2023-03-31T03:51:54Z
7997,PRR_kwDOCCum185ReIG-,skirtles-code,COMMENTED,,2023-03-31T12:31:50Z
8001,PRR_kwDOCCum186G0rJT,edison1105,COMMENTED,,2024-08-27T02:11:37Z
8007,PRR_kwDOCCum185RkQAk,sxzz,APPROVED,,2023-04-03T07:41:47Z
8009,PRR_kwDOCCum185Rkvcm,yyx990803,CHANGES_REQUESTED,,2023-04-03T08:55:18Z
8009,PRR_kwDOCCum185Rk5QG,JayFate,COMMENTED,,2023-04-03T09:17:41Z
8009,PRR_kwDOCCum185Rk6H1,sxzz,COMMENTED,,2023-04-03T09:19:43Z
8009,PRR_kwDOCCum185Rk7OC,sxzz,APPROVED,,2023-04-03T09:22:19Z
8012,PRR_kwDOCCum185RsmkD,yyx990803,CHANGES_REQUESTED,,2023-04-04T10:13:30Z
8012,PRR_kwDOCCum185RtNUa,basil-gor,COMMENTED,,2023-04-04T11:53:44Z
8012,PRR_kwDOCCum185R69Xi,yyx990803,COMMENTED,,2023-04-06T09:15:07Z
8012,PRR_kwDOCCum185R7Nm9,basil-gor,COMMENTED,,2023-04-06T09:47:13Z
8012,PRR_kwDOCCum185YinvX,basil-gor,COMMENTED,,2023-06-19T06:11:49Z
8012,PRR_kwDOCCum185d7fvi,sxzz,COMMENTED,,2023-08-13T18:54:53Z
8018,PRR_kwDOCCum185R7OpP,yyx990803,CHANGES_REQUESTED,,2023-04-06T09:49:55Z
8018,PRR_kwDOCCum185R78ym,sxzz,COMMENTED,,2023-04-06T11:26:10Z
8018,PRR_kwDOCCum185R79G1,sxzz,COMMENTED,,2023-04-06T11:26:55Z
8018,PRR_kwDOCCum185SAWVd,yyx990803,APPROVED,,2023-04-07T04:58:29Z
8018,PRR_kwDOCCum185Tx5jj,jacekkarczmarczyk,COMMENTED,,2023-04-28T09:35:27Z
8022,PRR_kwDOCCum185RrboS,sxzz,COMMENTED,,2023-04-04T07:13:25Z
8022,PRR_kwDOCCum185Rrf6O,sxzz,APPROVED,,2023-04-04T07:25:03Z
8045,PRR_kwDOCCum185SAjQK,sxzz,APPROVED,,2023-04-07T06:34:20Z
8048,PRR_kwDOCCum185SFULF,yyx990803,COMMENTED,,2023-04-10T06:10:38Z
8048,PRR_kwDOCCum185SFURt,yyx990803,COMMENTED,,2023-04-10T06:11:12Z
8048,PRR_kwDOCCum185SGATd,antfu,COMMENTED,,2023-04-10T09:26:21Z
8048,PRR_kwDOCCum185d4kpQ,sxzz,APPROVED,,2023-08-12T12:53:00Z
8051,PRR_kwDOCCum185SEF4v,himself65,COMMENTED,,2023-04-08T20:39:06Z
8051,PRR_kwDOCCum185SEF5U,sxzz,COMMENTED,,2023-04-08T20:39:45Z
8051,PRR_kwDOCCum185SEF_h,sxzz,APPROVED,,2023-04-08T20:45:19Z
8051,PRR_kwDOCCum185SFVbm,yyx990803,CHANGES_REQUESTED,,2023-04-10T06:17:32Z
8051,PRR_kwDOCCum185SJPOD,leopiccionia,COMMENTED,,2023-04-10T21:23:42Z
8051,PRR_kwDOCCum185Sa9BE,yyx990803,COMMENTED,,2023-04-13T07:24:25Z
8052,PRR_kwDOCCum185SFegw,yyx990803,COMMENTED,,2023-04-10T07:03:10Z
8052,PRR_kwDOCCum185SOB3M,lehni,COMMENTED,,2023-04-11T14:31:18Z
8060,PRR_kwDOCCum185SKQ6w,sxzz,APPROVED,,2023-04-11T04:14:12Z
8060,PRR_kwDOCCum185f80mo,haoqunjiang,APPROVED,,2023-09-04T16:06:27Z
8065,PRR_kwDOCCum185d7eF2,sxzz,APPROVED,,2023-08-13T17:56:52Z
8079,PRR_kwDOCCum185Se20z,sxzz,COMMENTED,,2023-04-13T16:39:02Z
8079,PRR_kwDOCCum185Se5DA,liuseen-l,COMMENTED,,2023-04-13T16:44:38Z
8090,PRR_kwDOCCum185SrEoy,sxzz,APPROVED,,2023-04-16T18:54:16Z
8090,PRR_kwDOCCum185VdMij,Justineo,COMMENTED,,2023-05-19T03:12:15Z
8091,PRR_kwDOCCum185gI8Gy,yyx990803,APPROVED,,2023-09-06T09:56:22Z
8103,PRR_kwDOCCum185TDCcY,yyx990803,CHANGES_REQUESTED,,2023-04-20T06:44:54Z
8103,PRR_kwDOCCum185TDtOG,edison1105,COMMENTED,,2023-04-20T08:28:51Z
8125,PRR_kwDOCCum185Ti1r7,future-has-arrived,COMMENTED,The keepalive error in console panel disappears after using this solution.,2023-04-26T10:06:31Z
8154,PRR_kwDOCCum185Tcm4C,edison1105,APPROVED,,2023-04-25T14:06:52Z
8154,PRR_kwDOCCum185TcpZF,sxzz,APPROVED,,2023-04-25T14:11:47Z
8161,PRR_kwDOCCum185UaYgU,yyx990803,CHANGES_REQUESTED,,2023-05-08T06:35:53Z
8195,PRR_kwDOCCum185f3Vfr,sxzz,APPROVED,,2023-09-02T16:30:15Z
8195,PRR_kwDOCCum185huQ7Z,baiwusanyu-c,COMMENTED,,2023-09-22T09:20:35Z
8195,PRR_kwDOCCum185hub0R,baiwusanyu-c,CHANGES_REQUESTED,,2023-09-22T09:45:50Z
8195,PRR_kwDOCCum185hzFw4,eagleoflqj,COMMENTED,,2023-09-23T04:48:33Z
8195,PRR_kwDOCCum185hzFzD,eagleoflqj,COMMENTED,,2023-09-23T04:50:17Z
8195,PRR_kwDOCCum185hzzQg,baiwusanyu-c,APPROVED,,2023-09-24T03:21:49Z
8210,PRR_kwDOCCum1858sA5u,skirtles-code,COMMENTED,"I just tried applying these changes locally to the latest `main`.

The conflicts proved much simpler to resolve than I was expecting and it appears these changes still work.

I was worried about the impact on production bundle size, so I checked that too. It seems to add 2 bytes, for the extra parameter on `triggerRefValue`. Everything else is removed.",2024-06-01T01:29:36Z
8215,PRR_kwDOCCum185UDtlm,edison1105,COMMENTED,,2023-05-03T06:36:33Z
8222,PRR_kwDOCCum1853_FDT,skirtles-code,COMMENTED,,2024-04-20T04:54:35Z
8222,PRR_kwDOCCum1854AgHq,edison1105,COMMENTED,,2024-04-21T13:19:01Z
8242,PRR_kwDOCCum185UYqEk,edison1105,COMMENTED,,2023-05-06T09:41:14Z
8242,PRR_kwDOCCum185UYxYL,baiwusanyu-c,COMMENTED,,2023-05-06T13:55:21Z
8259,PRR_kwDOCCum185Uh-X-,edison1105,APPROVED,,2023-05-09T08:56:41Z
8259,PRR_kwDOCCum185Ursm1,danielroe,APPROVED,,2023-05-10T14:09:56Z
8263,PRR_kwDOCCum185UoIBY,baiwusanyu-c,COMMENTED,,2023-05-10T05:31:05Z
8263,PRR_kwDOCCum185Uobot,Alfred-Skyblue,COMMENTED,,2023-05-10T06:47:41Z
8268,PRR_kwDOCCum18531d5W,skirtles-code,COMMENTED,,2024-04-19T04:24:56Z
8277,PRR_kwDOCCum185Ux8KZ,sxzz,APPROVED,,2023-05-11T11:33:46Z
8283,PRR_kwDOCCum185VcuBb,yyx990803,COMMENTED,,2023-05-18T23:50:30Z
8283,PRR_kwDOCCum185Vc8kW,Alfred-Skyblue,COMMENTED,,2023-05-19T01:21:17Z
8283,PRR_kwDOCCum185X0myE,sxzz,COMMENTED,,2023-06-10T12:46:51Z
8283,PRR_kwDOCCum185X0tCo,sxzz,APPROVED,,2023-06-10T14:43:34Z
8299,PRR_kwDOCCum185VWpqt,yyx990803,COMMENTED,,2023-05-18T04:55:16Z
8304,PRR_kwDOCCum185U-agx,edison1105,APPROVED,,2023-05-15T01:11:22Z
8328,PRR_kwDOCCum185X0dkU,sxzz,APPROVED,,2023-06-10T09:47:46Z
8337,PRR_kwDOCCum185VWrJv,yyx990803,COMMENTED,,2023-05-18T05:03:57Z
8338,PRR_kwDOCCum185YHqpk,kirillshatalkin,COMMENTED,,2023-06-14T03:20:12Z
8338,PRR_kwDOCCum185YMhSX,Alfred-Skyblue,COMMENTED,,2023-06-14T14:55:19Z
8338,PRR_kwDOCCum1858r8N2,skirtles-code,COMMENTED,,2024-06-01T00:36:43Z
8338,PRR_kwDOCCum18580JWV,Alfred-Skyblue,COMMENTED,,2024-06-03T14:27:55Z
8341,PRR_kwDOCCum1858rdpv,skirtles-code,COMMENTED,,2024-05-31T22:00:32Z
8386,PRR_kwDOCCum185YCrR1,sxzz,APPROVED,,2023-06-13T12:50:43Z
8389,PRR_kwDOCCum186JCgy6,edison1105,COMMENTED,,2024-09-12T03:18:49Z
8392,PRR_kwDOCCum185V5hH3,sxzz,APPROVED,,2023-05-24T07:40:19Z
8392,PRR_kwDOCCum185X0cSd,sxzz,APPROVED,,2023-06-10T09:09:22Z
8394,PRR_kwDOCCum185X0cET,sxzz,APPROVED,,2023-06-10T09:03:15Z
8394,PRR_kwDOCCum185X0cNe,sxzz,APPROVED,,2023-06-10T09:06:49Z
8406,PRR_kwDOCCum185X0bZU,sxzz,COMMENTED,,2023-06-10T08:48:51Z
8406,PRR_kwDOCCum185X0cB0,sxzz,COMMENTED,,2023-06-10T09:01:32Z
8406,PRR_kwDOCCum185X0owi,Alfred-Skyblue,COMMENTED,,2023-06-10T13:34:48Z
8406,PRR_kwDOCCum185X0s1S,sxzz,COMMENTED,,2023-06-10T14:42:28Z
8406,PRR_kwDOCCum185X1Ccn,Alfred-Skyblue,COMMENTED,,2023-06-10T23:13:09Z
8406,PRR_kwDOCCum185X1NVf,sxzz,APPROVED,,2023-06-11T02:57:55Z
8456,PRR_kwDOCCum1858EhcH,skirtles-code,COMMENTED,,2024-05-28T00:37:16Z
8456,PRR_kwDOCCum1858HvRX,Alfred-Skyblue,COMMENTED,,2024-05-28T10:40:19Z
8456,PRR_kwDOCCum186A2zFY,skirtles-code,COMMENTED,"I'm a bit confused by the changes in your last commit. The second `normalizeStyle` section has been entirely removed. While some of those tests were maybe duplicates of the tests in the other `normalizeStyle` section, most of them did seem to be testing different things. When I mentioned the duplicate section in my earlier review I had intended for you to combine the tests into a single section, not remove them all.

I think those tests should be brought back.

I've included some other minor suggestions below.",2024-07-07T12:16:31Z
8456,PRR_kwDOCCum186GFJTk,Alfred-Skyblue,COMMENTED,,2024-08-21T02:18:15Z
8456,PRR_kwDOCCum186GFJa3,Alfred-Skyblue,COMMENTED,,2024-08-21T02:18:22Z
8456,PRR_kwDOCCum186GFJiH,Alfred-Skyblue,COMMENTED,,2024-08-21T02:18:30Z
8464,PRR_kwDOCCum185d7Qms,sxzz,APPROVED,,2023-08-13T12:45:57Z
8470,PRR_kwDOCCum185X-p-B,sxzz,COMMENTED,,2023-06-13T00:55:42Z
8470,PRR_kwDOCCum185mxSRS,yyx990803,COMMENTED,,2023-11-10T07:44:30Z
8470,PRR_kwDOCCum185mxT0I,yyx990803,CHANGES_REQUESTED,,2023-11-10T07:49:28Z
8475,PRR_kwDOCCum185Ww2T6,baiwusanyu-c,COMMENTED,,2023-06-01T14:39:26Z
8475,PRR_kwDOCCum185Ww4J7,edison1105,COMMENTED,,2023-06-01T14:43:02Z
8476,PRR_kwDOCCum185X0bUW,sxzz,APPROVED,,2023-06-10T08:45:16Z
8486,PRR_kwDOCCum185954Uf,pikax,APPROVED,,2024-06-12T08:30:09Z
8490,PRR_kwDOCCum185X0bSH,sxzz,APPROVED,LGTM,2023-06-10T08:43:40Z
8493,PRR_kwDOCCum185_N4b6,skirtles-code,COMMENTED,"I like the approach taken here. Trying to remove the comments would be complex and error-prone, whereas retaining the final `\n` is relatively simple.

Unfortunately, the code in `parse.ts` no longer exists. I believe the equivalent code in the new parser is here:

https://github.com/vuejs/core/blob/423b462e59d71dbde51cb025c38272673b047a89/packages/compiler-core/src/parser.ts#L117-L120

I had a quick go at making a similar fix there. Something like:

```ts
    let addNewline = false
    while (true) {
      const chr = currentInput.charCodeAt(innerEnd - 1)
      if (!isWhitespace(chr)) {
        break
      }
      if (chr === 10) {
        addNewline = true
      }
      innerEnd--
    }
    let exp = getSlice(innerStart, innerEnd)
    if (addNewline) {
      exp += '\n'
    }
```

That seemed to work, but it's more code than I would've liked to fix an edge case. There may well be a cleaner way to write that, I haven't given it much thought, I just wanted to check that the underlying approach was still feasible with the new parser.

All that said, I also wonder what the expectation would be around this:

```html
{{ msg // comment }}
```

The fix proposed here wouldn't apply, as there's no trailing `\n`, but I'd personally expect the `}}` to still count as the end of the interpolation and for the comment to be considered closed. Somewhat analogous to how `node -e ""console.log(1+1) // comment""` is handled on the command-line, or how `new Function` handles `new Function('return 2 // comment')`. In that last example, there's an implicit newline added, the comment doesn't clash with the closing `}` of the function body. I feel Vue's interpolations should behave in a similar way.

Though I suppose it could also be argued that it should behave like JS backticks, e.g. `` `${ 1 + 1 // comment }` ``, which would fail without the explicit newline. I don't see it that way myself, but I could understand if others do.",2024-06-23T17:08:12Z
8502,PRR_kwDOCCum1853q6UC,skirtles-code,COMMENTED,"In my opinion, the changes proposed here are incorrect. The test expectations should not need to change for `reactive()` collections.

I think the fix proposed in #8503 is closer to the desired behaviour.",2024-04-18T02:58:21Z
8502,PRR_kwDOCCum1853q_uY,Alfred-Skyblue,COMMENTED,,2024-04-18T03:26:35Z
8503,PRR_kwDOCCum185d7dhq,sxzz,APPROVED,,2023-08-13T17:35:02Z
8503,PRR_kwDOCCum185_X2T_,skirtles-code,COMMENTED,"This is currently marked as a breaking change. I don't think it is a breaking change, not in the semantic versioning sense.

That said, it could break people's applications if they're relying on the buggy behaviour. I think it'd be appropriate for it to go in a `minor` release.

The current behaviour on `main` leads to some strange inconsistencies. e.g.:

- [Playground - `main`](https://play.vuejs.org/#eNp9kjFPwzAQhf/KyQupVAUhmKq2EqAOMABq2TCD61zTFMeObCctivLfOTukVKjqZr/v+e7dyS27r6q0qZFN2NRJW1QeHPq6AiV0PuPMO87mXBdlZayHFiwK6YsGx3TajMFthVJmv/xVoYONNSVcUcUrrrmWRjsPAmbBntyMBmUdlf5R0pKhOyJ5Dg0wI/ivZ6JxDyv0ycf6c0TWLBVZlsj4KEs3xi6E3Caovf2G2RxargFCMaMwVSbvSSrIf1ZPG6FqJBpiTK/7HdFG6OKxrJTwSDeAAE8ENqbVUblNkac7ZzTtN3bmTJqyKhTa18oX1I6zSZ8psDjYc9S8rXE86HKL8uuMvnOHoHH2ZtGhbZCzI/PC5uh7vFi94IHOR1iarFbkvgCXSKuoQ8be9lDrjGKf+GLap/gzCp2/u8XBo3bDUCFocHbRzxl9iccLo//FvU3v4jtaOet+APXt4sI=)

TS gets confused about what's going on because it's expecting the ref to still be unwrapped for entry `c`.

---

As suggested previously, I think a test should be added to this PR for the `Set` case too.

I've also made a suggestion about the specifics of the implementation below.",2024-06-24T23:13:50Z
8503,PRR_kwDOCCum186ACMva,liuseen-l,COMMENTED,,2024-06-28T13:40:51Z
8503,PRR_kwDOCCum186AGmML,skirtles-code,COMMENTED,,2024-06-29T02:44:49Z
8503,PRR_kwDOCCum186AHIBp,liuseen-l,COMMENTED,,2024-06-29T06:00:58Z
8503,PRR_kwDOCCum186B5oY1,yyx990803,COMMENTED,,2024-07-16T06:54:51Z
8505,PRR_kwDOCCum185X0c9n,sxzz,APPROVED,LGTM,2023-06-10T09:30:06Z
8506,PRR_kwDOCCum185XME76,sxzz,APPROVED,LGTM,2023-06-05T15:12:52Z
8512,PRR_kwDOCCum185Xc3EQ,sxzz,APPROVED,LGTM,2023-06-07T09:51:10Z
8513,PRR_kwDOCCum185X0XYu,sxzz,APPROVED,,2023-06-10T08:01:08Z
8513,PRR_kwDOCCum185X0cjI,sxzz,APPROVED,,2023-06-10T09:16:47Z
8523,PRR_kwDOCCum185XmpwR,edison1105,APPROVED,,2023-06-08T11:58:53Z
8523,PRR_kwDOCCum185Xmq0o,edison1105,COMMENTED,,2023-06-08T12:01:41Z
8523,PRR_kwDOCCum185XrWCr,edison1105,CHANGES_REQUESTED,,2023-06-09T00:49:13Z
8523,PRR_kwDOCCum185Xrdwg,edison1105,APPROVED,,2023-06-09T01:08:38Z
8527,PRR_kwDOCCum185X0XUc,sxzz,COMMENTED,"LGTM.

But it would be advisable to add JSDoc for enhanced robustness",2023-06-10T07:59:30Z
8527,PRR_kwDOCCum185d7QFr,sxzz,APPROVED,,2023-08-13T12:37:44Z
8535,PRR_kwDOCCum185a7AeI,yyx990803,APPROVED,,2023-07-12T03:02:27Z
8536,PRR_kwDOCCum185d4wgQ,sxzz,APPROVED,,2023-08-12T13:51:19Z
8538,PRR_kwDOCCum185X1OB_,sxzz,APPROVED,,2023-06-11T03:11:55Z
8543,PRR_kwDOCCum185X1eDK,sxzz,COMMENTED,"That's great! It's exactly what I wanted to do before. However, we need to explore ways to ensure compatibility with TS versions higher than 4.4. Perhaps we can use `typeVersions` to differentiate between TS >= 5.1 and other versions.",2023-06-11T08:38:05Z
8545,PRR_kwDOCCum185a7B16,yyx990803,CHANGES_REQUESTED,,2023-07-12T03:11:22Z
8545,PRR_kwDOCCum185bYcCS,sxzz,COMMENTED,,2023-07-17T15:56:32Z
8549,PRR_kwDOCCum185a7x_9,sxzz,APPROVED,LGTM,2023-07-12T06:40:52Z
8556,PRR_kwDOCCum185X6qtc,sxzz,APPROVED,,2023-06-12T13:58:49Z
8558,PRR_kwDOCCum185eEegq,sxzz,APPROVED,,2023-08-15T09:25:30Z
8558,PRR_kwDOCCum185zTOox,haoqunjiang,APPROVED,The vuetify failure in ecosystem-ci wasn't related to this PR.,2024-03-13T14:55:34Z
8559,PRR_kwDOCCum185d7eJc,sxzz,DISMISSED,,2023-08-13T17:59:16Z
8562,PRR_kwDOCCum185YA5mc,sxzz,APPROVED,,2023-06-13T08:58:33Z
8562,PRR_kwDOCCum185lRRjt,haoqunjiang,APPROVED,,2023-10-26T08:34:06Z
8565,PRR_kwDOCCum185YCk6j,sxzz,COMMENTED,I think the best approach to maintaining consistency is by implementing an ESLint rule.,2023-06-13T12:40:15Z
8565,PRR_kwDOCCum185YHc0T,Justineo,APPROVED,,2023-06-14T02:39:40Z
8565,PRR_kwDOCCum185d8Uw1,sxzz,APPROVED,,2023-08-14T05:32:55Z
8566,PRR_kwDOCCum185YA6IV,sxzz,COMMENTED,Reactivity Transform is deprecated. We'll no longer maintain/update it and it'll be removed in Vue 3.4.,2023-06-13T08:59:34Z
8568,PRR_kwDOCCum185YK_XB,MaxTechnics,COMMENTED,,2023-06-14T12:13:28Z
8568,PRR_kwDOCCum185d7eCj,sxzz,APPROVED,,2023-08-13T17:54:38Z
8568,PRR_kwDOCCum185f9ALv,haoqunjiang,APPROVED,,2023-09-04T16:51:51Z
8574,PRR_kwDOCCum185d7fmQ,sxzz,COMMENTED,,2023-08-13T18:49:16Z
8584,PRR_kwDOCCum185eEdhj,sxzz,COMMENTED,"We can add an ESLint rule as well

https://github.com/vitejs/vite/blob/63a44511133276f903e54d4dde4296d5d5963298/.eslintrc.cjs#L92-L95",2023-08-15T09:23:50Z
8586,PRR_kwDOCCum185etAaN,yyx990803,APPROVED,,2023-08-22T08:49:34Z
8592,PRR_kwDOCCum185Yfz2D,sxzz,COMMENTED,"`defaults` should not be hoisted if it's used by other assignments.
https://deploy-preview-8592--vue-sfc-playground.netlify.app/#eNo9jkEKgzAQRa8yZKVYtGuJQqEH6AFmY+3YCjoJyaRdhNy9oVZ38/mPeT+qi7X1O5Bqlfajm62AJwkWloGfHSrxqHrk0bAXeNA0hEU8dBBhMqaFMyTkzyyv678qMjMz3ZyxXkdk2DgO650ccuqL8nT8KZH3s85YVSHrZluRnTkIrXYZhHICiD8npGzUzdGo9AW/zUYh",2023-06-17T08:49:14Z
8592,PRR_kwDOCCum185d7eXI,sxzz,CHANGES_REQUESTED,"Should hoist the first one statement instead of the second one
https://deploy-preview-8592--vue-sfc-playground.netlify.app/#eNqNjzELwjAQhf/KkaUtiKJjaQuCzroKt8Sa1kh7CcmlDiX/3Uh1cfK47b3vPd4s9taup6BEKSrfOm0ZvOJgYZDU1yjYo2iQ9GiNY5jBqQ4idM6MkCUsQ0JqDXmGm+pkGNifrg/VMtTJTHJUJaA4TpLgYsIOBUSkGQnS/Y1tFyz9glhnrE/Op+b74YPnKUeTOr+l6hvh2WnqITZ5sfopKpCqzTK4EfEFQEBcJQ==",2023-08-13T18:07:19Z
8596,PRR_kwDOCCum185_Mbs7,skirtles-code,COMMENTED,"I tried testing this locally, after merging in `main`. The line numbers seem to be off. I think they're only counting lines within the `<style>` section, not within the file as a whole.

Not sure whether fixing that would be in scope for this PR, but including the line number in the warning isn't currently very helpful.

I've made some other suggestions for changes to the warnings below, though I haven't taken into account the inaccurate line numbers.",2024-06-22T23:50:54Z
8598,PRR_kwDOCCum185ktUXF,pikax,APPROVED,,2023-10-20T09:13:02Z
8601,PRR_kwDOCCum185YiFtU,sxzz,APPROVED,LGTM,2023-06-19T03:02:31Z
8602,PRR_kwDOCCum185azdcH,sxzz,APPROVED,,2023-07-11T05:19:21Z
8607,PRR_kwDOCCum185a71Vr,sxzz,APPROVED,,2023-07-12T06:50:02Z
8619,PRR_kwDOCCum185YzdcM,edison1105,COMMENTED,,2023-06-21T06:48:34Z
8619,PRR_kwDOCCum185Yzzug,baiwusanyu-c,COMMENTED,,2023-06-21T07:37:37Z
8619,PRR_kwDOCCum185Y0g_b,edison1105,CHANGES_REQUESTED,,2023-06-21T08:38:28Z
8619,PRR_kwDOCCum185Y1BuX,edison1105,APPROVED,,2023-06-21T09:42:08Z
8639,PRR_kwDOCCum185_L-Xm,skirtles-code,COMMENTED,,2024-06-22T15:44:00Z
8644,PRR_kwDOCCum185ZaJl0,pikax,APPROVED,,2023-06-27T06:25:30Z
8654,PRR_kwDOCCum185d7RRS,sxzz,COMMENTED,,2023-08-13T12:58:02Z
8654,PRR_kwDOCCum185d7UzT,auvred,COMMENTED,,2023-08-13T13:58:50Z
8654,PRR_kwDOCCum185d7cC-,sxzz,APPROVED,,2023-08-13T16:47:42Z
8654,PRR_kwDOCCum185d7xYl,edison1105,COMMENTED,,2023-08-14T01:24:25Z
8654,PRR_kwDOCCum185d-nab,auvred,COMMENTED,,2023-08-14T11:50:08Z
8655,PRR_kwDOCCum185ffZfx,yyx990803,APPROVED,,2023-08-30T07:32:17Z
8655,PRR_kwDOCCum185ffZsl,yyx990803,COMMENTED,,2023-08-30T07:32:45Z
8655,PRR_kwDOCCum185f5hEK,sxzz,APPROVED,,2023-09-04T07:21:51Z
8657,PRR_kwDOCCum185haxGV,edison1105,APPROVED,,2023-09-20T01:16:21Z
8657,PRR_kwDOCCum185haxGw,edison1105,APPROVED,,2023-09-20T01:16:23Z
8657,PRR_kwDOCCum185-GwpS,skirtles-code,COMMENTED,,2024-06-13T12:52:16Z
8658,PRR_kwDOCCum185ZbmAi,sxzz,COMMENTED,Could you please provide more info/reason about the PR?,2023-06-27T09:41:22Z
8666,PRR_kwDOCCum185Zi1dJ,sxzz,APPROVED,LGTM,2023-06-28T05:27:22Z
8667,PRR_kwDOCCum185Ziy_M,sxzz,APPROVED,,2023-06-28T05:17:28Z
8669,PRR_kwDOCCum185ZjVHi,edison1105,COMMENTED,,2023-06-28T07:13:15Z
8669,PRR_kwDOCCum185ZjYK7,xiejun-net,COMMENTED,,2023-06-28T07:21:15Z
8671,PRR_kwDOCCum185d4x0G,sxzz,APPROVED,,2023-08-12T13:58:02Z
8671,PRR_kwDOCCum185kj54d,haoqunjiang,CHANGES_REQUESTED,,2023-10-19T09:07:13Z
8674,PRR_kwDOCCum185errNz,sxzz,APPROVED,,2023-08-22T06:28:08Z
8681,PRR_kwDOCCum185d7d7p,sxzz,COMMENTED,,2023-08-13T17:50:12Z
8681,PRR_kwDOCCum185d711h,Alfred-Skyblue,COMMENTED,,2023-08-14T01:58:16Z
8681,PRR_kwDOCCum185d8XgB,sxzz,COMMENTED,,2023-08-14T05:46:18Z
8681,PRR_kwDOCCum185d-Ufq,Alfred-Skyblue,COMMENTED,,2023-08-14T10:52:22Z
8681,PRR_kwDOCCum185d_opB,sxzz,APPROVED,,2023-08-14T14:24:23Z
8681,PRR_kwDOCCum185etEig,yyx990803,APPROVED,,2023-08-22T08:55:51Z
8684,PRR_kwDOCCum1858HY9P,skirtles-code,COMMENTED,,2024-05-28T09:59:14Z
8684,PRR_kwDOCCum186F8jWm,edison1105,COMMENTED,,2024-08-20T07:56:22Z
8684,PRR_kwDOCCum186F8kIj,edison1105,APPROVED,,2024-08-20T07:57:46Z
8684,PRR_kwDOCCum186M-Vl1,yyx990803,APPROVED,,2024-10-14T02:09:01Z
8703,PRR_kwDOCCum185aDGPr,edison1105,COMMENTED,,2023-07-03T09:23:02Z
8703,PRR_kwDOCCum185aDW95,shengxinjing,COMMENTED,,2023-07-03T09:56:52Z
8704,PRR_kwDOCCum185d7dye,sxzz,APPROVED,,2023-08-13T17:44:09Z
8707,PRR_kwDOCCum185d7d3H,sxzz,COMMENTED,"I think it's bad for DX. If we do this change, then the generated dts will also be affected.

<img width=""576"" alt=""image"" src=""https://github.com/vuejs/core/assets/6481596/e8b49103-1f08-4c22-8c07-cdc4e943f418"">
",2023-08-13T17:47:34Z
8717,PRR_kwDOCCum185d7eT3,sxzz,APPROVED,,2023-08-13T18:05:07Z
8718,PRR_kwDOCCum185egubV,skirtles-code,COMMENTED,,2023-08-19T12:41:28Z
8719,PRR_kwDOCCum185bYaO2,sxzz,APPROVED,,2023-07-17T15:52:17Z
8720,PRR_kwDOCCum185d7ds9,sxzz,COMMENTED,,2023-08-13T17:42:12Z
8720,PRR_kwDOCCum185d7q1-,shengxinjing,COMMENTED,,2023-08-13T23:58:38Z
8721,PRR_kwDOCCum185d7d4l,sxzz,APPROVED,,2023-08-13T17:48:33Z
8722,PRR_kwDOCCum185eDYcS,sxzz,COMMENTED,"IMHO, there's actually no any value but added more redundant code and increased bundle size.",2023-08-15T04:16:46Z
8729,PRR_kwDOCCum185fnf5l,sxzz,APPROVED,"LGTM in code perspective, but we need more discussion",2023-08-31T08:11:32Z
8731,PRR_kwDOCCum185eDZRp,sxzz,APPROVED,,2023-08-15T04:24:13Z
8731,PRR_kwDOCCum185lFaCm,skirtles-code,COMMENTED,,2023-10-24T21:27:55Z
8731,PRR_kwDOCCum185lGVal,Alfred-Skyblue,COMMENTED,,2023-10-25T01:27:00Z
8735,PRR_kwDOCCum185apj4c,yyx990803,APPROVED,,2023-07-09T04:49:07Z
8748,PRR_kwDOCCum185da_JW,sxzz,COMMENTED,,2023-08-08T13:47:49Z
8748,PRR_kwDOCCum185dgfmv,Alfred-Skyblue,COMMENTED,,2023-08-09T05:57:25Z
8748,PRR_kwDOCCum185dgjSI,jacekkarczmarczyk,COMMENTED,,2023-08-09T06:12:02Z
8748,PRR_kwDOCCum185d4Yjh,sxzz,COMMENTED,,2023-08-12T11:46:07Z
8748,PRR_kwDOCCum185d4Yj9,sxzz,APPROVED,,2023-08-12T11:46:29Z
8752,PRR_kwDOCCum185fn0nG,sxzz,COMMENTED,,2023-08-31T08:55:16Z
8752,PRR_kwDOCCum185fn4D9,sxzz,COMMENTED,,2023-08-31T09:01:56Z
8752,PRR_kwDOCCum185foDuM,sxzz,APPROVED,LGTM,2023-08-31T09:27:31Z
8752,PRR_kwDOCCum185jYbpM,haoqunjiang,CHANGES_REQUESTED,,2023-10-10T11:14:40Z
8752,PRR_kwDOCCum185jZDUE,haoqunjiang,COMMENTED,,2023-10-10T12:33:18Z
8752,PRR_kwDOCCum185jaTBG,Jeff-Tian,COMMENTED,,2023-10-10T14:15:20Z
8752,PRR_kwDOCCum185jakDk,haoqunjiang,APPROVED,,2023-10-10T14:38:45Z
8763,PRR_kwDOCCum185a7y2o,sxzz,CHANGES_REQUESTED,,2023-07-12T06:43:31Z
8763,PRR_kwDOCCum185a8J0e,Alfred-Skyblue,COMMENTED,,2023-07-12T07:42:33Z
8763,PRR_kwDOCCum185elhGv,sxzz,APPROVED,,2023-08-21T12:36:53Z
8779,PRR_kwDOCCum185bLS1Q,sxzz,COMMENTED,,2023-07-14T06:17:58Z
8779,PRR_kwDOCCum185bLTRM,epreston,COMMENTED,,2023-07-14T06:19:01Z
8779,PRR_kwDOCCum185bLT6G,epreston,COMMENTED,,2023-07-14T06:21:36Z
8779,PRR_kwDOCCum185bYZxY,sxzz,APPROVED,,2023-07-17T15:51:12Z
8781,PRR_kwDOCCum185d7dDD,sxzz,APPROVED,,2023-08-13T17:17:09Z
8784,PRR_kwDOCCum1853_B1l,skirtles-code,COMMENTED,,2024-04-20T03:38:01Z
8785,PRR_kwDOCCum185elhW7,sxzz,APPROVED,,2023-08-21T12:37:30Z
8785,PRR_kwDOCCum185ffYyK,sxzz,APPROVED,,2023-08-30T07:30:27Z
8785,PRR_kwDOCCum185kztaO,skirtles-code,COMMENTED,,2023-10-21T15:27:04Z
8785,PRR_kwDOCCum185k0Bg8,edison1105,COMMENTED,,2023-10-22T02:46:33Z
8786,PRR_kwDOCCum185ktd2Q,yyx990803,COMMENTED,,2023-10-20T09:35:27Z
8786,PRR_kwDOCCum185ktfQB,sxzz,COMMENTED,,2023-10-20T09:38:55Z
8786,PRR_kwDOCCum185ktqD9,yyx990803,COMMENTED,,2023-10-20T10:05:16Z
8786,PRR_kwDOCCum185kt8dU,sxzz,COMMENTED,,2023-10-20T10:46:52Z
8796,PRR_kwDOCCum185bYXEu,sxzz,APPROVED,,2023-07-17T15:45:03Z
8801,PRR_kwDOCCum185bdbTN,antfu,APPROVED,In general this feature makes sense to me.,2023-07-18T08:01:35Z
8801,PRR_kwDOCCum185dhIBc,posva,CHANGES_REQUESTED,"I remember we intentionally stuck to only inject and provide.

That being said I think this is really useful and did propose it too but wanted to avoid adding too much right away to `runWithContext()` 🤪. The router and pinia could benefit from this too.

Could you add a test?
This could probably be moved to `createApp()` too",2023-08-09T07:55:02Z
8801,PRR_kwDOCCum185dhKTg,posva,COMMENTED,,2023-08-09T08:00:16Z
8801,PRR_kwDOCCum185dlUpJ,Mini-ghost,COMMENTED,,2023-08-09T16:21:13Z
8801,PRR_kwDOCCum185dpigw,posva,COMMENTED,"This looks good to me. It would be nice to have feedback from @yyx990803 to know if he can think of any reason not to have an effect like this.

One thing work noting is that any user doing this:

```ts
const myEffect = effectScope()

myEffect.run(() => app.runWithContext(fn))
```

Will have to rewrite it to

```ts
app.runWithContext(() => myEffect.run(fn))
```

Which is technically a breaking change. I haven't checked the usage of this in the wild though but I will have to update pinia before this comes out as I currently have the code shown above 😆 ",2023-08-10T07:08:53Z
8801,PRR_kwDOCCum185dsK9a,Mini-ghost,COMMENTED,,2023-08-10T13:10:04Z
8801,PRR_kwDOCCum185dsYW2,posva,COMMENTED,,2023-08-10T13:33:18Z
8801,PRR_kwDOCCum185_SY-d,Mini-ghost,COMMENTED,,2024-06-24T11:29:09Z
8803,PRR_kwDOCCum1859-qMw,skirtles-code,COMMENTED,,2024-06-12T16:46:15Z
8803,PRR_kwDOCCum185-FTZG,daniser,COMMENTED,,2024-06-13T09:51:01Z
8803,PRR_kwDOCCum185_L028,skirtles-code,COMMENTED,"Would you be able to merge in `main`, to resolve the conflicts and get the latest ESLint rules?",2024-06-22T13:01:38Z
8803,PRR_kwDOCCum186tx5xq,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/components/TransitionGroup.ts (1)</summary><blockquote>

`153-155`: **Pure function call during render – just double-check perf**

`getRelativePosition` is executed for every child on every render. It still triggers `getBoundingClientRect`, which forces a layout read twice per element (old/new). While this is inherited from the previous implementation, consider caching the first read inside the loop or switching to `offsetLeft/offsetTop` where possible to reduce layout thrashing in very large lists.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between cdffaf6b9efce2c52635714e8e2d7480737c6b50 and b48c5a40b1371e01768e3c973c8c77a04b9aff07.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/runtime-dom/src/components/TransitionGroup.ts` (3 hunks)

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/components/TransitionGroup.ts (2)</summary>

`32-35`: **Small, well-scoped data structure – looks good**

A minimal `Position` interface (only `left`/`top`) keeps the payload lean and avoids carrying useless properties that used to be present (`width`/`height`).

---

`37-38`: **Correct use of `WeakMap` avoids leaks**

Using `VNode` as the key and a `WeakMap` ensures the stored coordinates are garbage-collected when the VNode is discarded – thumbs-up.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-11T03:27:45Z
8807,PRR_kwDOCCum185bj5KU,sxzz,APPROVED,,2023-07-19T02:06:04Z
8820,PRR_kwDOCCum185b6g28,VasylHulpak,COMMENTED,,2023-07-22T07:54:44Z
8820,PRR_kwDOCCum185b7Vsw,sxzz,COMMENTED,,2023-07-23T15:56:21Z
8821,PRR_kwDOCCum185b0r7i,sxzz,APPROVED,,2023-07-21T06:36:05Z
8844,PRR_kwDOCCum185eDZA5,sxzz,COMMENTED,"I think we can keep the changes of unit tests, but revert runtime code. Seems like we removed `new` keyword only and but a new import specifier.",2023-08-15T04:21:51Z
8844,PRR_kwDOCCum185eEc7S,sxzz,APPROVED,,2023-08-15T09:22:06Z
8844,PRR_kwDOCCum185zlFDJ,haoqunjiang,APPROVED,,2024-03-15T14:27:23Z
8859,PRR_kwDOCCum185kzohS,yyx990803,COMMENTED,,2023-10-21T13:12:12Z
8859,PRR_kwDOCCum185kzpst,edison1105,COMMENTED,,2023-10-21T13:54:01Z
8859,PRR_kwDOCCum185k9SvS,yyx990803,COMMENTED,,2023-10-24T01:33:13Z
8874,PRR_kwDOCCum185f6KFI,yyx990803,APPROVED,,2023-09-04T08:57:45Z
8896,PRR_kwDOCCum185d4dxM,sxzz,APPROVED,,2023-08-12T12:19:22Z
8897,PRR_kwDOCCum185c8OCv,sxzz,CHANGES_REQUESTED,,2023-08-02T15:35:31Z
8897,PRR_kwDOCCum185dAYMz,sxzz,APPROVED,,2023-08-03T07:09:12Z
8897,PRR_kwDOCCum185kzl-R,skirtles-code,COMMENTED,,2023-10-21T12:02:07Z
8909,PRR_kwDOCCum185dF0SE,sxzz,COMMENTED,,2023-08-03T20:24:09Z
8909,PRR_kwDOCCum185dHBev,productdevbook,COMMENTED,,2023-08-04T03:28:31Z
8909,PRR_kwDOCCum185dHHP8,Shyam-Chen,COMMENTED,,2023-08-04T04:12:05Z
8909,PRR_kwDOCCum185dHIAO,productdevbook,COMMENTED,,2023-08-04T04:17:34Z
8909,PRR_kwDOCCum185dH2f5,sxzz,APPROVED,,2023-08-04T07:36:06Z
8911,PRR_kwDOCCum185d4Rf3,sxzz,APPROVED,,2023-08-12T11:01:42Z
8926,PRR_kwDOCCum185fnyOP,sxzz,APPROVED,,2023-08-31T08:49:55Z
8926,PRR_kwDOCCum185lJaOb,haoqunjiang,APPROVED,,2023-10-25T10:50:16Z
8929,PRR_kwDOCCum185d4Rb7,sxzz,APPROVED,,2023-08-12T11:00:11Z
8929,PRR_kwDOCCum185ksskD,yyx990803,APPROVED,,2023-10-20T07:45:40Z
8940,PRR_kwDOCCum185dgWuU,Justineo,COMMENTED,,2023-08-09T05:20:42Z
8940,PRR_kwDOCCum185dlidr,sxzz,APPROVED,,2023-08-09T16:50:06Z
8950,PRR_kwDOCCum185d7c3G,sxzz,APPROVED,,2023-08-13T17:10:11Z
8953,PRR_kwDOCCum185ht_fA,skirtles-code,COMMENTED,A few thoughts from me.,2023-09-22T08:40:28Z
8953,PRR_kwDOCCum185hwqW9,Tofandel,COMMENTED,,2023-09-22T15:01:06Z
8953,PRR_kwDOCCum185hwq_8,Tofandel,COMMENTED,,2023-09-22T15:02:34Z
8953,PRR_kwDOCCum185hwu_B,Tofandel,COMMENTED,,2023-09-22T15:10:32Z
8953,PRR_kwDOCCum185h0Cyf,skirtles-code,COMMENTED,,2023-09-24T10:19:15Z
8953,PRR_kwDOCCum185h0Cyo,skirtles-code,COMMENTED,,2023-09-24T10:19:20Z
8953,PRR_kwDOCCum185h3JSs,Tofandel,COMMENTED,,2023-09-25T10:38:53Z
8956,PRR_kwDOCCum185dxUH1,sxzz,APPROVED,,2023-08-11T08:15:01Z
8956,PRR_kwDOCCum185fq2B3,haoqunjiang,APPROVED,,2023-08-31T15:40:25Z
8960,PRR_kwDOCCum185klYUO,pikax,APPROVED,,2023-10-19T12:10:57Z
8960,PRR_kwDOCCum185kzfNt,LinusBorg,APPROVED,,2023-10-21T09:06:20Z
8970,PRR_kwDOCCum185eEco6,sxzz,APPROVED,,2023-08-15T09:21:09Z
8970,PRR_kwDOCCum185f-08i,haoqunjiang,APPROVED,,2023-09-05T06:32:16Z
8978,PRR_kwDOCCum185eHOIl,sxzz,APPROVED,,2023-08-15T16:17:10Z
8978,PRR_kwDOCCum185f8z9h,haoqunjiang,COMMENTED,It would be more helpful and more comprehensive if we could add an ESLint rule in the project to avoid such issues from happening again. https://typescript-eslint.io/rules/prefer-ts-expect-error,2023-09-04T16:03:34Z
8978,PRR_kwDOCCum185gepoZ,Alfred-Skyblue,COMMENTED,,2023-09-09T14:16:00Z
8983,PRR_kwDOCCum185eO9QI,sxzz,COMMENTED,Why add this node requirement?,2023-08-16T16:10:13Z
8985,PRR_kwDOCCum185ejicr,sxzz,APPROVED,,2023-08-21T07:34:12Z
8985,PRR_kwDOCCum185f9Aaw,haoqunjiang,APPROVED,,2023-09-04T16:53:15Z
8985,PRR_kwDOCCum185kr3jT,edison1105,APPROVED,,2023-10-20T04:57:36Z
8986,PRR_kwDOCCum185ei6AJ,sxzz,COMMENTED,,2023-08-21T05:27:14Z
8986,PRR_kwDOCCum185ek9u2,Alfred-Skyblue,COMMENTED,,2023-08-21T11:04:35Z
8986,PRR_kwDOCCum185elKLK,sxzz,COMMENTED,,2023-08-21T11:38:41Z
8986,PRR_kwDOCCum185elVul,Alfred-Skyblue,COMMENTED,,2023-08-21T12:08:50Z
8986,PRR_kwDOCCum185elZml,sxzz,APPROVED,,2023-08-21T12:18:39Z
8986,PRR_kwDOCCum185g8SaY,haoqunjiang,DISMISSED,,2023-09-14T09:08:31Z
8986,PRR_kwDOCCum185g8TIo,baiwusanyu-c,APPROVED,,2023-09-14T09:10:02Z
8986,PRR_kwDOCCum185hm7-R,haoqunjiang,APPROVED,,2023-09-21T11:31:58Z
8986,PRR_kwDOCCum185hm_si,sxzz,APPROVED,,2023-09-21T11:41:04Z
8986,PRR_kwDOCCum185ksWQI,sxzz,APPROVED,,2023-10-20T06:44:05Z
8986,PRR_kwDOCCum185ksWZY,sxzz,COMMENTED,,2023-10-20T06:44:32Z
8986,PRR_kwDOCCum185ksfcR,Alfred-Skyblue,COMMENTED,,2023-10-20T07:12:25Z
8986,PRR_kwDOCCum185kshji,sxzz,COMMENTED,,2023-10-20T07:18:21Z
8986,PRR_kwDOCCum185kskWI,yyx990803,APPROVED,,2023-10-20T07:25:54Z
8988,PRR_kwDOCCum185eg5kM,sxzz,APPROVED,,2023-08-19T15:26:03Z
8988,PRR_kwDOCCum185kzfUW,LinusBorg,APPROVED,,2023-10-21T09:10:30Z
8988,PRR_kwDOCCum185k0aZx,sxzz,APPROVED,,2023-10-22T16:40:33Z
8988,PRR_kwDOCCum185ozIap,yyx990803,CHANGES_REQUESTED,,2023-11-30T18:51:18Z
8988,PRR_kwDOCCum185o1WwP,Alfred-Skyblue,COMMENTED,,2023-12-01T00:56:43Z
8988,PRR_kwDOCCum1853Wb0P,skirtles-code,COMMENTED,,2024-04-16T00:09:46Z
8988,PRR_kwDOCCum1853XANH,Alfred-Skyblue,COMMENTED,,2024-04-16T03:37:07Z
8988,PRR_kwDOCCum1853XAP6,Alfred-Skyblue,COMMENTED,,2024-04-16T03:37:23Z
8989,PRR_kwDOCCum185eSOdb,edison1105,CHANGES_REQUESTED,,2023-08-17T06:02:21Z
8989,PRR_kwDOCCum185eSPY9,baiwusanyu-c,COMMENTED,,2023-08-17T06:06:12Z
8989,PRR_kwDOCCum185ecKWk,sxzz,CHANGES_REQUESTED,,2023-08-18T12:00:40Z
8989,PRR_kwDOCCum185ecMDr,baiwusanyu-c,COMMENTED,,2023-08-18T12:05:54Z
8989,PRR_kwDOCCum185ejh_L,sxzz,COMMENTED,,2023-08-21T07:33:01Z
8989,PRR_kwDOCCum185eqYDl,baiwusanyu-c,COMMENTED,,2023-08-22T02:18:33Z
8989,PRR_kwDOCCum185eqo5I,sxzz,COMMENTED,,2023-08-22T04:03:53Z
8989,PRR_kwDOCCum185esBjM,sxzz,COMMENTED,,2023-08-22T07:03:23Z
8989,PRR_kwDOCCum185esENv,baiwusanyu-c,COMMENTED,,2023-08-22T07:07:18Z
8989,PRR_kwDOCCum185esGH3,sxzz,COMMENTED,,2023-08-22T07:11:26Z
8989,PRR_kwDOCCum185esGOL,sxzz,APPROVED,,2023-08-22T07:11:40Z
8989,PRR_kwDOCCum185kzfYJ,LinusBorg,APPROVED,,2023-10-21T09:12:41Z
8989,PRR_kwDOCCum185o1cgs,edison1105,APPROVED,,2023-12-01T01:19:42Z
8992,PRR_kwDOCCum185eingi,yyx990803,APPROVED,,2023-08-21T03:33:24Z
8998,PRR_kwDOCCum185ecV0X,sxzz,APPROVED,,2023-08-18T12:33:37Z
8998,PRR_kwDOCCum185ozEHJ,yyx990803,CHANGES_REQUESTED,,2023-11-30T18:39:30Z
8998,PRR_kwDOCCum185o1X4K,Alfred-Skyblue,COMMENTED,,2023-12-01T01:00:53Z
9012,PRR_kwDOCCum185elbpq,sxzz,APPROVED,,2023-08-21T12:23:45Z
9012,PRR_kwDOCCum185fubU7,baiwusanyu-c,APPROVED,,2023-09-01T01:56:21Z
9012,PRR_kwDOCCum185zsTgZ,haoqunjiang,APPROVED,,2024-03-16T08:04:55Z
9019,PRR_kwDOCCum185e-jpT,sxzz,APPROVED,,2023-08-24T12:18:47Z
9026,PRR_kwDOCCum185e6K4N,sxzz,CHANGES_REQUESTED,Could you please provide more info about this PR? Adding a helper function without using it is meaningless.,2023-08-23T19:50:17Z
9028,PRR_kwDOCCum185fnlv-,sxzz,COMMENTED,"Thanks for your contribution, but we don't think this change is necessary. Keeping both ESLint and TypeScript at the same time obviously won't affect anything, but it can better alert us to problems in the code.",2023-08-31T08:23:51Z
9028,PRR_kwDOCCum185fxjLW,sxzz,COMMENTED,,2023-09-01T12:09:10Z
9028,PRR_kwDOCCum185f1RaM,Alfred-Skyblue,COMMENTED,,2023-09-02T00:49:02Z
9028,PRR_kwDOCCum185f3Vln,sxzz,APPROVED,,2023-09-02T16:33:04Z
9034,PRR_kwDOCCum185fF1ep,sxzz,APPROVED,"LGTM from a code perspective, but we still need to wait for more perspectives about the necessity of this feature.",2023-08-25T09:52:31Z
9034,PRR_kwDOCCum185ffTOm,yyx990803,APPROVED,,2023-08-30T07:16:04Z
9041,PRR_kwDOCCum185fF2M6,sxzz,APPROVED,,2023-08-25T09:54:25Z
9041,PRR_kwDOCCum185fnjte,sxzz,COMMENTED,"Thanks for your contribution! We presently do not entertain stylistic refinements, unless they demonstrably contribute significantly to performance or bundle size reduction. Could you provide evidence to substantiate this?",2023-08-31T08:19:48Z
9043,PRR_kwDOCCum185fE2J2,sxzz,APPROVED,,2023-08-25T07:32:12Z
9043,PRR_kwDOCCum185kzfZG,LinusBorg,APPROVED,,2023-10-21T09:13:17Z
9043,PRR_kwDOCCum185lh7fm,haoqunjiang,APPROVED,,2023-10-30T07:14:42Z
9045,PRR_kwDOCCum185fKXhI,sxzz,COMMENTED,,2023-08-25T22:04:28Z
9045,PRR_kwDOCCum185fKXkU,sxzz,COMMENTED,,2023-08-25T22:04:49Z
9045,PRR_kwDOCCum185fKqJO,btea,COMMENTED,,2023-08-26T00:09:32Z
9045,PRR_kwDOCCum185fKqUa,btea,COMMENTED,,2023-08-26T00:11:03Z
9045,PRR_kwDOCCum185fK5ni,sxzz,COMMENTED,,2023-08-26T01:40:21Z
9045,PRR_kwDOCCum185fK5od,sxzz,APPROVED,LGTM,2023-08-26T01:40:48Z
9051,PRR_kwDOCCum185gGsU7,baiwusanyu-c,CHANGES_REQUESTED,,2023-09-06T03:55:43Z
9051,PRR_kwDOCCum185gG9Un,chenfan0,COMMENTED,,2023-09-06T04:49:33Z
9051,PRR_kwDOCCum185gO6QA,Jinjiang,COMMENTED,,2023-09-07T03:26:02Z
9051,PRR_kwDOCCum185gPO_h,chenfan0,COMMENTED,,2023-09-07T05:29:58Z
9053,PRR_kwDOCCum185fnJyf,sxzz,COMMENTED,,2023-08-31T07:19:11Z
9053,PRR_kwDOCCum185f_QOg,sxzz,COMMENTED,,2023-09-05T07:40:13Z
9053,PRR_kwDOCCum185gH0Tu,sxzz,APPROVED,,2023-09-06T07:23:24Z
9053,PRR_kwDOCCum185zShJW,haoqunjiang,APPROVED,,2024-03-13T13:47:47Z
9055,PRR_kwDOCCum185fnz36,sxzz,COMMENTED,Could you please provide more info about your PR? Bugfixes or performance enhancement?,2023-08-31T08:53:37Z
9055,PRR_kwDOCCum185foJPG,sxzz,COMMENTED,"It's a not bad fix, but maybe we can make `effect` property as a symbol in the future. We can have more discussion. 

- symbol?
  - breaking changes?",2023-08-31T09:39:59Z
9061,PRR_kwDOCCum185fRBif,chenfan0,COMMENTED,,2023-08-28T13:27:57Z
9062,PRR_kwDOCCum185fnJAH,sxzz,APPROVED,"LGTM in code perspective, but we do need to consider if this refactor is really helpful.

Note: Currently, we do not accept stylistic refactor, unless it really helps performance or reduces bundle size.

Personally, I agree with these changes.",2023-08-31T07:17:13Z
9068,PRR_kwDOCCum185fatPq,haoqunjiang,CHANGES_REQUESTED,Could you add a test case for the issue?,2023-08-29T16:24:48Z
9068,PRR_kwDOCCum185fnZy5,sxzz,COMMENTED,,2023-08-31T07:58:01Z
9068,PRR_kwDOCCum185fnk54,royalknight56,COMMENTED,,2023-08-31T08:22:17Z
9069,PRR_kwDOCCum185fZfgd,sxzz,COMMENTED,,2023-08-29T14:07:48Z
9069,PRR_kwDOCCum185fnHLr,sxzz,DISMISSED,"LGTM in code perspective, waiting for more discussion.

- necessary?
- minor?",2023-08-31T07:12:31Z
9069,PRR_kwDOCCum185f_tHR,sxzz,COMMENTED,,2023-09-05T08:39:54Z
9069,PRR_kwDOCCum185gIAJ8,sxzz,COMMENTED,,2023-09-06T07:50:09Z
9069,PRR_kwDOCCum185gI_M6,sxzz,APPROVED,,2023-09-06T10:03:23Z
9069,PRR_kwDOCCum185ktKMp,sxzz,CHANGES_REQUESTED,A unit test is needed in `packages/compiler-core/__tests__/transforms/transformExpressions.spec.ts`,2023-10-20T08:51:44Z
9078,PRR_kwDOCCum185fn8pj,sxzz,COMMENTED,"I see. `toReadonly` is just a internal API, so I think we don't need add function overrides, even it's better for types. It won't affect userland.

For internal usage, I don't think the PR is necessary. See
https://github.com/vuejs/core/blob/8998afa42755cbdb3403cd6c0fe158980da8492c/packages/reactivity/src/collectionHandlers.ts#L36
wrap will be converted to `const wrap: <T extends unknown>(value: T) => T`. Nothing changed.",2023-08-31T09:11:30Z
9080,PRR_kwDOCCum185fnY-Z,sxzz,COMMENTED,"I think it's by design and if we change the behavior now, it will break anything.",2023-08-31T07:56:26Z
9081,PRR_kwDOCCum185htQ1q,skirtles-code,COMMENTED,,2023-09-22T06:50:09Z
9081,PRR_kwDOCCum185hzy78,brenner8023,COMMENTED,,2023-09-24T02:58:19Z
9081,PRR_kwDOCCum185h0Awm,skirtles-code,COMMENTED,,2023-09-24T08:58:01Z
9083,PRR_kwDOCCum1859iHxm,skirtles-code,COMMENTED,,2024-06-09T07:22:32Z
9083,PRR_kwDOCCum186F9NnS,edison1105,COMMENTED,,2024-08-20T09:07:23Z
9086,PRR_kwDOCCum185fnwOB,sxzz,APPROVED,,2023-08-31T08:45:51Z
9086,PRR_kwDOCCum185zGl4E,haoqunjiang,APPROVED,,2024-03-12T13:43:45Z
9089,PRR_kwDOCCum185flk_C,edison1105,APPROVED,,2023-08-31T00:59:01Z
9089,PRR_kwDOCCum185fls6P,baiwusanyu-c,APPROVED,,2023-08-31T01:50:59Z
9089,PRR_kwDOCCum185fnFCy,sxzz,APPROVED,,2023-08-31T07:06:28Z
9089,PRR_kwDOCCum185frdzi,haoqunjiang,APPROVED,,2023-08-31T17:02:02Z
9094,PRR_kwDOCCum185fvbbM,sxzz,APPROVED,,2023-09-01T05:25:00Z
9094,PRR_kwDOCCum185pycX4,yyx990803,COMMENTED,,2023-12-11T10:43:16Z
9108,PRR_kwDOCCum185fzD8O,baiwusanyu-c,COMMENTED,"LGTM
cc/ @sxzz",2023-09-01T15:54:19Z
9108,PRR_kwDOCCum185fzk23,sxzz,APPROVED,,2023-09-01T17:03:07Z
9108,PRR_kwDOCCum185pmXdj,baiwusanyu-c,APPROVED,,2023-12-08T07:07:19Z
9112,PRR_kwDOCCum185f41Cu,haoqunjiang,APPROVED,,2023-09-04T04:14:25Z
9122,PRR_kwDOCCum185f3v3j,sxzz,COMMENTED,"Why? It's necessary.
",2023-09-03T08:01:21Z
9122,PRR_kwDOCCum1858H6_B,skirtles-code,COMMENTED,,2024-05-28T11:05:13Z
9129,PRR_kwDOCCum185f9Q7n,sxzz,COMMENTED,,2023-09-04T18:59:11Z
9129,PRR_kwDOCCum185f95DT,Mini-ghost,COMMENTED,,2023-09-05T01:40:20Z
9129,PRR_kwDOCCum185f-_83,sxzz,COMMENTED,,2023-09-05T07:02:09Z
9129,PRR_kwDOCCum185f_Dn5,Mini-ghost,COMMENTED,,2023-09-05T07:11:09Z
9129,PRR_kwDOCCum185f_OlM,sxzz,APPROVED,,2023-09-05T07:36:41Z
9129,PRR_kwDOCCum185gBMQc,baiwusanyu-c,APPROVED,,2023-09-05T12:21:20Z
9129,PRR_kwDOCCum185pyTP9,yyx990803,CHANGES_REQUESTED,,2023-12-11T10:27:58Z
9129,PRR_kwDOCCum185pzaWW,Mini-ghost,COMMENTED,,2023-12-11T12:58:00Z
9134,PRR_kwDOCCum185gC0iv,baiwusanyu-c,COMMENTED,Please add a unit test,2023-09-05T15:39:23Z
9134,PRR_kwDOCCum185gQGFs,baiwusanyu-c,APPROVED,LGTM,2023-09-07T08:10:20Z
9141,PRR_kwDOCCum185gDfV-,baiwusanyu-c,COMMENTED,"In fact, methods such as add in responsive objects are proxied by proxies to complete responsive implementation, so I think it is an uncommon scenario for these methods to be modified. Their modification will cause problems with responsive object-related functions, and perhaps we need to give some warnings",2023-09-05T16:49:57Z
9141,PRR_kwDOCCum185gDjLp,baiwusanyu-c,CHANGES_REQUESTED,,2023-09-05T16:58:56Z
9141,PRR_kwDOCCum185gGmjJ,baiwusanyu-c,APPROVED,,2023-09-06T03:35:13Z
9141,PRR_kwDOCCum185gNxq_,sxzz,COMMENTED,,2023-09-06T21:12:45Z
9146,PRR_kwDOCCum185gJImx,sxzz,APPROVED,,2023-09-06T10:26:20Z
9152,PRR_kwDOCCum185gNvgq,sxzz,APPROVED,,2023-09-06T21:05:40Z
9155,PRR_kwDOCCum185gNy_6,sxzz,APPROVED,,2023-09-06T21:17:37Z
9157,PRR_kwDOCCum185hg_ja,sxzz,APPROVED,,2023-09-20T16:11:33Z
9158,PRR_kwDOCCum185gO_x0,Jinjiang,APPROVED,,2023-09-07T04:05:05Z
9158,PRR_kwDOCCum185kmVIQ,haoqunjiang,APPROVED,"Note: I believe this was originally added because `estree-walker` < 3.0 implicitly depends on `estree` types.
But now after https://github.com/vuejs/core/commit/ae7453f0f1ae7c8b0af4416b559439cb535adc8c we are actually using a shim for `estree-walker` types.
So, this dependency is no longer needed. It should be safely removable.",2023-10-19T13:38:51Z
9162,PRR_kwDOCCum185gS-gU,Justineo,COMMENTED,,2023-09-07T14:28:09Z
9162,PRR_kwDOCCum185gTB0c,sxzz,COMMENTED,,2023-09-07T14:34:22Z
9162,PRR_kwDOCCum185gT3yz,Justineo,COMMENTED,,2023-09-07T16:20:58Z
9162,PRR_kwDOCCum185gULzY,sxzz,COMMENTED,,2023-09-07T17:09:28Z
9182,PRR_kwDOCCum185ghs8r,sxzz,APPROVED,,2023-09-11T08:43:43Z
9183,PRR_kwDOCCum185ghtF1,sxzz,APPROVED,,2023-09-11T08:44:02Z
9190,PRR_kwDOCCum1853W9Hh,skirtles-code,COMMENTED,,2024-04-16T03:16:48Z
9190,PRR_kwDOCCum1853XA3R,edison1105,COMMENTED,,2024-04-16T03:41:25Z
9190,PRR_kwDOCCum1859hv09,skirtles-code,COMMENTED,,2024-06-08T23:19:37Z
9190,PRR_kwDOCCum1859iPUN,edison1105,COMMENTED,,2024-06-09T09:45:13Z
9190,PRR_kwDOCCum1859iPVj,edison1105,COMMENTED,,2024-06-09T09:45:44Z
9190,PRR_kwDOCCum185_L0BP,skirtles-code,COMMENTED,,2024-06-22T12:45:46Z
9199,PRR_kwDOCCum185gtNye,baiwusanyu-c,APPROVED,,2023-09-12T14:57:33Z
9202,PRR_kwDOCCum185gzJda,Alfred-Skyblue,COMMENTED,,2023-09-13T08:44:50Z
9202,PRR_kwDOCCum185gzLyL,baiwusanyu-c,CHANGES_REQUESTED,avoid using optional chaining,2023-09-13T08:49:37Z
9202,PRR_kwDOCCum185gzvw4,edison1105,CHANGES_REQUESTED,,2023-09-13T10:04:18Z
9202,PRR_kwDOCCum185g2cPd,linghaoSu,COMMENTED,,2023-09-13T15:43:21Z
9202,PRR_kwDOCCum185g2c1J,linghaoSu,COMMENTED,,2023-09-13T15:44:36Z
9202,PRR_kwDOCCum185g5fNw,edison1105,CHANGES_REQUESTED,,2023-09-14T01:37:30Z
9203,PRR_kwDOCCum1858HM35,haoqunjiang,APPROVED,,2024-05-28T09:36:19Z
9206,PRR_kwDOCCum185mvei4,antfu,COMMENTED,,2023-11-10T00:20:18Z
9206,PRR_kwDOCCum185mvjf8,Alfred-Skyblue,COMMENTED,,2023-11-10T00:39:57Z
9206,PRR_kwDOCCum185m-FZP,Alfred-Skyblue,COMMENTED,,2023-11-13T15:18:25Z
9206,PRR_kwDOCCum185nCWKG,Alfred-Skyblue,COMMENTED,,2023-11-14T03:07:09Z
9213,PRR_kwDOCCum185jHz0m,baiwusanyu-c,COMMENTED,,2023-10-07T03:52:33Z
9213,PRR_kwDOCCum185jH1I-,edison1105,COMMENTED,,2023-10-07T04:51:01Z
9213,PRR_kwDOCCum185jH183,edison1105,COMMENTED,,2023-10-07T05:26:31Z
9213,PRR_kwDOCCum1859gTvF,skirtles-code,COMMENTED,"I'm wondering whether we should completely avoid slot content being paired against fallback content in the diff? I don't think users expect elements/components to be reused in this way and it seems bug prone.

Consider this example:

- [Playground](https://play.vuejs.org/#eNqFVE1v2zAM/SucDv0AuvjQW+Om24IeOgzbsBbYxRfHYRw1siRIcpogyH8fKdlOk3XrySL5HvX4Ie/EZ2tH6xbFjch95aQN4DG0dlJo2VjjAuzA4QL2sHCmgXOCng+hqWls5x9lbHAmChe6MtpTpqV5gVvmXwTX4mXvL2dV5yZXnqV76UYyAjZWlQHJAsiNil86KTl52loEqSEsEc5UGEtt23BWh3GeUfSAmypZrSIq98EZXU+my1LXSBclE2ZtCIYuPqL9Xm5B+r+zgw9SKbDGtixsfgcdUlKBMbRFpczL3bsyvpn6VMPobRE9gxp1YJzqGKh5FvsUjzyFPl8sAdYf5eK2EDyLQnDTyaC8hei4HYONR8LcwG6XBrffR0ASCp8qrqdLRNP7kBIOvU2wlHPmuu8JladvFI6UqS9IwmWnAYA6k8QMWfLs1SaQ6cNWIfjKWJzzbsbSdkyaldWqdqbV85tuEuNCk3RuHHEILK5EIKZeyHr07I2mXY9MFtRYqdD9sEGStkJQ9UkR9YhTfY0+Xt6r3l8tsVq94X/2G/YV4qdDj26NhRhioXQ1hhS+f/yOGzoPwcbMW0Xo/wR/IfWtZY0J9oWqJdmvcFHtQ3yWUtdP/n4TUPu+KBbKyH3EF4KeKY/9X6Uf5F6PriOPOkpd7J84/yyOH+pcrvut88rwW+bz6Q5GGf3MKWgnD1A2sCDxPEWgGZHqkGfDCmdDtjxLdxwthtj/Ad3tlXQ=)

A similar example using a stateful child component:

- [Playground](https://play.vuejs.org/#eNqFU01T2zAQ/SuqLsAMtQ/cGMO0pRzotIUBjro4zsYRyJJGkpMwHv93diXbCRDCyfvx9umt9Nzxn9Zmqxb4OS985aQNzENo7aXQsrHGBdYxBwvWs4UzDTtC6NHUujKNHepZTgkxbdv/Xm60bcOEGPIBJHRltMfjlmbNLuiQ4+BaOBnr5awaylgq8iQOZWESoLGqDIAZYwUdHCOMxyNX3+XiQnDiFpxIMEFCjPM0FOVGNsYeEHXOui5J6fsImLUhGM1+VEpWzwMV6vmWKC+vlqWuocgTLHHO3PB9N0r7GAWZMvUxijjB8ST3r6mTmImlyHd246c8eBxeyDp78kbjG3WEJ8bGSgXu1gaJ5IKj/ESJaypl1n9ije7zdKxXS6ie99Sf/IZqgt858OBWIPjUC6WrIaT29cN/2GA8NRszbxWiDzTvARdvSWOC/Wr1HGXv4KLam+gXqetHf70JoP24FAklZB/xgqNz6N0+W30r9yw7i3NC93iLozU/N/lhqx5y31yuRvN5ZQhC8UcrxlVG+9GbT+giTxzv335Hwx7h6SepHJR0D4+yAXTnbxzOtFl/9ctsRaPr33AM7t8rqX8FafNmXA==)",2024-06-08T03:59:24Z
9213,PRR_kwDOCCum185_K2pk,skirtles-code,COMMENTED,,2024-06-22T01:05:52Z
9213,PRR_kwDOCCum185_K6F_,edison1105,COMMENTED,,2024-06-22T01:41:14Z
9219,PRR_kwDOCCum185i13pe,skirtles-code,COMMENTED,,2023-10-04T18:56:14Z
9219,PRR_kwDOCCum185i68lM,edison1105,COMMENTED,,2023-10-05T11:35:32Z
9225,PRR_kwDOCCum185hHDam,baiwusanyu-c,COMMENTED,,2023-09-15T15:34:24Z
9225,PRR_kwDOCCum185hU-WG,John-Oldman-Wang,COMMENTED,,2023-09-19T09:59:50Z
9232,PRR_kwDOCCum1859dpbi,skirtles-code,COMMENTED,,2024-06-07T16:02:54Z
9232,PRR_kwDOCCum1859t3z_,edison1105,COMMENTED,,2024-06-11T02:52:54Z
9232,PRR_kwDOCCum185_KyPy,skirtles-code,COMMENTED,Any reason not to include test cases for the change to `hydration.ts`?,2024-06-22T00:17:25Z
9232,PRR_kwDOCCum185_K34-,edison1105,COMMENTED,,2024-06-22T01:27:44Z
9232,PRR_kwDOCCum185_LBYT,skirtles-code,COMMENTED,,2024-06-22T03:37:07Z
9232,PRR_kwDOCCum185_Lx_l,edison1105,COMMENTED,,2024-06-22T12:21:32Z
9234,PRR_kwDOCCum185hbXMP,baiwusanyu-c,APPROVED,,2023-09-20T04:07:01Z
9234,PRR_kwDOCCum185mIUqq,pikax,APPROVED,,2023-11-03T20:06:23Z
9237,PRR_kwDOCCum185jIi9H,sxzz,APPROVED,,2023-10-08T08:15:10Z
9238,PRR_kwDOCCum185hg3yY,sxzz,APPROVED,,2023-09-20T15:54:35Z
9240,PRR_kwDOCCum185hMP5Y,edison1105,CHANGES_REQUESTED,,2023-09-18T09:12:25Z
9240,PRR_kwDOCCum185hS25U,Alfred-Skyblue,COMMENTED,,2023-09-19T02:59:27Z
9240,PRR_kwDOCCum185hS43I,edison1105,COMMENTED,,2023-09-19T03:12:18Z
9240,PRR_kwDOCCum185hTCbN,Alfred-Skyblue,COMMENTED,,2023-09-19T03:54:10Z
9240,PRR_kwDOCCum185hTkgn,edison1105,APPROVED,,2023-09-19T06:41:34Z
9240,PRR_kwDOCCum185jAQC0,skirtles-code,COMMENTED,,2023-10-06T02:06:00Z
9240,PRR_kwDOCCum185jATdF,skirtles-code,COMMENTED,,2023-10-06T02:31:28Z
9240,PRR_kwDOCCum185jK342,Alfred-Skyblue,COMMENTED,,2023-10-09T06:36:51Z
9249,PRR_kwDOCCum185hTElO,sxzz,DISMISSED,,2023-09-19T04:09:32Z
9249,PRR_kwDOCCum185kkzgv,haoqunjiang,APPROVED,,2023-10-19T11:05:24Z
9249,PRR_kwDOCCum185lfXDj,sxzz,COMMENTED,,2023-10-28T07:06:21Z
9249,PRR_kwDOCCum185lxZ68,baiwusanyu-c,COMMENTED,,2023-11-01T01:26:37Z
9249,PRR_kwDOCCum185lxa12,baiwusanyu-c,COMMENTED,,2023-11-01T01:32:59Z
9261,PRR_kwDOCCum185hli4y,baiwusanyu-c,APPROVED,,2023-09-21T08:28:22Z
9261,PRR_kwDOCCum185h9Ph5,yangmingshan,COMMENTED,"- `enumData.ids` is no longer needed, should be removed.
- `reExportsRE` is no longer used, should be removed.",2023-09-26T06:35:26Z
9261,PRR_kwDOCCum185h9Ttw,yangmingshan,COMMENTED,"These remove marks are outdated, can be removed.
https://github.com/vuejs/core/pull/9263/files#diff-26d284526e65ace970b11a5fca37ec3d51c2f5ebd6ff9c0731106f86cf97eca6",2023-09-26T06:47:13Z
9261,PRR_kwDOCCum185h_8S7,yangmingshan,COMMENTED,,2023-09-26T12:33:23Z
9261,PRR_kwDOCCum185h_9gv,yangmingshan,COMMENTED,I think the comment at the top of the enum script needs to be rewritten.,2023-09-26T12:35:51Z
9261,PRR_kwDOCCum185iBEFj,yangmingshan,COMMENTED,,2023-09-26T14:32:07Z
9261,PRR_kwDOCCum185iBKzr,yangmingshan,COMMENTED,,2023-09-26T14:43:41Z
9261,PRR_kwDOCCum185iTVP8,sxzz,CHANGES_REQUESTED,,2023-09-28T16:10:36Z
9261,PRR_kwDOCCum185jyI2N,sxzz,APPROVED,,2023-10-12T12:50:42Z
9263,PRR_kwDOCCum185htG6e,sxzz,COMMENTED,"Could you please add eslint rules as well?
See https://github.com/vuejs/core/pull/9261/files#diff-e1ce717e1179a0db14e90ec5374768a206651ca807db58352991eb7895ed7c9c",2023-09-22T06:16:43Z
9265,PRR_kwDOCCum185hnBRR,sxzz,COMMENTED,,2023-09-21T11:44:58Z
9265,PRR_kwDOCCum185htQFR,haoqunjiang,COMMENTED,,2023-09-22T06:47:38Z
9265,PRR_kwDOCCum185htkrz,sxzz,APPROVED,,2023-09-22T07:39:45Z
9266,PRR_kwDOCCum185hnTKc,sxzz,APPROVED,,2023-09-21T12:25:07Z
9268,PRR_kwDOCCum185hnWtV,sxzz,APPROVED,,2023-09-21T12:32:51Z
9269,PRR_kwDOCCum185hn1cf,sxzz,COMMENTED,,2023-09-21T13:26:41Z
9269,PRR_kwDOCCum185hoRlk,sxzz,APPROVED,,2023-09-21T14:12:38Z
9287,PRR_kwDOCCum185jvovm,sxzz,APPROVED,,2023-10-12T07:14:58Z
9300,PRR_kwDOCCum185iF7E_,baiwusanyu-c,APPROVED,,2023-09-27T06:47:59Z
9300,PRR_kwDOCCum185j61E1,pikax,APPROVED,,2023-10-13T12:22:35Z
9300,PRR_kwDOCCum185lxyfD,sxzz,APPROVED,,2023-11-01T04:15:28Z
9301,PRR_kwDOCCum185iGpUa,yyx990803,APPROVED,,2023-09-27T08:26:54Z
9306,PRR_kwDOCCum185iOBPx,baiwusanyu-c,APPROVED,,2023-09-28T03:47:55Z
9306,PRR_kwDOCCum185iW-C7,sxzz,APPROVED,,2023-09-29T07:08:00Z
9306,PRR_kwDOCCum185kxixM,skirtles-code,COMMENTED,,2023-10-20T18:24:31Z
9306,PRR_kwDOCCum185kzk6_,jh-leong,COMMENTED,,2023-10-21T11:33:17Z
9306,PRR_kwDOCCum185lRh_r,haoqunjiang,APPROVED,,2023-10-26T09:07:57Z
9309,PRR_kwDOCCum185im9Ib,antfu,APPROVED,,2023-10-03T05:32:30Z
9309,PRR_kwDOCCum185j60e7,pikax,COMMENTED,LGTM,2023-10-13T12:21:00Z
9321,PRR_kwDOCCum185kXXDj,edison1105,COMMENTED,,2023-10-18T03:04:10Z
9321,PRR_kwDOCCum185kY9ZV,sxzz,COMMENTED,,2023-10-18T07:14:50Z
9321,PRR_kwDOCCum185kZgHg,edison1105,COMMENTED,,2023-10-18T08:16:42Z
9322,PRR_kwDOCCum185jIi8G,sxzz,APPROVED,,2023-10-08T08:14:44Z
9323,PRR_kwDOCCum185j4ks-,sxzz,APPROVED,,2023-10-13T06:05:03Z
9324,PRR_kwDOCCum185jvsim,sxzz,APPROVED,,2023-10-12T07:21:28Z
9328,PRR_kwDOCCum185kF04U,pikax,APPROVED,,2023-10-16T07:02:53Z
9328,PRR_kwDOCCum185lfnoT,webfansplz,APPROVED,,2023-10-28T13:06:25Z
9336,PRR_kwDOCCum185mIVlc,pikax,APPROVED,,2023-11-03T20:09:29Z
9351,PRR_kwDOCCum185jH-EA,edison1105,COMMENTED,,2023-10-07T09:57:01Z
9351,PRR_kwDOCCum185jIC7t,baiwusanyu-c,COMMENTED,,2023-10-07T13:06:32Z
9351,PRR_kwDOCCum185jIaLT,edison1105,COMMENTED,,2023-10-08T03:09:52Z
9351,PRR_kwDOCCum185jIaSU,edison1105,COMMENTED,,2023-10-08T03:15:24Z
9351,PRR_kwDOCCum185jKSGb,edison1105,COMMENTED,,2023-10-09T00:46:47Z
9351,PRR_kwDOCCum185jKS-D,edison1105,APPROVED,,2023-10-09T01:03:47Z
9351,PRR_kwDOCCum1859Wq4M,skirtles-code,COMMENTED,,2024-06-06T19:58:47Z
9355,PRR_kwDOCCum185jIvvp,baiwusanyu-c,COMMENTED,,2023-10-08T13:32:28Z
9355,PRR_kwDOCCum185jKU69,stayhpjinng,COMMENTED,,2023-10-09T01:36:25Z
9355,PRR_kwDOCCum185j6a5V,pikax,COMMENTED,,2023-10-13T11:11:43Z
9363,PRR_kwDOCCum185s7mL5,sxzz,APPROVED,,2024-01-17T15:25:33Z
9363,PRR_kwDOCCum185u8XkY,haoqunjiang,CHANGES_REQUESTED,,2024-02-04T08:49:16Z
9363,PRR_kwDOCCum1858cRFZ,edison1105,CHANGES_REQUESTED,,2024-05-30T09:40:38Z
9363,PRR_kwDOCCum1858cZS9,haoqunjiang,APPROVED,,2024-05-30T09:53:39Z
9363,PRR_kwDOCCum1858cenN,edison1105,APPROVED,,2024-05-30T10:04:15Z
9368,PRR_kwDOCCum185jX8-8,baiwusanyu-c,COMMENTED,,2023-10-10T10:42:14Z
9368,PRR_kwDOCCum185jZB_F,OBe95,COMMENTED,,2023-10-10T12:32:03Z
9370,PRR_kwDOCCum185jZWou,OBe95,COMMENTED,,2023-10-10T12:47:41Z
9370,PRR_kwDOCCum185jZfg0,edison1105,COMMENTED,,2023-10-10T12:54:20Z
9370,PRR_kwDOCCum185jdKcM,skirtles-code,COMMENTED,,2023-10-10T18:41:29Z
9370,PRR_kwDOCCum185jhDbH,edison1105,COMMENTED,,2023-10-11T02:01:46Z
9371,PRR_kwDOCCum185j6XPL,pikax,APPROVED,LGTM,2023-10-13T11:00:41Z
9371,PRR_kwDOCCum1858DTgP,haoqunjiang,APPROVED,,2024-05-27T16:23:24Z
9377,PRR_kwDOCCum185jyHxP,sxzz,APPROVED,,2023-10-12T12:48:23Z
9379,PRR_kwDOCCum185jqMpr,sxzz,APPROVED,LGTM,2023-10-11T17:17:40Z
9388,PRR_kwDOCCum185kAfJw,antfu,APPROVED,,2023-10-14T06:35:04Z
9394,PRR_kwDOCCum185j6CtJ,pikax,DISMISSED,,2023-10-13T10:02:57Z
9394,PRR_kwDOCCum185j6JZt,pikax,COMMENTED,My previous review was incorrect,2023-10-13T10:21:23Z
9394,PRR_kwDOCCum185j6P3Z,philippevezina,COMMENTED,,2023-10-13T10:39:05Z
9394,PRR_kwDOCCum185j6SsT,pikax,COMMENTED,,2023-10-13T10:47:10Z
9394,PRR_kwDOCCum185j_4zX,philippevezina,COMMENTED,,2023-10-14T02:54:16Z
9394,PRR_kwDOCCum185kAfzH,pikax,COMMENTED,,2023-10-14T06:58:18Z
9394,PRR_kwDOCCum1858isbp,skirtles-code,COMMENTED,,2024-05-30T22:38:33Z
9399,PRR_kwDOCCum185kAye9,edison1105,APPROVED,,2023-10-14T08:43:50Z
9400,PRR_kwDOCCum185j9PUo,pikax,COMMENTED,LGTM but there's changes on the dependencies which shouldn't be necessary here,2023-10-13T17:30:53Z
9400,PRR_kwDOCCum185j_2Xw,sxzz,COMMENTED,,2023-10-14T02:41:28Z
9400,PRR_kwDOCCum185kQEe7,baiwusanyu-c,COMMENTED,,2023-10-17T10:15:05Z
9400,PRR_kwDOCCum185kRGLM,sxzz,COMMENTED,,2023-10-17T12:34:44Z
9400,PRR_kwDOCCum185kTaPx,baiwusanyu-c,APPROVED,,2023-10-17T16:21:53Z
9406,PRR_kwDOCCum185koVOq,sxzz,APPROVED,,2023-10-19T17:25:25Z
9407,PRR_kwDOCCum185koPC0,sxzz,CHANGES_REQUESTED,Need to modify requirement of node.js to node18 for development env.,2023-10-19T17:10:14Z
9418,PRR_kwDOCCum185koUqg,sxzz,COMMENTED,,2023-10-19T17:23:59Z
9418,PRR_kwDOCCum185mIXpW,pikax,COMMENTED,,2023-11-03T20:15:46Z
9418,PRR_kwDOCCum185mJcPJ,davidmatter,COMMENTED,,2023-11-04T11:53:55Z
9421,PRR_kwDOCCum185lDQQW,haoqunjiang,COMMENTED,,2023-10-24T16:18:57Z
9421,PRR_kwDOCCum185lGDw-,edison1105,COMMENTED,,2023-10-24T23:24:50Z
9421,PRR_kwDOCCum185lH_wF,haoqunjiang,COMMENTED,,2023-10-25T07:46:57Z
9421,PRR_kwDOCCum185lIDDT,haoqunjiang,CHANGES_REQUESTED,"After further investigation, I think `isComment` isn't enough here.

The root problem here is that `getBoundingClientRect` is a method on `Element` objects, while `el` could be any node type (`child.el as Element` doesn't hold true).
It could be either Comment (as in the linked issues) or Text (as in https://github.com/vuejs/core/issues/5153 and https://github.com/vuejs/core/issues/4622) or maybe something else (haven't seen any reports yet)",2023-10-25T07:51:19Z
9421,PRR_kwDOCCum185lJoV3,haoqunjiang,APPROVED,,2023-10-25T11:23:33Z
9421,PRR_kwDOCCum185s7SN_,haoqunjiang,APPROVED,,2024-01-17T14:49:55Z
9427,PRR_kwDOCCum1853fIG_,skirtles-code,COMMENTED,,2024-04-16T21:43:46Z
9427,PRR_kwDOCCum1853f6nI,edison1105,COMMENTED,,2024-04-17T01:56:39Z
9438,PRR_kwDOCCum185ksUps,sxzz,APPROVED,,2023-10-20T06:38:54Z
9438,PRR_kwDOCCum185ksU09,sxzz,CHANGES_REQUESTED,,2023-10-20T06:39:24Z
9438,PRR_kwDOCCum185ksbIV,Disservin,COMMENTED,,2023-10-20T06:59:23Z
9438,PRR_kwDOCCum185ksbx5,sxzz,APPROVED,,2023-10-20T07:01:23Z
9442,PRR_kwDOCCum185ktWdc,pikax,COMMENTED,LGTM,2023-10-20T09:17:51Z
9451,PRR_kwDOCCum185k6uyG,sxzz,COMMENTED,LGTM for the rest part.,2023-10-23T17:29:59Z
9451,PRR_kwDOCCum185lfWkK,sxzz,APPROVED,,2023-10-28T06:45:01Z
9453,PRR_kwDOCCum185k04mu,sxzz,COMMENTED,Let's use switch syntax ,2023-10-23T01:39:12Z
9453,PRR_kwDOCCum185k1Ejk,baiwusanyu-c,APPROVED,,2023-10-23T02:42:06Z
9453,PRR_kwDOCCum185k2ang,sxzz,APPROVED,,2023-10-23T08:31:36Z
9470,PRR_kwDOCCum185lLgvG,skirtles-code,COMMENTED,"As far as I'm aware, the `vue:` prefix only works in templates. At the render-function/VNode level, these are still implemented using `onVnodeMounted`, etc. and the `vue:` prefix won't work.

I'm not sure whether that has any impact on the changes proposed here.",2023-10-25T14:24:48Z
9470,PRR_kwDOCCum185lLvV0,pikax,COMMENTED,,2023-10-25T14:47:28Z
9478,PRR_kwDOCCum185lSmHr,haoqunjiang,CHANGES_REQUESTED,"`joinPaths` is also used in minimatch patterns: https://github.com/vuejs/core/blob/edf2572615d0b065bb7ae49de4c3b71086771310/packages/compiler-sfc/src/script/resolveType.ts#L883 which only accepts forward slashes: https://github.com/isaacs/minimatch#windows
I'm afraid that's what's causing the Windows test failures: https://github.com/vuejs/core/actions/runs/6651662225/job/18074220591?pr=9478

I recommend only modifying the code that resolves the relative path to avoid accidental breakages.",2023-10-26T11:35:56Z
9478,PRR_kwDOCCum185lh6oo,haoqunjiang,COMMENTED,,2023-10-30T07:11:26Z
9478,PRR_kwDOCCum185liuka,b12k,COMMENTED,,2023-10-30T09:09:12Z
9478,PRR_kwDOCCum185li0NM,b12k,COMMENTED,,2023-10-30T09:19:35Z
9478,PRR_kwDOCCum185m6sLx,haoqunjiang,APPROVED,,2023-11-13T07:27:44Z
9480,PRR_kwDOCCum185lYkDQ,zhangmo8,COMMENTED,,2023-10-27T03:21:50Z
9480,PRR_kwDOCCum185laT6_,Simon-He95,COMMENTED,,2023-10-27T09:43:55Z
9480,PRR_kwDOCCum185m6uU6,Justineo,COMMENTED,,2023-11-13T07:35:25Z
9480,PRR_kwDOCCum185m6w-M,Simon-He95,COMMENTED,,2023-11-13T07:45:07Z
9492,PRR_kwDOCCum185lfXW2,yyx990803,COMMENTED,,2023-10-28T07:19:03Z
9492,PRR_kwDOCCum185lg1jO,Alfred-Skyblue,COMMENTED,,2023-10-30T00:55:24Z
9495,PRR_kwDOCCum185mGkQl,haoqunjiang,CHANGES_REQUESTED,"This isn't the right fix.
In `processExp`, `dir` only matters if the `exp` is a possible TypeScript expression. So this PR only fixes the original issue because the template literal contains a `:`.

(Sidenote: your test case omits the `:`, therefore it will pass with or without the change.)",2023-11-03T15:27:05Z
9495,PRR_kwDOCCum185mJUa8,haoqunjiang,APPROVED,,2023-11-04T07:09:23Z
9507,PRR_kwDOCCum185lqbyr,haoqunjiang,APPROVED,,2023-10-31T07:39:14Z
9507,PRR_kwDOCCum185lxXfC,baiwusanyu-c,APPROVED,,2023-11-01T01:09:12Z
9535,PRR_kwDOCCum185l7vIU,sxzz,APPROVED,,2023-11-02T12:48:17Z
9536,PRR_kwDOCCum185l7y80,sxzz,APPROVED,,2023-11-02T12:57:02Z
9543,PRR_kwDOCCum185mHdsG,Kasparas-G55,COMMENTED,,2023-11-03T17:44:54Z
9550,PRR_kwDOCCum185mWDlK,haoqunjiang,APPROVED,,2023-11-07T08:11:12Z
9556,PRR_kwDOCCum185rO50f,pikax,COMMENTED,,2023-12-29T15:30:09Z
9556,PRR_kwDOCCum185rO6Vn,pikax,COMMENTED,,2023-12-29T15:33:49Z
9556,PRR_kwDOCCum185rO6h7,pikax,COMMENTED,,2023-12-29T15:35:09Z
9556,PRR_kwDOCCum185rO9j-,pikax,COMMENTED,,2023-12-29T15:56:51Z
9556,PRR_kwDOCCum185se3a5,messenjer,COMMENTED,,2024-01-13T15:05:13Z
9556,PRR_kwDOCCum185se3nE,pikax,COMMENTED,,2024-01-13T15:11:18Z
9557,PRR_kwDOCCum185mamVr,skirtles-code,COMMENTED,,2023-11-07T17:04:20Z
9557,PRR_kwDOCCum185mfgKJ,zhangenming,COMMENTED,,2023-11-08T07:09:24Z
9557,PRR_kwDOCCum185mfhTV,zhangenming,COMMENTED,,2023-11-08T07:12:55Z
9557,PRR_kwDOCCum185mfhqt,zhangenming,COMMENTED,,2023-11-08T07:14:13Z
9557,PRR_kwDOCCum185mfiy_,skirtles-code,COMMENTED,,2023-11-08T07:16:47Z
9563,PRR_kwDOCCum185-bbml,haoqunjiang,APPROVED,,2024-06-16T06:35:51Z
9568,PRR_kwDOCCum185mjGEI,sxzz,APPROVED,,2023-11-08T14:21:11Z
9573,PRR_kwDOCCum185nWiTy,baiwusanyu-c,APPROVED,,2023-11-16T09:53:22Z
9573,PRR_kwDOCCum185nmPFI,sxzz,APPROVED,,2023-11-17T23:11:27Z
9573,PRR_kwDOCCum1851fxQd,haoqunjiang,APPROVED,,2024-04-01T13:23:02Z
9575,PRR_kwDOCCum185pHJ40,pikax,APPROVED,LGTM,2023-12-04T21:41:35Z
9575,PRR_kwDOCCum185z_0FJ,haoqunjiang,APPROVED,,2024-03-19T12:47:11Z
9576,PRR_kwDOCCum185nWhqr,baiwusanyu-c,COMMENTED,/ecosystem-ci run,2023-11-16T09:52:03Z
9594,PRR_kwDOCCum185m85Cp,baiwusanyu-c,APPROVED,,2023-11-13T12:39:49Z
9603,PRR_kwDOCCum185nInjS,sxzz,COMMENTED,,2023-11-14T17:26:08Z
9603,PRR_kwDOCCum185nLven,yangxiuxiu1115,COMMENTED,,2023-11-15T02:28:37Z
9603,PRR_kwDOCCum185nPIxj,sxzz,COMMENTED,,2023-11-15T13:22:05Z
9603,PRR_kwDOCCum185nPYAj,yangxiuxiu1115,COMMENTED,,2023-11-15T13:53:00Z
9603,PRR_kwDOCCum185nPyJ_,sxzz,COMMENTED,,2023-11-15T14:40:47Z
9603,PRR_kwDOCCum185nQCIR,sxzz,APPROVED,,2023-11-15T15:09:43Z
9609,PRR_kwDOCCum185nWc1x,baiwusanyu-c,COMMENTED,LGTM,2023-11-16T09:42:18Z
9627,PRR_kwDOCCum185nmlVu,sxzz,APPROVED,,2023-11-18T02:33:02Z
9628,PRR_kwDOCCum185nmlSE,sxzz,APPROVED,,2023-11-18T02:31:33Z
9629,PRR_kwDOCCum185nmlXG,sxzz,APPROVED,,2023-11-18T02:33:39Z
9630,PRR_kwDOCCum185nmla5,sxzz,APPROVED,,2023-11-18T02:35:04Z
9651,PRR_kwDOCCum185n0Ovs,antfu,COMMENTED,,2023-11-21T11:23:11Z
9651,PRR_kwDOCCum185n0QDZ,antfu,COMMENTED,,2023-11-21T11:25:59Z
9651,PRR_kwDOCCum185n0Qbn,Alfred-Skyblue,COMMENTED,,2023-11-21T11:26:53Z
9651,PRR_kwDOCCum185n0Qkx,antfu,COMMENTED,I think in general this is a feature nice to have. And we will find it quite useful in VueUse to handle deactivate/resume effects,2023-11-21T11:27:14Z
9651,PRR_kwDOCCum185n0Q8C,Alfred-Skyblue,COMMENTED,,2023-11-21T11:28:08Z
9651,PRR_kwDOCCum185o3GFF,Alfred-Skyblue,COMMENTED,,2023-12-01T08:33:24Z
9651,PRR_kwDOCCum185p6rmh,Simon-He95,COMMENTED,,2023-12-12T09:13:01Z
9651,PRR_kwDOCCum185p6t1Y,Alfred-Skyblue,COMMENTED,,2023-12-12T09:17:40Z
9651,PRR_kwDOCCum185p6wXK,Simon-He95,COMMENTED,,2023-12-12T09:22:40Z
9651,PRR_kwDOCCum185p60yS,Alfred-Skyblue,COMMENTED,,2023-12-12T09:31:19Z
9651,PRR_kwDOCCum185p65Ld,Simon-He95,COMMENTED,,2023-12-12T09:40:15Z
9651,PRR_kwDOCCum185p7fQk,Alfred-Skyblue,COMMENTED,,2023-12-12T10:57:42Z
9651,PRR_kwDOCCum185sL2yq,ferferga,COMMENTED,I also think this can be refactored into a single toggle function that simply toggles between them. That toggle function could also be exposed in my opinion.,2024-01-11T09:13:34Z
9651,PRR_kwDOCCum185sM-2w,Alfred-Skyblue,COMMENTED,,2024-01-11T11:42:20Z
9651,PRR_kwDOCCum185sM_R3,Alfred-Skyblue,COMMENTED,,2024-01-11T11:43:28Z
9651,PRR_kwDOCCum185sNGKG,ferferga,COMMENTED,,2024-01-11T11:58:45Z
9651,PRR_kwDOCCum185sNL3J,Alfred-Skyblue,COMMENTED,,2024-01-11T12:07:24Z
9652,PRR_kwDOCCum185ovBer,pikax,CHANGES_REQUESTED,"This only seems to work with full prop declaration, it does not seem to work with:
```ts
describe('defineProps w/ generics and runtime declarations', <T extends Record<
  string,
  any
>>() => {
  const props = defineProps({
    foo: {
      type: Object as PropType<T>,
      required: false,
      default: null
    },
    bar: {
      type: Object as PropType<T>,
      required: true
    },
    baz: Object as PropType<T>
  })
  expectType<T | null>(props.foo)
  expectType<T>(props.bar)
  expectType<T | undefined>(props.baz)

  // @ts-expect-error should not be a string
  expectType<string>(props.foo)
  // @ts-expect-error should not be a string
  expectType<string>(props.bar)
  // @ts-expect-error should not be a string
  expectType<string>(props.baz)
})
```",2023-11-30T10:45:50Z
9660,PRR_kwDOCCum185ou86K,pikax,APPROVED,,2023-11-30T10:35:43Z
9688,PRR_kwDOCCum185obabo,edison1105,COMMENTED,,2023-11-28T05:00:09Z
9698,PRR_kwDOCCum185ofEkv,Alfred-Skyblue,COMMENTED,,2023-11-28T14:02:08Z
9698,PRR_kwDOCCum185omYzj,baiwusanyu-c,COMMENTED,,2023-11-29T10:08:34Z
9698,PRR_kwDOCCum185onEqU,Alfred-Skyblue,COMMENTED,,2023-11-29T11:47:00Z
9698,PRR_kwDOCCum185o6FwZ,WIStudent,COMMENTED,,2023-12-01T15:38:19Z
9698,PRR_kwDOCCum185pBHS_,Alfred-Skyblue,COMMENTED,,2023-12-04T09:07:05Z
9708,PRR_kwDOCCum185ontcj,sxzz,APPROVED,,2023-11-29T13:14:46Z
9709,PRR_kwDOCCum185orqAe,sxzz,APPROVED,,2023-11-29T21:47:47Z
9733,PRR_kwDOCCum185o4KSZ,baiwusanyu-c,COMMENTED,,2023-12-01T11:01:34Z
9733,PRR_kwDOCCum185o4rI1,DragonnZhang,COMMENTED,,2023-12-01T12:09:19Z
9733,PRR_kwDOCCum185o8_x6,DragonnZhang,COMMENTED,,2023-12-02T07:51:25Z
9733,PRR_kwDOCCum185o-Tmm,DragonnZhang,COMMENTED,,2023-12-03T09:24:23Z
9735,PRR_kwDOCCum185o_dEi,edison1105,CHANGES_REQUESTED,,2023-12-04T01:25:07Z
9738,PRR_kwDOCCum185o9CE7,Alfred-Skyblue,COMMENTED,,2023-12-02T08:04:48Z
9750,PRR_kwDOCCum185pJhpn,DragonnZhang,COMMENTED,,2023-12-05T07:11:48Z
9756,PRR_kwDOCCum185pNm3v,pikax,APPROVED,,2023-12-05T14:08:30Z
9756,PRR_kwDOCCum185pd-G-,haoqunjiang,APPROVED,,2023-12-07T08:19:46Z
9758,PRR_kwDOCCum185pTnqb,sxzz,APPROVED,,2023-12-06T06:35:22Z
9788,PRR_kwDOCCum185pygdu,pikax,APPROVED,LGTM,2023-12-11T10:47:27Z
9790,PRR_kwDOCCum185puAp9,sxzz,APPROVED,,2023-12-09T10:43:17Z
9794,PRR_kwDOCCum185puApR,sxzz,APPROVED,,2023-12-09T10:42:46Z
9805,PRR_kwDOCCum185pwfQg,sxzz,APPROVED,,2023-12-11T05:46:55Z
9808,PRR_kwDOCCum185pwP4d,Alfred-Skyblue,COMMENTED,,2023-12-11T04:13:34Z
9813,PRR_kwDOCCum185p4nki,baiwusanyu-c,COMMENTED,,2023-12-12T01:32:30Z
9813,PRR_kwDOCCum185p7_hU,leoelz,COMMENTED,,2023-12-12T12:15:48Z
9813,PRR_kwDOCCum185qmxFO,pikax,COMMENTED,,2023-12-19T10:20:16Z
9813,PRR_kwDOCCum185qnvLK,leoelz,COMMENTED,,2023-12-19T12:50:12Z
9824,PRR_kwDOCCum185qJD6E,edison1105,APPROVED,,2023-12-14T01:27:41Z
9824,PRR_kwDOCCum185qJLfW,baiwusanyu-c,APPROVED,,2023-12-14T01:44:32Z
9824,PRR_kwDOCCum185qRlm4,yyx990803,CHANGES_REQUESTED,,2023-12-15T01:23:42Z
9824,PRR_kwDOCCum185qRoxu,Alfred-Skyblue,COMMENTED,,2023-12-15T01:44:57Z
9837,PRR_kwDOCCum185qTBSD,LinusBorg,APPROVED,,2023-12-15T08:45:26Z
9839,PRR_kwDOCCum185qZvsB,yyx990803,COMMENTED,,2023-12-16T05:44:27Z
9863,PRR_kwDOCCum185qiNyg,huang-julien,COMMENTED,"Running it locally, It fixes https://github.com/vuejs/core/issues/9853 :) thank you ",2023-12-18T17:00:41Z
9888,PRR_kwDOCCum185q4Lc3,baiwusanyu-c,APPROVED,,2023-12-21T14:44:31Z
9889,PRR_kwDOCCum185q5sv3,sxzz,APPROVED,,2023-12-21T18:52:40Z
9892,PRR_kwDOCCum185q8tlo,sxzz,APPROVED,,2023-12-22T10:38:37Z
9892,PRR_kwDOCCum185q8t5e,sxzz,APPROVED,,2023-12-22T10:39:44Z
9894,PRR_kwDOCCum185rDiwa,haoqunjiang,CHANGES_REQUESTED,,2023-12-26T06:24:53Z
9894,PRR_kwDOCCum185whfmS,haoqunjiang,APPROVED,,2024-02-19T08:33:27Z
9920,PRR_kwDOCCum185rDcr6,johnsoncodehk,APPROVED,,2023-12-26T05:34:40Z
9927,PRR_kwDOCCum185zYTrv,sxzz,COMMENTED,,2024-03-14T06:00:01Z
9927,PRR_kwDOCCum185zbWCv,LittleSound,COMMENTED,"Kevin suggested that I move the types and enums related to scheduler in `baseWatch` into a separate file in reactivity, hence this Commit.",2024-03-14T12:40:00Z
9927,PRR_kwDOCCum186E8fSR,sxzz,COMMENTED,,2024-08-09T15:09:28Z
9928,PRR_kwDOCCum185rPpVg,yyx990803,COMMENTED,,2023-12-30T00:42:04Z
9937,PRR_kwDOCCum185rN_NH,pikax,COMMENTED,,2023-12-29T11:01:28Z
9937,PRR_kwDOCCum185rPqJr,edison1105,COMMENTED,,2023-12-30T01:20:08Z
9938,PRR_kwDOCCum185rgbAG,haoqunjiang,APPROVED,,2024-01-04T08:01:28Z
9952,PRR_kwDOCCum185rYwtt,yyx990803,CHANGES_REQUESTED,,2024-01-03T09:34:53Z
9952,PRR_kwDOCCum185rY7mJ,Alfred-Skyblue,COMMENTED,,2024-01-03T10:02:45Z
9961,PRR_kwDOCCum185rYl2g,yyx990803,COMMENTED,,2024-01-03T09:05:54Z
9961,PRR_kwDOCCum185rYqi7,edison1105,COMMENTED,,2024-01-03T09:18:42Z
9983,PRR_kwDOCCum185rfJRU,baiwusanyu-c,APPROVED,,2024-01-04T01:56:24Z
9989,PRR_kwDOCCum185rvUh5,sxzz,APPROVED,,2024-01-06T19:23:29Z
9999,PRR_kwDOCCum185rmY_f,edison1105,COMMENTED,,2024-01-05T01:13:51Z
10034,PRR_kwDOCCum185r1cXt,baiwusanyu-c,APPROVED,,2024-01-08T14:01:15Z
10041,PRR_kwDOCCum185r51iV,skirtles-code,COMMENTED,,2024-01-09T02:44:28Z
10123,PRR_kwDOCCum185sn-WP,Doctor-wu,COMMENTED,,2024-01-16T01:59:35Z
10123,PRR_kwDOCCum185soQII,johnsoncodehk,COMMENTED,,2024-01-16T04:04:10Z
10123,PRR_kwDOCCum185soRJF,Doctor-wu,COMMENTED,,2024-01-16T04:11:10Z
10123,PRR_kwDOCCum185soS4u,johnsoncodehk,COMMENTED,,2024-01-16T04:23:47Z
10126,PRR_kwDOCCum185s8RZp,sxzz,APPROVED,,2024-01-17T16:45:35Z
10147,PRR_kwDOCCum185vuIM0,sxzz,APPROVED,,2024-02-11T12:50:47Z
10155,PRR_kwDOCCum1858_zqy,skirtles-code,COMMENTED,,2024-06-04T18:14:52Z
10164,PRR_kwDOCCum185vISKl,haoqunjiang,CHANGES_REQUESTED,,2024-02-06T07:29:20Z
10164,PRR_kwDOCCum185vTz8y,sxzz,COMMENTED,,2024-02-07T10:31:46Z
10164,PRR_kwDOCCum185vVTHL,haoqunjiang,COMMENTED,,2024-02-07T13:46:35Z
10164,PRR_kwDOCCum185wF_oP,haoqunjiang,APPROVED,,2024-02-14T15:33:47Z
10173,PRR_kwDOCCum185tajPZ,sxzz,APPROVED,,2024-01-22T05:41:23Z
10186,PRR_kwDOCCum185wpApI,haoqunjiang,APPROVED,,2024-02-20T08:48:13Z
10187,PRR_kwDOCCum185tjrO4,Doctor-wu,COMMENTED,,2024-01-23T08:01:01Z
10187,PRR_kwDOCCum185tjuHQ,Doctor-wu,COMMENTED,,2024-01-23T08:08:23Z
10187,PRR_kwDOCCum185tjy3w,johnsoncodehk,COMMENTED,,2024-01-23T08:19:46Z
10200,PRR_kwDOCCum185tzG5e,LinusBorg,COMMENTED,,2024-01-24T18:32:45Z
10200,PRR_kwDOCCum185t1ZtZ,Doctor-wu,COMMENTED,,2024-01-25T02:08:53Z
10250,PRR_kwDOCCum185uk__W,edison1105,COMMENTED,,2024-02-01T01:28:13Z
10250,PRR_kwDOCCum185ulfEl,edison1105,COMMENTED,,2024-02-01T03:39:14Z
10299,PRR_kwDOCCum185vkcen,johnsoncodehk,APPROVED,,2024-02-09T07:53:23Z
10299,PRR_kwDOCCum185vuHbh,sxzz,COMMENTED,,2024-02-11T12:34:25Z
10299,PRR_kwDOCCum185vuHeZ,Doctor-wu,COMMENTED,,2024-02-11T12:35:35Z
10299,PRR_kwDOCCum185vuH6G,sxzz,APPROVED,,2024-02-11T12:43:36Z
10306,PRR_kwDOCCum185vqdmO,sxzz,APPROVED,,2024-02-10T05:00:56Z
10310,PRR_kwDOCCum185vrV27,sxzz,COMMENTED,,2024-02-10T12:20:59Z
10315,PRR_kwDOCCum185vuHWy,sxzz,APPROVED,"LGTM, decrased 9 bytes of bundle size",2024-02-11T12:32:39Z
10337,PRR_kwDOCCum185wK6SN,jacekkarczmarczyk,COMMENTED,,2024-02-15T06:34:14Z
10337,PRR_kwDOCCum185wK_0Z,OnlyWick,COMMENTED,,2024-02-15T06:54:24Z
10337,PRR_kwDOCCum185wLAYG,jacekkarczmarczyk,COMMENTED,,2024-02-15T06:56:25Z
10337,PRR_kwDOCCum185wLBpe,OnlyWick,COMMENTED,,2024-02-15T07:00:28Z
10358,PRR_kwDOCCum185zzIob,sxzz,APPROVED,,2024-03-18T12:11:11Z
10359,PRR_kwDOCCum185whjPd,haoqunjiang,APPROVED,,2024-02-19T08:41:15Z
10367,PRR_kwDOCCum185wrArj,sxzz,COMMENTED,,2024-02-20T12:37:15Z
10367,PRR_kwDOCCum185wrDdw,OnlyWick,COMMENTED,,2024-02-20T12:43:20Z
10367,PRR_kwDOCCum185x3rHf,OnlyWick,COMMENTED,,2024-03-01T06:48:59Z
10367,PRR_kwDOCCum185x3x6B,OnlyWick,COMMENTED,,2024-03-01T07:13:07Z
10367,PRR_kwDOCCum185x4NzL,sxzz,CHANGES_REQUESTED,"Looks like there are some irrelevant commits, you can run `git rebase origin/minor -i` to drop.",2024-03-01T08:19:56Z
10367,PRR_kwDOCCum185x5GxV,sxzz,COMMENTED,,2024-03-01T10:19:35Z
10367,PRR_kwDOCCum185x5ToY,OnlyWick,COMMENTED,,2024-03-01T10:45:04Z
10367,PRR_kwDOCCum185x5U_x,sxzz,COMMENTED,,2024-03-01T10:48:18Z
10367,PRR_kwDOCCum185x5WSX,OnlyWick,COMMENTED,,2024-03-01T10:51:19Z
10367,PRR_kwDOCCum185x5ZgZ,OnlyWick,COMMENTED,,2024-03-01T10:58:56Z
10367,PRR_kwDOCCum185x5bJo,sxzz,COMMENTED,,2024-03-01T11:02:54Z
10367,PRR_kwDOCCum185x5b9D,OnlyWick,COMMENTED,,2024-03-01T11:04:56Z
10367,PRR_kwDOCCum185x6u_p,sxzz,APPROVED,,2024-03-01T13:48:48Z
10397,PRR_kwDOCCum185xOcC2,OnlyWick,COMMENTED,,2024-02-25T06:03:51Z
10397,PRR_kwDOCCum185xOf8h,yyx990803,COMMENTED,,2024-02-25T08:19:11Z
10414,PRR_kwDOCCum185xY89X,Doctor-wu,COMMENTED,,2024-02-27T01:49:06Z
10414,PRR_kwDOCCum185xfOeo,haoqunjiang,COMMENTED,,2024-02-27T16:09:47Z
10414,PRR_kwDOCCum185xjirN,edison1105,COMMENTED,,2024-02-28T01:55:19Z
10414,PRR_kwDOCCum185xkOUp,haoqunjiang,COMMENTED,,2024-02-28T04:59:05Z
10414,PRR_kwDOCCum185xkgRy,edison1105,COMMENTED,,2024-02-28T06:12:05Z
10414,PRR_kwDOCCum185xkibm,haoqunjiang,APPROVED,,2024-02-28T06:20:28Z
10416,PRR_kwDOCCum185xbTSe,haoqunjiang,CHANGES_REQUESTED,,2024-02-27T09:28:28Z
10416,PRR_kwDOCCum185xdp3p,Doctor-wu,COMMENTED,,2024-02-27T14:04:07Z
10416,PRR_kwDOCCum185xe9VI,haoqunjiang,COMMENTED,,2024-02-27T15:47:16Z
10416,PRR_kwDOCCum185xf7FE,Doctor-wu,COMMENTED,,2024-02-27T17:02:19Z
10416,PRR_kwDOCCum185xkMHU,haoqunjiang,APPROVED,,2024-02-28T04:49:20Z
10416,PRR_kwDOCCum185xkZwM,baiwusanyu-c,APPROVED,,2024-02-28T05:44:57Z
10419,PRR_kwDOCCum185xkW9B,baiwusanyu-c,COMMENTED,,2024-02-28T05:32:12Z
10419,PRR_kwDOCCum185xkiZS,OnlyWick,COMMENTED,,2024-02-28T06:20:18Z
10443,PRR_kwDOCCum185yY-Cd,haoqunjiang,APPROVED,,2024-03-06T09:06:26Z
10443,PRR_kwDOCCum185yZAfr,baiwusanyu-c,APPROVED,,2024-03-06T09:08:46Z
10443,PRR_kwDOCCum185yZH54,sxzz,APPROVED,,2024-03-06T09:19:37Z
10450,PRR_kwDOCCum185y4gWg,haoqunjiang,APPROVED,,2024-03-11T10:05:04Z
10451,PRR_kwDOCCum185y4bpw,haoqunjiang,APPROVED,,2024-03-11T09:56:28Z
10457,PRR_kwDOCCum185yQa3g,yyx990803,CHANGES_REQUESTED,,2024-03-05T13:23:01Z
10464,PRR_kwDOCCum185yYfAG,baiwusanyu-c,APPROVED,,2024-03-06T08:11:30Z
10471,PRR_kwDOCCum185yuC-s,so1ve,COMMENTED,,2024-03-08T11:25:25Z
10472,PRR_kwDOCCum185zPrxY,haoqunjiang,CHANGES_REQUESTED,,2024-03-13T08:55:01Z
10472,PRR_kwDOCCum185zQJuB,baiwusanyu-c,COMMENTED,,2024-03-13T09:40:38Z
10472,PRR_kwDOCCum185zQZKL,haoqunjiang,COMMENTED,,2024-03-13T10:07:37Z
10472,PRR_kwDOCCum185zRcuu,haoqunjiang,APPROVED,,2024-03-13T12:12:12Z
10481,PRR_kwDOCCum185ys5gK,baiwusanyu-c,COMMENTED,,2024-03-08T08:44:32Z
10490,PRR_kwDOCCum185y4bOB,haoqunjiang,APPROVED,,2024-03-11T09:55:40Z
10491,PRR_kwDOCCum185y3eIx,haoqunjiang,APPROVED,,2024-03-11T08:07:45Z
10492,PRR_kwDOCCum185y3eju,haoqunjiang,APPROVED,,2024-03-11T08:08:46Z
10506,PRR_kwDOCCum185zPGsd,baiwusanyu-c,CHANGES_REQUESTED,,2024-03-13T07:32:25Z
10506,PRR_kwDOCCum185zPHV1,OnlyWick,COMMENTED,,2024-03-13T07:34:16Z
10506,PRR_kwDOCCum1853R72b,yyx990803,COMMENTED,,2024-04-15T13:54:31Z
10518,PRR_kwDOCCum185ziKkH,haoqunjiang,CHANGES_REQUESTED,,2024-03-15T08:16:50Z
10518,PRR_kwDOCCum185zk8kA,haoqunjiang,APPROVED,,2024-03-15T14:11:57Z
10522,PRR_kwDOCCum185zbM85,edison1105,CHANGES_REQUESTED,,2024-03-14T12:25:49Z
10522,PRR_kwDOCCum185zbV0R,Doctor-wu,COMMENTED,,2024-03-14T12:39:41Z
10522,PRR_kwDOCCum185zbWJm,edison1105,APPROVED,,2024-03-14T12:40:08Z
10522,PRR_kwDOCCum185zxrFn,baiwusanyu-c,APPROVED,,2024-03-18T09:30:30Z
10522,PRR_kwDOCCum1850fGFD,haoqunjiang,CHANGES_REQUESTED,,2024-03-22T09:16:14Z
10522,PRR_kwDOCCum1850ikt3,Doctor-wu,COMMENTED,,2024-03-22T16:14:14Z
10522,PRR_kwDOCCum1850pHOl,haoqunjiang,APPROVED,,2024-03-25T06:11:33Z
10537,PRR_kwDOCCum1850RUyj,baiwusanyu-c,APPROVED,,2024-03-21T03:33:31Z
10537,PRR_kwDOCCum1853-EYy,skirtles-code,COMMENTED,,2024-04-19T23:28:17Z
10537,PRR_kwDOCCum1854AfbV,edison1105,COMMENTED,,2024-04-21T13:01:37Z
10539,PRR_kwDOCCum185zwmsh,haoqunjiang,APPROVED,,2024-03-18T07:14:15Z
10540,PRR_kwDOCCum185zy3V3,haoqunjiang,APPROVED,,2024-03-18T11:38:36Z
10551,PRR_kwDOCCum1851eaOG,haoqunjiang,CHANGES_REQUESTED,,2024-04-01T08:32:04Z
10551,PRR_kwDOCCum1851e4ZX,haoqunjiang,APPROVED,,2024-04-01T10:17:02Z
10575,PRR_kwDOCCum1850nEc4,baiwusanyu-c,CHANGES_REQUESTED,,2024-03-23T15:51:53Z
10575,PRR_kwDOCCum1850nnV3,sxzz,COMMENTED,,2024-03-24T12:43:34Z
10575,PRR_kwDOCCum1850qa6U,wangyewei,COMMENTED,,2024-03-25T09:47:41Z
10576,PRR_kwDOCCum1850od-4,edison1105,COMMENTED,,2024-03-25T02:09:05Z
10576,PRR_kwDOCCum1850ohS5,yangxiuxiu1115,COMMENTED,,2024-03-25T02:30:40Z
10576,PRR_kwDOCCum1850ot1A,edison1105,COMMENTED,,2024-03-25T03:54:08Z
10576,PRR_kwDOCCum1850oxSU,yangxiuxiu1115,COMMENTED,,2024-03-25T04:19:15Z
10576,PRR_kwDOCCum1850pO5v,edison1105,COMMENTED,,2024-03-25T06:44:22Z
10576,PRR_kwDOCCum1850pQEU,yangxiuxiu1115,COMMENTED,,2024-03-25T06:49:24Z
10576,PRR_kwDOCCum1850xiJS,edison1105,COMMENTED,,2024-03-26T01:49:21Z
10576,PRR_kwDOCCum1850xq9k,yangxiuxiu1115,COMMENTED,,2024-03-26T02:28:41Z
10576,PRR_kwDOCCum1850xvL-,edison1105,APPROVED,,2024-03-26T02:51:26Z
10576,PRR_kwDOCCum1851M6oD,haoqunjiang,APPROVED,,2024-03-28T14:02:40Z
10580,PRR_kwDOCCum1850pWIa,haoqunjiang,APPROVED,,2024-03-25T07:10:45Z
10581,PRR_kwDOCCum1850pvUR,haoqunjiang,APPROVED,,2024-03-25T08:22:52Z
10582,PRR_kwDOCCum1850pTrT,haoqunjiang,APPROVED,,2024-03-25T07:03:23Z
10583,PRR_kwDOCCum1850pTJY,haoqunjiang,APPROVED,,2024-03-25T07:02:00Z
10585,PRR_kwDOCCum1850psw0,haoqunjiang,APPROVED,,2024-03-25T08:16:45Z
10586,PRR_kwDOCCum1850peAn,haoqunjiang,APPROVED,,2024-03-25T07:35:56Z
10599,PRR_kwDOCCum1851UivH,haoqunjiang,COMMENTED,,2024-03-29T11:09:13Z
10599,PRR_kwDOCCum1851Uwdl,brc-dd,COMMENTED,,2024-03-29T11:48:12Z
10599,PRR_kwDOCCum1851U-6z,haoqunjiang,APPROVED,,2024-03-29T12:15:22Z
10613,PRR_kwDOCCum1857U455,haoqunjiang,APPROVED,,2024-05-21T16:11:45Z
10621,PRR_kwDOCCum1851eP8d,haoqunjiang,APPROVED,,2024-04-01T08:19:55Z
10624,PRR_kwDOCCum1851gSGz,haoqunjiang,APPROVED,,2024-04-01T14:44:28Z
10625,PRR_kwDOCCum1851f9Sy,haoqunjiang,APPROVED,,2024-04-01T13:53:56Z
10627,PRR_kwDOCCum1851gUkL,haoqunjiang,APPROVED,,2024-04-01T14:51:00Z
10628,PRR_kwDOCCum1851f9J3,haoqunjiang,APPROVED,,2024-04-01T13:53:35Z
10637,PRR_kwDOCCum1852WCbN,haoqunjiang,CHANGES_REQUESTED,Could you add a test case in `resolveType.spec.ts`?,2024-04-08T05:48:38Z
10637,PRR_kwDOCCum1852WexX,shawfix,COMMENTED,,2024-04-08T07:10:11Z
10637,PRR_kwDOCCum1852XX1h,haoqunjiang,APPROVED,,2024-04-08T08:58:12Z
10637,PRR_kwDOCCum1852gI3H,edison1105,APPROVED,,2024-04-09T05:33:23Z
10658,PRR_kwDOCCum1852V7Fx,haoqunjiang,APPROVED,,2024-04-08T05:15:53Z
10659,PRR_kwDOCCum1852V7SR,haoqunjiang,APPROVED,,2024-04-08T05:16:48Z
10664,PRR_kwDOCCum1852fPzy,Alfred-Skyblue,APPROVED,,2024-04-09T00:52:31Z
10664,PRR_kwDOCCum1852fSAD,baiwusanyu-c,APPROVED,,2024-04-09T01:06:02Z
10664,PRR_kwDOCCum1852feVt,edison1105,COMMENTED,,2024-04-09T01:42:04Z
10706,PRR_kwDOCCum1853qRsK,marcosdissotti,COMMENTED,"💡Obs. At condition, context.scopes.vFor > 0 maybe interesting to add in a auxiliary variable, for exemple, const hasVFor = context.scopes.vFor > 0; or hasVForDirective.

I liked your suggestion ✌️",2024-04-18T00:02:13Z
10719,PRR_kwDOCCum1853ly8h,yyx990803,CHANGES_REQUESTED,,2024-04-17T15:37:00Z
10719,PRR_kwDOCCum1853mXMJ,yangxiuxiu1115,COMMENTED,,2024-04-17T16:31:12Z
10734,PRR_kwDOCCum1854DHV9,Justineo,COMMENTED,,2024-04-22T08:16:49Z
10734,PRR_kwDOCCum1858hoiH,sxzz,COMMENTED,,2024-05-30T19:10:43Z
10746,PRR_kwDOCCum1854Aj-M,VividLemon,COMMENTED,Lgtm,2024-04-21T13:46:38Z
10746,PRR_kwDOCCum1854Citq,yyx990803,COMMENTED,,2024-04-22T07:14:13Z
10746,PRR_kwDOCCum1854Cq2T,NathanFreeman,COMMENTED,,2024-04-22T07:29:51Z
10751,PRR_kwDOCCum1854BrV6,baiwusanyu-c,COMMENTED,LGTM,2024-04-22T03:37:31Z
10772,PRR_kwDOCCum1854Wy4V,haoqunjiang,APPROVED,,2024-04-24T08:31:50Z
10801,PRR_kwDOCCum1854xLM0,raymer,COMMENTED,,2024-04-27T03:24:35Z
10801,PRR_kwDOCCum1854xLQn,yyx990803,COMMENTED,,2024-04-27T03:26:54Z
10844,PRR_kwDOCCum1855lKWS,lukewarlow,COMMENTED,,2024-05-05T20:01:07Z
10844,PRR_kwDOCCum1855lN0w,lukewarlow,COMMENTED,,2024-05-05T20:55:25Z
10844,PRR_kwDOCCum1855qvwv,haoqunjiang,COMMENTED,,2024-05-06T16:56:03Z
10844,PRR_kwDOCCum1855qwU_,haoqunjiang,COMMENTED,,2024-05-06T16:57:25Z
10849,PRR_kwDOCCum1855TuDq,jacekkarczmarczyk,COMMENTED,,2024-05-02T09:04:10Z
10849,PRR_kwDOCCum1855TwbG,cexbrayat,COMMENTED,,2024-05-02T09:08:35Z
10856,PRR_kwDOCCum1855h_w1,yyx990803,CHANGES_REQUESTED,,2024-05-03T20:29:40Z
10856,PRR_kwDOCCum1855isCW,btea,COMMENTED,,2024-05-03T23:54:26Z
10856,PRR_kwDOCCum1855isLQ,btea,COMMENTED,,2024-05-03T23:56:24Z
10869,PRR_kwDOCCum1856nMSp,haoqunjiang,APPROVED,,2024-05-15T07:09:38Z
10869,PRR_kwDOCCum1856nU7W,haoqunjiang,COMMENTED,,2024-05-15T07:21:36Z
10869,PRR_kwDOCCum1856pyc7,jh-leong,COMMENTED,,2024-05-15T11:53:45Z
10891,PRR_kwDOCCum1856Qvq9,edison1105,APPROVED,,2024-05-11T13:56:03Z
10891,PRR_kwDOCCum1856ocYD,edison1105,APPROVED,,2024-05-15T09:19:29Z
10891,PRR_kwDOCCum1856okil,haoqunjiang,APPROVED,,2024-05-15T09:34:09Z
10891,PRR_kwDOCCum1857KG-M,haoqunjiang,CHANGES_REQUESTED,"Should update https://github.com/vuejs/core/blob/fd18ce70b1a260a2485c9cd7faa30193da4b79f5/packages/compiler-core/src/transforms/hoistStatic.ts#L174-L179 too

Otherwise the `hoistStatic` transform won't behave correctly for `math` blocks:
https://deploy-preview-10891--vue-sfc-playground.netlify.app/#eNp9Uk1v1DAQ/SvGlwXRrukHlyqNBKgScAAESFx8Ccls1q2/ZE/SVFH+e8dOdptKVS9R3nszz8/jGfkn77d9B/yKF7EOyiOLgJ0vpVXGu4BsZAF2bGK74AzbUOlGWmlrZyMyE1t2nfS3m6+gtWP/XNDNm807aQsx25ERAQTjdYVAiLFif1aOY26epkIQyqyyvkPWnxrXgL6WnHTJmcgGJJsK96xRkXweSP2vXX1HumoIwAfJZ5MIprKo6rgIZ4uQDIK7X9jzI5v4mK87o4RVORSCvmvOlufE2acu8aytMK58T5xbMap8WNnQL51/AJW1DitUzp4ORjOgeTbKtpQNYUCxR6OPd7tYh21Uv9CXy3AWIfbtInxcCYV4ftI8JHGcEmEKRpOdn0ms3omfcIz0zDvVbm+js7QhY+qWvHbGKw3hp0+2UfIrlpWkVbQF998zh6GDkwNf76G+e4G/jUPiJP8VIELoQfKjhlVoAWf55s8PGsxKpC3pNFW/Iv6G6HSXMs5lnzvbUOxVXU77Le85Tf9vvBkQbDxcKgVNlVOul5x2/8srV3+Ke7G9zH3STnx6BLxXEag=",2024-05-20T13:38:50Z
10891,PRR_kwDOCCum1857PETz,haoqunjiang,APPROVED,,2024-05-21T05:23:09Z
10891,PRR_kwDOCCum1858EseY,edison1105,APPROVED,,2024-05-28T01:46:10Z
10891,PRR_kwDOCCum1858ExLg,baiwusanyu-c,APPROVED,,2024-05-28T02:15:18Z
10893,PRR_kwDOCCum186Fo__M,edison1105,COMMENTED,,2024-08-16T07:35:16Z
10893,PRR_kwDOCCum186FsfAd,deleteme,COMMENTED,,2024-08-16T15:58:01Z
10893,PRR_kwDOCCum186FsvwQ,deleteme,COMMENTED,,2024-08-16T16:39:06Z
10893,PRR_kwDOCCum186FzHGp,edison1105,COMMENTED,,2024-08-19T07:10:43Z
10893,PRR_kwDOCCum186F3VTo,deleteme,COMMENTED,,2024-08-19T15:35:23Z
10893,PRR_kwDOCCum186F60oY,edison1105,COMMENTED,,2024-08-20T01:12:01Z
10893,PRR_kwDOCCum186F7BC-,deleteme,COMMENTED,,2024-08-20T02:09:56Z
10893,PRR_kwDOCCum186F7FJs,edison1105,COMMENTED,,2024-08-20T02:31:07Z
10893,PRR_kwDOCCum186F7FRh,edison1105,CHANGES_REQUESTED,,2024-08-20T02:31:48Z
10893,PRR_kwDOCCum186F7LJE,deleteme,COMMENTED,,2024-08-20T03:03:39Z
10893,PRR_kwDOCCum186F7NMe,edison1105,APPROVED,,2024-08-20T03:16:02Z
10908,PRR_kwDOCCum1857LIzX,quiteeasy,COMMENTED,,2024-05-20T15:54:14Z
10908,PRR_kwDOCCum1857OfrG,cyrilluce,COMMENTED,,2024-05-21T03:07:44Z
10912,PRR_kwDOCCum1856t54i,DamianGlowala,COMMENTED,,2024-05-15T19:36:52Z
10912,PRR_kwDOCCum1857p785,haoqunjiang,COMMENTED,,2024-05-23T17:13:35Z
10912,PRR_kwDOCCum1857tH3L,edison1105,COMMENTED,,2024-05-24T01:24:12Z
10912,PRR_kwDOCCum1857wMaU,haoqunjiang,APPROVED,,2024-05-24T08:32:14Z
10915,PRR_kwDOCCum1857LbHt,haoqunjiang,APPROVED,,2024-05-20T16:38:08Z
10919,PRR_kwDOCCum1858PopL,haoqunjiang,APPROVED,,2024-05-29T07:03:00Z
10919,PRR_kwDOCCum185_LXRr,yyx990803,COMMENTED,,2024-06-22T09:15:52Z
10923,PRR_kwDOCCum1856UOwS,haoqunjiang,APPROVED,,2024-05-13T09:09:07Z
10924,PRR_kwDOCCum1856UPew,haoqunjiang,APPROVED,,2024-05-13T09:10:28Z
10925,PRR_kwDOCCum1856XwwS,haoqunjiang,APPROVED,,2024-05-13T15:34:47Z
10926,PRR_kwDOCCum1856URHS,haoqunjiang,APPROVED,,2024-05-13T09:13:42Z
10938,PRR_kwDOCCum1856c2Ur,haoqunjiang,CHANGES_REQUESTED,,2024-05-14T06:20:31Z
10938,PRR_kwDOCCum1856dHjs,btea,COMMENTED,,2024-05-14T07:04:32Z
10938,PRR_kwDOCCum1856msCg,haoqunjiang,APPROVED,,2024-05-15T06:06:03Z
10938,PRR_kwDOCCum18569D6E,frsimond,COMMENTED,,2024-05-17T09:42:30Z
10939,PRR_kwDOCCum1857SzyH,quiteeasy,COMMENTED,check #10942 ,2024-05-21T12:42:20Z
10942,PRR_kwDOCCum1856eh1O,Doctor-wu,COMMENTED,,2024-05-14T09:35:00Z
10942,PRR_kwDOCCum1856gRAU,quiteeasy,COMMENTED,,2024-05-14T12:54:15Z
10942,PRR_kwDOCCum1857FU2v,skirtles-code,COMMENTED,,2024-05-19T05:07:12Z
10942,PRR_kwDOCCum1857FYau,quiteeasy,COMMENTED,,2024-05-19T07:09:25Z
10949,PRR_kwDOCCum1856o0AY,haoqunjiang,APPROVED,,2024-05-15T10:03:05Z
10959,PRR_kwDOCCum1856-wne,sxzz,APPROVED,,2024-05-17T12:28:22Z
10963,PRR_kwDOCCum18568uJz,haoqunjiang,APPROVED,,2024-05-17T09:05:52Z
10977,PRR_kwDOCCum1857FIBR,userquin,COMMENTED,,2024-05-18T19:21:57Z
10977,PRR_kwDOCCum1857FICY,userquin,COMMENTED,,2024-05-18T19:22:58Z
10977,PRR_kwDOCCum1857FIIH,userquin,COMMENTED,,2024-05-18T19:28:05Z
10980,PRR_kwDOCCum1857KH3L,haoqunjiang,APPROVED,,2024-05-20T13:40:35Z
10981,PRR_kwDOCCum1857KIyu,haoqunjiang,APPROVED,,2024-05-20T13:42:28Z
11005,PRR_kwDOCCum1857tJP3,edison1105,APPROVED,,2024-05-24T01:29:06Z
11011,PRR_kwDOCCum185757mW,sxzz,APPROVED,,2024-05-25T06:43:14Z
11011,PRR_kwDOCCum1857_qsd,haoqunjiang,APPROVED,,2024-05-27T08:15:36Z
11020,PRR_kwDOCCum1857_0WC,haoqunjiang,APPROVED,,2024-05-27T08:27:54Z
11023,PRR_kwDOCCum186NJZRS,edison1105,COMMENTED,,2024-10-15T03:15:35Z
11023,PRR_kwDOCCum186qfu3c,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (3)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/vnode.ts (1)</summary><blockquote>

`542-553`: **Properly propagating CSS variable updaters through the component tree**

The `updateUt` function ensures CSS variable updaters are correctly inherited from parent to child vnodes, which is essential for nested teleport scenarios.



Consider using optional chaining to make the code more concise:

```diff
-function updateUt(vnode: VNode) {
-  if (vnode.ctx && vnode.ctx.parent && vnode.ctx.parent.ut) {
+function updateUt(vnode: VNode) {
+  if (vnode.ctx?.parent?.ut) {
```

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 543-543: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</blockquote></details>
<details>
<summary>packages/runtime-core/src/components/Teleport.ts (1)</summary><blockquote>

`500-510`: **Refactored for multiple CSS variable owners**

The refactoring supports multiple CSS variable owners by iterating over an array of updaters, which is necessary for proper nested teleport functionality.



Consider using optional chaining for better readability:

```diff
-  if (ctx && ctx.ut) {
+  if (ctx?.ut) {
```

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 500-500: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</blockquote></details>
<details>
<summary>packages/runtime-dom/src/helpers/useCssVars.ts (1)</summary><blockquote>

`56-56`: **Consider optimizing to avoid unnecessary DOM updates.**

The function always updates teleported elements, even when there are no style variables being used, which could lead to unnecessary DOM operations.

Consider adding a check to avoid updates when no CSS variables are used:

```diff
- updateTeleports()
+ if (Object.keys(vars).length > 0) {
+   updateTeleports()
+ }
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 9fa787cfd2c8692a7051eabdc7e6496d4dc3c9b3 and db5a86bf70d791728162c374339ea4ba0b99bf5c.

</details>

<details>
<summary>📒 Files selected for processing (5)</summary>

* `packages/runtime-core/src/component.ts` (1 hunks)
* `packages/runtime-core/src/components/Teleport.ts` (1 hunks)
* `packages/runtime-core/src/vnode.ts` (2 hunks)
* `packages/runtime-dom/__tests__/helpers/useCssVars.spec.ts` (1 hunks)
* `packages/runtime-dom/src/helpers/useCssVars.ts` (2 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/runtime-core/src/vnode.ts</summary>

[error] 543-543: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>
<details>
<summary>packages/runtime-core/src/components/Teleport.ts</summary>

[error] 500-500: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</details>

<details>
<summary>🔇 Additional comments (8)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/component.ts (1)</summary>

`588-591`: **Improved CSS variable handling for nested teleports**

The change from a single updater function to an array of updater objects with UIDs enables proper CSS variable propagation through nested teleport components. This is a key part of the fix for issue #11022.

</details>
<details>
<summary>packages/runtime-dom/__tests__/helpers/useCssVars.spec.ts (1)</summary>

`279-310`: **Good test coverage for nested teleport CSS variable inheritance**

This test case properly validates that CSS variables defined in a parent component correctly propagate through nested teleport components. It effectively verifies the fix for issue #11022.

</details>
<details>
<summary>packages/runtime-core/src/vnode.ts (1)</summary>

`494-494`: **Strategic placement for updater inheritance**

Calling `updateUt` immediately after vnode creation but before children normalization ensures CSS variable updaters are properly inherited before any child components are processed.

</details>
<details>
<summary>packages/runtime-core/src/components/Teleport.ts (1)</summary>

`492-499`: **Improved node initialization outside conditionals**

Moving the node initialization outside the conditionals improves code clarity and avoids duplication.

</details>
<details>
<summary>packages/runtime-dom/src/helpers/useCssVars.ts (4)</summary>

`32-39`: **Improved structure for teleport updaters.**

The new object structure with a `uid` property and `update` method is a good enhancement that provides better context and identification for CSS variable updates in teleported content.

---

`40-40`: **Refactored to support multiple updaters.**

The change from a single updater function to an array of updater objects enables proper handling of nested Teleport components, allowing each level to maintain its own CSS variable context.

---

`36-37`: **Improved teleported element selection.**

Using the `data-v-owner-${instance.uid}` attribute selector ensures CSS variables are correctly targeted to elements teleported by specific component instances, which is essential for nested Teleports.

---

`41-43`: <details>
<summary>✅ Verification successful</summary>

**Updated teleport update logic.**

The `updateTeleports` function now correctly iterates through all updaters, ensuring CSS variables are properly applied at all nesting levels.


Based on the PR discussions, there were concerns about deeply nested Teleport scenarios. Run this script to verify the implementation handles multiple levels of nesting:

---

🏁 Script executed:

```shell
#!/bin/bash
# Check if the code properly handles deeply nested teleports by examining the component.ts file
# to ensure proper propagation of updaters through the component hierarchy

# Check for updateUt implementation in vnode.ts
echo ""Checking vnode.ts for updateUt implementation:""
rg ""function updateUt"" -A 10

# Check how ut is passed between components in Teleport.ts
echo ""Checking Teleport.ts for ut handling:""
rg ""data-v-owner-"" -A 5 packages/runtime-core/src/components/Teleport.ts
```

Length of output: 1238

---



</details>

**Approve nested Teleport CSS variable update logic**

Verified that the `updateUt` implementation in `packages/runtime-core/src/vnode.ts` correctly propagates the `ut` (updater) context through component and Teleport vnodes, and the Teleport component in `packages/runtime-core/src/components/Teleport.ts` registers each updater for its nested content. The `updateTeleports` function in `packages/runtime-dom/src/helpers/useCssVars.ts` now iterates over all collected updaters, ensuring CSS variables are applied at every nesting level. No further changes required.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-22T09:18:14Z
11024,PRR_kwDOCCum1858AEdI,haoqunjiang,APPROVED,,2024-05-27T08:51:38Z
11049,PRR_kwDOCCum18580WE5,sxzz,APPROVED,"It looks like there's no broken usage, so we can safely upgrade the major version.",2024-06-03T14:46:18Z
11049,PRR_kwDOCCum18586-mh,haoqunjiang,APPROVED,,2024-06-04T09:23:15Z
11050,PRR_kwDOCCum1858qcZZ,sxzz,APPROVED,,2024-05-31T18:38:58Z
11056,PRR_kwDOCCum1859JFgP,haoqunjiang,APPROVED,,2024-06-05T15:20:36Z
11057,PRR_kwDOCCum1858yYbv,haoqunjiang,APPROVED,,2024-06-03T11:39:27Z
11058,PRR_kwDOCCum1858wFwZ,haoqunjiang,APPROVED,,2024-06-03T07:23:27Z
11064,PRR_kwDOCCum18585NCr,sxzz,APPROVED,,2024-06-04T05:50:02Z
11065,PRR_kwDOCCum18585NY4,sxzz,APPROVED,,2024-06-04T05:51:20Z
11066,PRR_kwDOCCum18588xJF,yyx990803,COMMENTED,,2024-06-04T12:52:45Z
11066,PRR_kwDOCCum18589TLS,edison1105,COMMENTED,,2024-06-04T13:40:15Z
11101,PRR_kwDOCCum1859j986,sxzz,APPROVED,,2024-06-10T04:07:53Z
11102,PRR_kwDOCCum1859j90n,sxzz,APPROVED,,2024-06-10T04:07:40Z
11105,PRR_kwDOCCum1859tRrr,edison1105,APPROVED,,2024-06-11T01:03:59Z
11105,PRR_kwDOCCum1859u3OA,haoqunjiang,APPROVED,,2024-06-11T06:19:44Z
11114,PRR_kwDOCCum18591_C8,sxzz,APPROVED,,2024-06-11T19:40:19Z
11124,PRR_kwDOCCum185-OYk-,haoqunjiang,APPROVED,,2024-06-14T07:35:17Z
11132,PRR_kwDOCCum185-OrGE,yyx990803,COMMENTED,,2024-06-14T08:11:01Z
11132,PRR_kwDOCCum185-PM84,lzl0304,COMMENTED,,2024-06-14T09:18:54Z
11145,PRR_kwDOCCum185-ZEul,skirtles-code,COMMENTED,,2024-06-15T15:03:30Z
11145,PRR_kwDOCCum185-ZFzy,jh-leong,COMMENTED,,2024-06-15T15:12:29Z
11146,PRR_kwDOCCum185-fpZs,kermanx,COMMENTED,Should this also be added to https://github.com/vuejs/core/blob/main/packages/runtime-core/src/index.ts#L63?,2024-06-17T08:24:33Z
11152,PRR_kwDOCCum185-d-kG,sxzz,APPROVED,,2024-06-17T03:43:32Z
11153,PRR_kwDOCCum185-d-je,sxzz,APPROVED,,2024-06-17T03:43:29Z
11154,PRR_kwDOCCum185-eCJa,sxzz,APPROVED,,2024-06-17T03:55:33Z
11156,PRR_kwDOCCum185-d-lo,sxzz,APPROVED,,2024-06-17T03:43:43Z
11157,PRR_kwDOCCum185-d-qC,sxzz,APPROVED,,2024-06-17T03:44:17Z
11160,PRR_kwDOCCum185-w3ja,skirtles-code,COMMENTED,,2024-06-18T23:47:43Z
11160,PRR_kwDOCCum185-x0Oc,leemotive,COMMENTED,,2024-06-19T04:44:54Z
11165,PRR_kwDOCCum185-9F_K,LinusBorg,APPROVED,,2024-06-20T09:37:34Z
11170,PRR_kwDOCCum185-tmJj,Doctor-wu,APPROVED,,2024-06-18T15:43:43Z
11171,PRR_kwDOCCum185-2OVW,edison1105,CHANGES_REQUESTED,,2024-06-19T12:28:36Z
11171,PRR_kwDOCCum185-2znL,jh-leong,COMMENTED,,2024-06-19T13:30:06Z
11173,PRR_kwDOCCum185-9GQ7,LinusBorg,APPROVED,,2024-06-20T09:38:07Z
11203,PRR_kwDOCCum185_NpUW,sxzz,APPROVED,,2024-06-23T13:43:31Z
11204,PRR_kwDOCCum185_ODUv,sxzz,APPROVED,,2024-06-23T19:00:32Z
11212,PRR_kwDOCCum185_Q8fU,sxzz,APPROVED,,2024-06-24T09:07:18Z
11223,PRR_kwDOCCum186AC59-,sxzz,APPROVED,,2024-06-28T14:53:22Z
11235,PRR_kwDOCCum186E44lx,edison1105,COMMENTED,,2024-08-09T07:19:19Z
11235,PRR_kwDOCCum186E443q,edison1105,COMMENTED,,2024-08-09T07:19:44Z
11235,PRR_kwDOCCum186E5T0i,linzhe141,COMMENTED,,2024-08-09T08:11:45Z
11235,PRR_kwDOCCum186KHRfO,edison1105,APPROVED,,2024-09-20T03:36:09Z
11248,PRR_kwDOCCum186BUNuK,antfu,APPROVED,,2024-07-10T15:43:19Z
11278,PRR_kwDOCCum186AYlxY,Maxim-Mazurok,COMMENTED,Might be a good idea to add some tests to avoid regression in the future,2024-07-02T13:57:48Z
11278,PRR_kwDOCCum186AsMB2,Maxim-Mazurok,COMMENTED,"Tests are looking awesome 👍

I wonder: will this new logic affect any use-cases where someone would try to pass `undefined` as a prop value? Or if they omit the prop. Will it make it `false` where `undefined` was expected previously? Basically don't want to be too selfish with only solving my use-case with Boolean prop, maybe should think about other cases as well. On other hand I'd expect some tests to fail if that was the problem, so maybe we're good...",2024-07-04T14:30:53Z
11323,PRR_kwDOCCum186HAFRc,edison1105,COMMENTED,,2024-08-28T02:49:32Z
11335,PRR_kwDOCCum186BqYYK,jcbond92,COMMENTED,,2024-07-12T17:14:00Z
11349,PRR_kwDOCCum186Btudx,edison1105,APPROVED,,2024-07-13T12:47:37Z
11364,PRR_kwDOCCum186BzrGZ,yyx990803,COMMENTED,,2024-07-15T14:00:48Z
11364,PRR_kwDOCCum186Bzyky,negezor,COMMENTED,,2024-07-15T14:12:48Z
11369,PRR_kwDOCCum186CE3kE,yyx990803,CHANGES_REQUESTED,Could you please add a test case for this?,2024-07-17T08:52:05Z
11369,PRR_kwDOCCum186FEHXv,edison1105,APPROVED,,2024-08-12T09:20:50Z
11389,PRR_kwDOCCum186CQCl7,edison1105,CHANGES_REQUESTED,,2024-07-18T09:32:35Z
11389,PRR_kwDOCCum186CQDea,phk422,COMMENTED,,2024-07-18T09:34:15Z
11399,PRR_kwDOCCum186Cjddj,skirtles-code,COMMENTED,,2024-07-21T13:27:38Z
11399,PRR_kwDOCCum186CjjRP,linzhe141,COMMENTED,,2024-07-21T15:31:35Z
11399,PRR_kwDOCCum186M2yAy,skirtles-code,COMMENTED,"I think there's a lot of redundancy in this implementation that can be removed by taking a similar approach to `createIterableMethod`. Specifically:

- The `method` argument for `createSetProtoMethod` should just be a string, rather than a `TriggerOpTypes`.
- I don't think we need to add any new values to `TriggerOpTypes` for this, they're just string method names.
- Much like for `iteratorMethods`, I think these can all be added in a loop, rather than duplicating all the code for each method.

The refactoring in #12152 reduced the amount of duplication in `createInstrumentations`. Once the latest `main` is merged into this branch it shouldn't be necessary to repeat the logic 4 times",2024-10-11T16:19:00Z
11403,PRR_kwDOCCum186CYs-E,edison1105,APPROVED,,2024-07-19T07:18:56Z
11404,PRR_kwDOCCum186JTpx9,NiklasBeierl,COMMENTED,,2024-09-13T16:59:54Z
11404,PRR_kwDOCCum186JWWoi,yyx990803,COMMENTED,,2024-09-14T01:00:51Z
11404,PRR_kwDOCCum186JWrkQ,NiklasBeierl,COMMENTED,,2024-09-14T10:34:50Z
11404,PRR_kwDOCCum186KVtE3,adamdehaven,COMMENTED,,2024-09-22T23:32:32Z
11404,PRR_kwDOCCum186KXKbN,NiklasBeierl,COMMENTED,,2024-09-23T07:31:24Z
11413,PRR_kwDOCCum186DMrBU,NukeJS,COMMENTED,,2024-07-26T07:34:05Z
11428,PRR_kwDOCCum186Il8gl,yyx990803,COMMENTED,,2024-09-10T07:53:09Z
11430,PRR_kwDOCCum186C9Kfq,yyx990803,COMMENTED,,2024-07-24T15:24:59Z
11438,PRR_kwDOCCum186DLbIm,edison1105,COMMENTED,,2024-07-26T02:36:56Z
11438,PRR_kwDOCCum186DLc2p,linzhe141,COMMENTED,,2024-07-26T02:47:30Z
11438,PRR_kwDOCCum186DLiXm,linzhe141,COMMENTED,,2024-07-26T03:23:10Z
11438,PRR_kwDOCCum186DbWg7,edison1105,COMMENTED,,2024-07-29T13:29:54Z
11449,PRR_kwDOCCum186Dahqq,sxzz,APPROVED,,2024-07-29T12:17:59Z
11450,PRR_kwDOCCum186DXlfZ,sxzz,APPROVED,,2024-07-29T06:03:34Z
11458,PRR_kwDOCCum186Dj1mW,edison1105,COMMENTED,,2024-07-30T09:45:41Z
11458,PRR_kwDOCCum186DkVW5,skirtles-code,COMMENTED,"Should strategies be provided with a way to do tear down logic? e.g. If an async component is removed before it is hydrated, the strategy may need to remove listeners on `document`, or watchers on a store.",2024-07-30T10:47:59Z
11458,PRR_kwDOCCum186DmNqy,baiwusanyu-c,COMMENTED,,2024-07-30T14:16:59Z
11458,PRR_kwDOCCum186DmQv4,yyx990803,COMMENTED,,2024-07-30T14:20:16Z
11478,PRR_kwDOCCum186FnHBo,edison1105,CHANGES_REQUESTED,,2024-08-16T01:40:23Z
11478,PRR_kwDOCCum186Fq7-9,Procrustes5,COMMENTED,,2024-08-16T12:38:07Z
11478,PRR_kwDOCCum186F7OKO,edison1105,COMMENTED,,2024-08-20T03:21:42Z
11478,PRR_kwDOCCum186F7ccS,Procrustes5,COMMENTED,,2024-08-20T04:39:40Z
11478,PRR_kwDOCCum186GE5pZ,edison1105,COMMENTED,,2024-08-21T02:03:34Z
11478,PRR_kwDOCCum186GqkHr,Procrustes5,COMMENTED,,2024-08-25T14:28:19Z
11478,PRR_kwDOCCum186GrJPD,edison1105,COMMENTED,,2024-08-26T00:52:18Z
11478,PRR_kwDOCCum186GrPB3,Procrustes5,COMMENTED,,2024-08-26T01:25:46Z
11478,PRR_kwDOCCum186Gr70h,edison1105,COMMENTED,,2024-08-26T03:42:14Z
11478,PRR_kwDOCCum186GsYak,Procrustes5,COMMENTED,,2024-08-26T05:33:39Z
11478,PRR_kwDOCCum186MGOPp,Procrustes5,COMMENTED,,2024-10-06T02:13:31Z
11491,PRR_kwDOCCum186EVf_P,edison1105,COMMENTED,,2024-08-06T04:00:10Z
11491,PRR_kwDOCCum186EYLKU,nieyuyao,COMMENTED,,2024-08-06T10:38:12Z
11491,PRR_kwDOCCum186EeWKk,edison1105,APPROVED,,2024-08-07T03:07:52Z
11496,PRR_kwDOCCum186EMrfx,edison1105,APPROVED,,2024-08-05T02:31:24Z
11500,PRR_kwDOCCum186ENEIm,sxzz,APPROVED,,2024-08-05T05:08:28Z
11516,PRR_kwDOCCum186EQc_d,sxzz,COMMENTED,,2024-08-05T12:46:50Z
11516,PRR_kwDOCCum186EQi8R,yyx990803,COMMENTED,,2024-08-05T12:56:43Z
11516,PRR_kwDOCCum186EQpD3,davidmatter,COMMENTED,,2024-08-05T13:06:10Z
11517,PRR_kwDOCCum186NYCGV,boga001,COMMENTED,,2024-10-16T09:57:47Z
11517,PRR_kwDOCCum186XtoRq,Nicolas-Nmedia,COMMENTED,,2025-01-12T01:46:32Z
11517,PRR_kwDOCCum186XwRxy,boga001,COMMENTED,,2025-01-13T08:46:16Z
11520,PRR_kwDOCCum186Ey8fU,sxzz,COMMENTED,,2024-08-08T13:49:41Z
11527,PRR_kwDOCCum186EeC0f,edison1105,COMMENTED,,2024-08-07T01:20:51Z
11527,PRR_kwDOCCum186Eegwb,liuseen-l,COMMENTED,,2024-08-07T04:10:05Z
11527,PRR_kwDOCCum186Ee5j4,edison1105,APPROVED,,2024-08-07T05:57:51Z
11530,PRR_kwDOCCum186EbSB3,baiwusanyu-c,COMMENTED,,2024-08-06T16:15:38Z
11530,PRR_kwDOCCum186EbS2f,baiwusanyu-c,COMMENTED,,2024-08-06T16:17:19Z
11530,PRR_kwDOCCum186EbVa-,GalacticHypernova,COMMENTED,,2024-08-06T16:22:50Z
11530,PRR_kwDOCCum186EbWvh,GalacticHypernova,COMMENTED,,2024-08-06T16:25:36Z
11531,PRR_kwDOCCum186Ecte6,sxzz,COMMENTED,,2024-08-06T19:48:51Z
11535,PRR_kwDOCCum186EeL_x,edison1105,APPROVED,,2024-08-07T02:11:30Z
11540,PRR_kwDOCCum186EfKfj,edison1105,CHANGES_REQUESTED,,2024-08-07T06:42:57Z
11540,PRR_kwDOCCum186EfOoI,Mini-ghost,COMMENTED,,2024-08-07T06:53:11Z
11540,PRR_kwDOCCum186EfYc8,edison1105,COMMENTED,,2024-08-07T07:03:17Z
11540,PRR_kwDOCCum186EfY55,edison1105,APPROVED,,2024-08-07T07:03:36Z
11544,PRR_kwDOCCum186EoNpF,sxzz,COMMENTED,,2024-08-07T13:39:04Z
11544,PRR_kwDOCCum186EuJSL,edison1105,COMMENTED,,2024-08-08T02:00:03Z
11561,PRR_kwDOCCum186Eyexw,yyx990803,COMMENTED,,2024-08-08T13:09:45Z
11561,PRR_kwDOCCum186E3jEd,linzhe141,COMMENTED,,2024-08-09T02:00:35Z
11561,PRR_kwDOCCum186E3nBX,edison1105,COMMENTED,,2024-08-09T02:25:33Z
11561,PRR_kwDOCCum186E3ntj,linzhe141,COMMENTED,,2024-08-09T02:29:58Z
11561,PRR_kwDOCCum186E40M4,edison1105,APPROVED,,2024-08-09T07:12:46Z
11569,PRR_kwDOCCum186E3sC1,edison1105,CHANGES_REQUESTED,,2024-08-09T02:57:45Z
11569,PRR_kwDOCCum186E4nhU,Disservin,COMMENTED,,2024-08-09T06:50:00Z
11569,PRR_kwDOCCum186FnNcy,edison1105,COMMENTED,,2024-08-16T02:10:29Z
11569,PRR_kwDOCCum186Ft0GU,Disservin,COMMENTED,,2024-08-16T19:02:10Z
11569,PRR_kwDOCCum186FzVC7,edison1105,COMMENTED,,2024-08-19T07:43:48Z
11569,PRR_kwDOCCum186Fz0qe,Disservin,COMMENTED,,2024-08-19T08:42:17Z
11574,PRR_kwDOCCum186E8s60,Disservin,COMMENTED,You will need to rebase this to the current state of the minor branch this pr still includes some ci changes,2024-08-09T15:35:37Z
11581,PRR_kwDOCCum186FCJ9L,edison1105,APPROVED,,2024-08-12T00:58:06Z
11594,PRR_kwDOCCum186FGthE,s-rigaud,COMMENTED,,2024-08-12T14:00:42Z
11595,PRR_kwDOCCum186FK3Vv,edison1105,APPROVED,,2024-08-13T00:14:35Z
11597,PRR_kwDOCCum186FgJ7V,yyx990803,COMMENTED,,2024-08-15T06:31:27Z
11604,PRR_kwDOCCum186FV3sC,edison1105,CHANGES_REQUESTED,,2024-08-14T03:40:47Z
11609,PRR_kwDOCCum186FWSoo,edison1105,APPROVED,,2024-08-14T05:43:18Z
11616,PRR_kwDOCCum186FZ8Ps,marc-rosenau,COMMENTED,,2024-08-14T13:27:45Z
11616,PRR_kwDOCCum186FZ-r_,jh-leong,COMMENTED,,2024-08-14T13:31:03Z
11619,PRR_kwDOCCum186Ff4BA,edison1105,COMMENTED,,2024-08-15T05:33:52Z
11619,PRR_kwDOCCum186FgD8J,edison1105,CHANGES_REQUESTED,,2024-08-15T06:06:36Z
11619,PRR_kwDOCCum186Fh2nr,edison1105,APPROVED,,2024-08-15T12:09:12Z
11630,PRR_kwDOCCum186FoENI,edison1105,APPROVED,,2024-08-16T05:30:33Z
11632,PRR_kwDOCCum186Foisb,edison1105,APPROVED,,2024-08-16T06:28:26Z
11639,PRR_kwDOCCum186FyK-X,yyx990803,COMMENTED,"I don't think this optimization is really necessary, since the amount components with lazy hydration will unlikely be a number that would lead to noticeable performance issues.

There's also no clear data showing the difference between the cost of `ob.observe()` vs. manually checking whether something is in viewport via `getBoundingClientRect()`. My intuition is that the difference is negligible.

Side note: the implementation has an issue where the `return` doesn't actually break the `forEach` look so it will call the `hydrate` multiple times - but again, I don't think this optimization is even needed in the first place.",2024-08-19T02:31:59Z
11639,PRR_kwDOCCum186JEbYc,yyx990803,CHANGES_REQUESTED,,2024-09-12T08:48:49Z
11639,PRR_kwDOCCum186JFEjm,GalacticHypernova,COMMENTED,,2024-09-12T09:59:22Z
11639,PRR_kwDOCCum186JyyfV,GalacticHypernova,COMMENTED,,2024-09-18T06:54:35Z
11656,PRR_kwDOCCum186Fy5V4,edison1105,CHANGES_REQUESTED,,2024-08-19T06:32:48Z
11656,PRR_kwDOCCum186Fy7TT,Procrustes5,COMMENTED,,2024-08-19T06:38:53Z
11656,PRR_kwDOCCum186FzJZ4,edison1105,APPROVED,,2024-08-19T07:16:26Z
11657,PRR_kwDOCCum186F6nNr,edison1105,APPROVED,,2024-08-20T00:03:52Z
11661,PRR_kwDOCCum186Myq6g,skirtles-code,COMMENTED,The fix looks good to me. I've made some suggestions for the tests.,2024-10-11T07:04:00Z
11661,PRR_kwDOCCum186M3PTr,gcaaa31928,COMMENTED,,2024-10-11T17:36:00Z
11663,PRR_kwDOCCum186F7GMp,edison1105,APPROVED,,2024-08-20T02:37:03Z
11666,PRR_kwDOCCum186F9dlS,edison1105,COMMENTED,,2024-08-20T09:30:47Z
11668,PRR_kwDOCCum186F9bNp,edison1105,APPROVED,,2024-08-20T09:27:21Z
11668,PRR_kwDOCCum186GA9M_,sxzz,APPROVED,,2024-08-20T15:49:07Z
11675,PRR_kwDOCCum186GHrrQ,edison1105,APPROVED,,2024-08-21T08:35:29Z
11675,PRR_kwDOCCum186GIDVv,xieyuschen,COMMENTED,,2024-08-21T09:16:41Z
11675,PRR_kwDOCCum186GIdAa,edison1105,COMMENTED,,2024-08-21T10:03:26Z
11675,PRR_kwDOCCum186GIhid,xieyuschen,COMMENTED,,2024-08-21T10:11:14Z
11675,PRR_kwDOCCum186GI8S5,edison1105,COMMENTED,,2024-08-21T11:05:01Z
11675,PRR_kwDOCCum186GSLBD,xieyuschen,COMMENTED,,2024-08-22T02:21:54Z
11675,PRR_kwDOCCum186GSOae,yangxiuxiu1115,COMMENTED,,2024-08-22T02:27:22Z
11680,PRR_kwDOCCum186GQmBn,edison1105,CHANGES_REQUESTED,,2024-08-22T00:34:12Z
11680,PRR_kwDOCCum186GUh8p,edison1105,APPROVED,,2024-08-22T05:30:28Z
11690,PRR_kwDOCCum186Genv6,edison1105,COMMENTED,,2024-08-23T03:48:57Z
11690,PRR_kwDOCCum186GfhNf,edison1105,COMMENTED,,2024-08-23T05:49:15Z
11692,PRR_kwDOCCum186Gff_B,edison1105,COMMENTED,,2024-08-23T05:44:27Z
11693,PRR_kwDOCCum186Ggw1L,edison1105,COMMENTED,,2024-08-23T08:59:44Z
11693,PRR_kwDOCCum186Gg3VV,edison1105,COMMENTED,,2024-08-23T09:13:18Z
11694,PRR_kwDOCCum186Ggp03,edison1105,COMMENTED,,2024-08-23T08:45:39Z
11694,PRR_kwDOCCum186GgrWg,edison1105,COMMENTED,,2024-08-23T08:48:53Z
11718,PRR_kwDOCCum186G1NqN,edison1105,COMMENTED,,2024-08-27T04:45:44Z
11718,PRR_kwDOCCum186G1R-T,edison1105,COMMENTED,,2024-08-27T05:02:45Z
11718,PRR_kwDOCCum186G1WmK,linzhe141,COMMENTED,,2024-08-27T05:20:16Z
11722,PRR_kwDOCCum186G-2f8,edison1105,COMMENTED,,2024-08-27T23:08:28Z
11722,PRR_kwDOCCum186HAqfr,KazariEX,COMMENTED,,2024-08-28T04:18:50Z
11722,PRR_kwDOCCum186HBWq8,edison1105,COMMENTED,,2024-08-28T06:29:10Z
11722,PRR_kwDOCCum186HBeYl,KazariEX,COMMENTED,,2024-08-28T06:47:14Z
11722,PRR_kwDOCCum186HLMi3,yyx990803,COMMENTED,,2024-08-29T07:08:09Z
11723,PRR_kwDOCCum186G_Hrn,edison1105,APPROVED,,2024-08-28T00:24:09Z
11728,PRR_kwDOCCum186HBfAL,edison1105,COMMENTED,,2024-08-28T06:48:40Z
11728,PRR_kwDOCCum186HJ0X4,edison1105,COMMENTED,,2024-08-29T01:05:15Z
11728,PRR_kwDOCCum186HJ0bE,edison1105,COMMENTED,,2024-08-29T01:05:33Z
11731,PRR_kwDOCCum186HEiN4,edison1105,COMMENTED,,2024-08-28T12:28:04Z
11737,PRR_kwDOCCum186HKQ-g,edison1105,COMMENTED,,2024-08-29T03:35:32Z
11746,PRR_kwDOCCum186HWEF3,edison1105,APPROVED,,2024-08-30T00:45:33Z
11754,PRR_kwDOCCum186HZWl7,edison1105,APPROVED,,2024-08-30T08:27:43Z
11761,PRR_kwDOCCum186Hh9i5,edison1105,COMMENTED,,2024-08-31T11:04:10Z
11761,PRR_kwDOCCum186HiJpM,linzhe141,COMMENTED,,2024-08-31T14:41:40Z
11761,PRR_kwDOCCum186HjKOk,edison1105,COMMENTED,,2024-08-31T21:34:00Z
11761,PRR_kwDOCCum186HjVAr,linzhe141,COMMENTED,,2024-09-01T02:20:32Z
11778,PRR_kwDOCCum186H2ry_,edison1105,COMMENTED,,2024-09-04T07:45:24Z
11794,PRR_kwDOCCum186HxLH1,shaunakv1,COMMENTED,LGTM. Fixes the original issue,2024-09-03T15:37:03Z
11794,PRR_kwDOCCum186H0zcr,edison1105,APPROVED,,2024-09-04T01:28:23Z
11799,PRR_kwDOCCum186H00qU,edison1105,APPROVED,,2024-09-04T01:32:56Z
11810,PRR_kwDOCCum186IAY5n,baiwusanyu-c,COMMENTED,"I'm wondering if this usage is correct. The information given in the documentation seems to be more inclined to the ref binding string being passed as a parameter to useTemplateRef, rather than binding the return value of useTemplateRef to the ref attribute.
```
const inputRef = useTemplateRef('my-ref')
<input ref=""my-ref""/>
```
```
const inputRef = useTemplateRef('my-ref')
<input ref=""inputRef""/>
```

https://vuejs.org/guide/essentials/template-refs.html#accessing-the-refs

wdyt ? @edison1105 ",2024-09-05T04:00:38Z
11810,PRR_kwDOCCum186IA6Bz,edison1105,COMMENTED,,2024-09-05T06:14:00Z
11810,PRR_kwDOCCum186IA8wT,edison1105,COMMENTED,,2024-09-05T06:21:46Z
11810,PRR_kwDOCCum186IBAiS,edison1105,COMMENTED,,2024-09-05T06:31:36Z
11810,PRR_kwDOCCum186ICWk2,linzhe141,COMMENTED,,2024-09-05T09:04:33Z
11810,PRR_kwDOCCum186ICjpr,linzhe141,COMMENTED,,2024-09-05T09:26:47Z
11819,PRR_kwDOCCum186IBJNW,edison1105,COMMENTED,,2024-09-05T06:50:55Z
11819,PRR_kwDOCCum186IBJcM,edison1105,COMMENTED,,2024-09-05T06:51:27Z
11819,PRR_kwDOCCum186IBJnD,edison1105,CHANGES_REQUESTED,,2024-09-05T06:51:50Z
11819,PRR_kwDOCCum186IBNNH,edison1105,APPROVED,,2024-09-05T06:59:47Z
11833,PRR_kwDOCCum186IKsVC,edison1105,COMMENTED,,2024-09-06T03:09:55Z
11837,PRR_kwDOCCum186IMS4q,edison1105,COMMENTED,,2024-09-06T06:01:16Z
11837,PRR_kwDOCCum186INSqW,zhangenming,COMMENTED,,2024-09-06T07:27:01Z
11842,PRR_kwDOCCum186IOs4J,edison1105,COMMENTED,,2024-09-06T09:07:49Z
11842,PRR_kwDOCCum186IO1b9,btea,COMMENTED,,2024-09-06T09:14:02Z
11854,PRR_kwDOCCum186Iah24,edison1105,COMMENTED,,2024-09-09T00:58:26Z
11856,PRR_kwDOCCum186IZ_M4,edison1105,APPROVED,,2024-09-08T11:30:16Z
11861,PRR_kwDOCCum186IdMH_,edison1105,COMMENTED,,2024-09-09T09:17:55Z
11861,PRR_kwDOCCum186Iflr1,linzhe141,COMMENTED,,2024-09-09T13:48:11Z
11861,PRR_kwDOCCum186I1kLP,edison1105,COMMENTED,,2024-09-11T06:13:49Z
11864,PRR_kwDOCCum186IcZwv,skirtles-code,COMMENTED,"Could you add a test case for this?

Currently there's a typo in the PR title, `markRow`.",2024-09-09T08:10:42Z
11864,PRR_kwDOCCum186Icj_S,edison1105,COMMENTED,,2024-09-09T08:25:34Z
11864,PRR_kwDOCCum186IdEXG,edison1105,APPROVED,,2024-09-09T09:04:09Z
11883,PRR_kwDOCCum186IoscZ,edison1105,COMMENTED,,2024-09-10T12:51:18Z
11883,PRR_kwDOCCum186IoxpH,zh-lx,COMMENTED,,2024-09-10T12:56:32Z
11883,PRR_kwDOCCum186IparH,edison1105,COMMENTED,,2024-09-10T13:37:50Z
11890,PRR_kwDOCCum186JDBry,purepear,COMMENTED,,2024-09-12T05:48:22Z
11890,PRR_kwDOCCum186JDf9q,edison1105,COMMENTED,,2024-09-12T07:07:46Z
11899,PRR_kwDOCCum186JCXnR,edison1105,COMMENTED,,2024-09-12T02:31:04Z
11899,PRR_kwDOCCum186JC9uZ,edison1105,COMMENTED,,2024-09-12T05:34:08Z
11899,PRR_kwDOCCum186JC940,edison1105,COMMENTED,,2024-09-12T05:34:45Z
11899,PRR_kwDOCCum186JC-Py,edison1105,COMMENTED,,2024-09-12T05:36:07Z
11899,PRR_kwDOCCum186JPcU_,yyx990803,COMMENTED,,2024-09-13T08:51:28Z
11908,PRR_kwDOCCum186JFrCc,sxzz,APPROVED,,2024-09-12T11:02:05Z
11925,PRR_kwDOCCum186JUtec,deleteme,COMMENTED,,2024-09-13T19:15:28Z
11925,PRR_kwDOCCum186JUya0,deleteme,COMMENTED,,2024-09-13T19:19:49Z
11925,PRR_kwDOCCum186JWiTc,edison1105,COMMENTED,,2024-09-14T05:56:10Z
11931,PRR_kwDOCCum186JaI-p,sxzz,APPROVED,,2024-09-15T10:27:21Z
11931,PRR_kwDOCCum186JaM6l,edison1105,APPROVED,,2024-09-15T12:06:05Z
11935,PRR_kwDOCCum186JbhY0,yyx990803,CHANGES_REQUESTED,,2024-09-16T02:53:27Z
11935,PRR_kwDOCCum186JcbH9,GalacticHypernova,COMMENTED,,2024-09-16T07:37:07Z
11935,PRR_kwDOCCum186JcbUP,GalacticHypernova,COMMENTED,,2024-09-16T07:37:36Z
11935,PRR_kwDOCCum186JcfMD,edison1105,COMMENTED,,2024-09-16T07:46:54Z
11935,PRR_kwDOCCum186Jcfks,edison1105,COMMENTED,,2024-09-16T07:47:47Z
11935,PRR_kwDOCCum186Jckgw,GalacticHypernova,COMMENTED,,2024-09-16T07:58:25Z
11935,PRR_kwDOCCum186JcqxB,edison1105,COMMENTED,,2024-09-16T08:12:08Z
11935,PRR_kwDOCCum186JcsDi,GalacticHypernova,COMMENTED,,2024-09-16T08:14:59Z
11935,PRR_kwDOCCum186JxUUZ,yyx990803,CHANGES_REQUESTED,,2024-09-18T00:58:08Z
11935,PRR_kwDOCCum186JymFl,GalacticHypernova,COMMENTED,,2024-09-18T06:25:47Z
11935,PRR_kwDOCCum186JzMVp,GalacticHypernova,COMMENTED,,2024-09-18T07:47:58Z
11935,PRR_kwDOCCum186MLMi0,Hossein-Mirazimi,COMMENTED,,2024-10-07T12:00:39Z
11935,PRR_kwDOCCum186Mx5PK,yyx990803,APPROVED,,2024-10-11T03:19:47Z
11954,PRR_kwDOCCum186JyWll,edison1105,COMMENTED,,2024-09-18T05:47:54Z
11959,PRR_kwDOCCum186J7h-s,edison1105,COMMENTED,,2024-09-19T00:44:17Z
11959,PRR_kwDOCCum186J7jrR,edison1105,COMMENTED,,2024-09-19T00:47:06Z
11963,PRR_kwDOCCum186J1bvN,edison1105,APPROVED,,2024-09-18T12:05:38Z
11965,PRR_kwDOCCum186J1X7j,edison1105,COMMENTED,,2024-09-18T11:58:13Z
11967,PRR_kwDOCCum186J1yKa,antfu,APPROVED,,2024-09-18T12:44:40Z
11992,PRR_kwDOCCum186KRMY7,they-cloned-me,COMMENTED,,2024-09-21T14:02:34Z
11992,PRR_kwDOCCum186KRUKT,KazariEX,COMMENTED,,2024-09-21T14:13:12Z
11992,PRR_kwDOCCum186KRVt_,KazariEX,COMMENTED,,2024-09-21T14:16:10Z
11992,PRR_kwDOCCum186KR74g,edison1105,COMMENTED,,2024-09-22T02:18:58Z
11992,PRR_kwDOCCum186KVZ1_,edison1105,COMMENTED,,2024-09-22T14:31:09Z
11992,PRR_kwDOCCum186KWKQW,edison1105,COMMENTED,,2024-09-23T02:56:04Z
11997,PRR_kwDOCCum186KR8xB,yyx990803,COMMENTED,This results in quite a bit of duplication and doesn't seem to be worth it. `needsWrap` is already a boolean and the ternary operation is extremely fast. It would make more sense if `needsWrap` is an expensive call.,2024-09-22T03:17:44Z
12008,PRR_kwDOCCum186KgFm-,Cr0zy07,COMMENTED,I think #9675 is similar to this PR.,2024-09-23T23:04:15Z
12024,PRR_kwDOCCum186Kr_iX,edison1105,COMMENTED,,2024-09-25T01:31:08Z
12024,PRR_kwDOCCum186KsBcO,chenfan0,COMMENTED,,2024-09-25T01:40:33Z
12024,PRR_kwDOCCum186KsJpn,edison1105,COMMENTED,,2024-09-25T02:17:22Z
12024,PRR_kwDOCCum186Ksa9e,chenfan0,COMMENTED,,2024-09-25T03:33:04Z
12024,PRR_kwDOCCum186KteOr,edison1105,COMMENTED,,2024-09-25T06:18:26Z
12031,PRR_kwDOCCum186K6gSH,edison1105,COMMENTED,,2024-09-26T09:03:21Z
12031,PRR_kwDOCCum186K6ilc,Vanilagy,COMMENTED,,2024-09-26T09:07:16Z
12032,PRR_kwDOCCum186K3wAS,edison1105,COMMENTED,,2024-09-26T02:18:06Z
12032,PRR_kwDOCCum186K3wh4,edison1105,COMMENTED,,2024-09-26T02:20:47Z
12032,PRR_kwDOCCum186LCIB0,yyx990803,COMMENTED,,2024-09-27T01:25:53Z
12034,PRR_kwDOCCum186K36Vx,edison1105,COMMENTED,,2024-09-26T02:43:40Z
12034,PRR_kwDOCCum186K4ATe,yangliguo7,COMMENTED,,2024-09-26T02:51:31Z
12034,PRR_kwDOCCum186K4Bei,yangliguo7,COMMENTED,,2024-09-26T02:53:02Z
12034,PRR_kwDOCCum186K4FF3,edison1105,COMMENTED,,2024-09-26T02:57:52Z
12034,PRR_kwDOCCum186K4Gus,yangliguo7,COMMENTED,,2024-09-26T02:59:41Z
12034,PRR_kwDOCCum186K4O2I,yangliguo7,COMMENTED,,2024-09-26T03:34:14Z
12042,PRR_kwDOCCum186LD9rk,edison1105,COMMENTED,,2024-09-27T08:11:45Z
12042,PRR_kwDOCCum186LD91S,edison1105,COMMENTED,,2024-09-27T08:12:03Z
12042,PRR_kwDOCCum186LN_L_,edison1105,COMMENTED,,2024-09-29T05:35:33Z
12042,PRR_kwDOCCum186LN_M1,edison1105,COMMENTED,,2024-09-29T05:35:58Z
12042,PRR_kwDOCCum186LN_Qv,edison1105,COMMENTED,,2024-09-29T05:38:18Z
12042,PRR_kwDOCCum186apXzl,edison1105,COMMENTED,,2025-02-05T03:29:24Z
12042,PRR_kwDOCCum186ar3ZD,edison1105,COMMENTED,,2025-02-05T10:03:17Z
12047,PRR_kwDOCCum186LCGau,edison1105,COMMENTED,,2024-09-27T01:15:57Z
12063,PRR_kwDOCCum186LNOp6,edison1105,APPROVED,,2024-09-29T00:52:05Z
12064,PRR_kwDOCCum186LNPFR,edison1105,APPROVED,,2024-09-29T01:11:00Z
12069,PRR_kwDOCCum186LMgOV,skirtles-code,COMMENTED,,2024-09-28T16:21:29Z
12069,PRR_kwDOCCum186LNO4n,edison1105,COMMENTED,,2024-09-29T01:03:06Z
12069,PRR_kwDOCCum186LNO99,edison1105,COMMENTED,,2024-09-29T01:06:50Z
12069,PRR_kwDOCCum186LN-20,jh-leong,COMMENTED,,2024-09-29T05:24:21Z
12075,PRR_kwDOCCum186LPUY-,skirtles-code,COMMENTED,,2024-09-30T00:06:48Z
12075,PRR_kwDOCCum186LP_XY,jh-leong,COMMENTED,,2024-09-30T02:23:47Z
12075,PRR_kwDOCCum186LQOGI,jh-leong,COMMENTED,,2024-09-30T03:59:27Z
12103,PRR_kwDOCCum186OGXZ6,edison1105,COMMENTED,,2024-10-22T06:23:52Z
12108,PRR_kwDOCCum186L9rFR,jh-leong,COMMENTED,,2024-10-04T14:19:25Z
12108,PRR_kwDOCCum186L99t4,jh-leong,APPROVED,,2024-10-04T14:52:36Z
12113,PRR_kwDOCCum186MCjpI,edison1105,COMMENTED,,2024-10-05T03:48:41Z
12115,PRR_kwDOCCum186MHSEI,edison1105,COMMENTED,,2024-10-07T02:28:14Z
12128,PRR_kwDOCCum186MxvI8,yyx990803,COMMENTED,,2024-10-11T02:46:39Z
12135,PRR_kwDOCCum186Mpy-X,jh-leong,APPROVED,,2024-10-10T10:15:43Z
12141,PRR_kwDOCCum186q2kU9,skirtles-code,COMMENTED,,2025-05-24T21:12:20Z
12141,PRR_kwDOCCum186q3nP9,jh-leong,COMMENTED,,2025-05-25T02:14:28Z
12141,PRR_kwDOCCum186t-Fk4,skirtles-code,COMMENTED,"Looks good to me.

I was initially concerned about returning `true` when the `set` failed, I'm not sure whether that's technically correct. But we already do the same thing in `readonly()`, and in practice it does seem to do what we want.",2025-06-11T21:03:55Z
12146,PRR_kwDOCCum186MxSsf,edison1105,CHANGES_REQUESTED,,2024-10-11T01:15:27Z
12146,PRR_kwDOCCum186Myp3y,edison1105,APPROVED,,2024-10-11T07:01:09Z
12151,PRR_kwDOCCum186M0s0C,Anoesj,COMMENTED,,2024-10-11T11:48:52Z
12158,PRR_kwDOCCum186M5oPo,jh-leong,CHANGES_REQUESTED,,2024-10-12T14:09:43Z
12158,PRR_kwDOCCum186M5ogc,KazariEX,COMMENTED,,2024-10-12T14:16:50Z
12158,PRR_kwDOCCum186M5otL,jh-leong,COMMENTED,,2024-10-12T14:22:55Z
12158,PRR_kwDOCCum186M5oyG,KazariEX,COMMENTED,,2024-10-12T14:25:15Z
12182,PRR_kwDOCCum186NVt5E,ferferga,COMMENTED,Why can't we remove the last check to make this less redundant (we already have an oldInnerChild at the top level)?,2024-10-16T06:00:27Z
12182,PRR_kwDOCCum186NWwSB,ferferga,COMMENTED,"Good catch

* Regarding https://github.com/vuejs/core/issues/12181#issuecomment-2415927888, this fixes the problem and tests pass (at least locally).
* Given this is a really tiny change that could pass unnoticed in any refactor, I'd add a reference to the issue as a comment and even a test, I think it could be done with FinalizationRegistry. I could try later if you don't want to do it.

Sorry if my comments sometimes sound dumb or silly, I'm still learning about Vue's codebase.",2024-10-16T08:07:21Z
12182,PRR_kwDOCCum186NXVdE,edison1105,COMMENTED,,2024-10-16T09:01:31Z
12195,PRR_kwDOCCum186NldG9,edison1105,COMMENTED,,2024-10-17T14:20:02Z
12195,PRR_kwDOCCum186NmKyL,yangxiuxiu1115,COMMENTED,,2024-10-17T15:28:06Z
12195,PRR_kwDOCCum186NqZjH,edison1105,COMMENTED,,2024-10-18T01:09:20Z
12195,PRR_kwDOCCum186NrSjh,yangxiuxiu1115,COMMENTED,,2024-10-18T03:59:28Z
12195,PRR_kwDOCCum186NsvT0,edison1105,COMMENTED,,2024-10-18T07:59:18Z
12195,PRR_kwDOCCum186Nu4uz,yangxiuxiu1115,COMMENTED,,2024-10-18T11:54:31Z
12212,PRR_kwDOCCum186Nuts_,Justineo,COMMENTED,,2024-10-18T11:28:53Z
12212,PRR_kwDOCCum186NvIVR,jh-leong,COMMENTED,,2024-10-18T12:26:05Z
12212,PRR_kwDOCCum186NvM5i,Justineo,COMMENTED,,2024-10-18T12:34:47Z
12212,PRR_kwDOCCum186NxhBA,Justineo,COMMENTED,,2024-10-18T16:44:32Z
12212,PRR_kwDOCCum186N5cPi,ru44,COMMENTED,I think it's fine,2024-10-20T17:46:44Z
12212,PRR_kwDOCCum186OE7Cg,Justineo,APPROVED,,2024-10-22T02:58:15Z
12227,PRR_kwDOCCum186OE8ih,edison1105,APPROVED,,2024-10-22T03:06:14Z
12236,PRR_kwDOCCum186OQW8f,edison1105,COMMENTED,,2024-10-23T00:49:57Z
12236,PRR_kwDOCCum186OQZYu,thecodewarrior,COMMENTED,,2024-10-23T01:03:23Z
12236,PRR_kwDOCCum186OQZ8y,thecodewarrior,COMMENTED,,2024-10-23T01:06:23Z
12236,PRR_kwDOCCum186OQu0v,thecodewarrior,COMMENTED,,2024-10-23T02:09:28Z
12240,PRR_kwDOCCum186q3ngM,skirtles-code,COMMENTED,"There are a couple of existing PRs that seem to be trying to solve the same problem: #8539 and #7809. I'm not entirely sure which approach is best, perhaps a combination?",2025-05-25T02:23:58Z
12244,PRR_kwDOCCum186qJbwA,skirtles-code,COMMENTED,,2025-05-20T15:05:17Z
12244,PRR_kwDOCCum186qOTjE,edison1105,COMMENTED,,2025-05-21T00:25:16Z
12244,PRR_kwDOCCum186qvc82,skirtles-code,COMMENTED,,2025-05-23T14:08:13Z
12247,PRR_kwDOCCum186Ogn7F,johnsoncodehk,APPROVED,,2024-10-24T00:25:40Z
12249,PRR_kwDOCCum186OhclD,jh-leong,APPROVED,,2024-10-24T03:25:45Z
12255,PRR_kwDOCCum186OtVWT,edison1105,COMMENTED,,2024-10-25T06:00:08Z
12262,PRR_kwDOCCum186pFOZE,Doctor-wu,APPROVED,,2025-05-13T13:09:15Z
12268,PRR_kwDOCCum186O51Ic,edison1105,COMMENTED,,2024-10-27T12:44:12Z
12268,PRR_kwDOCCum186O_meW,tsiotska,COMMENTED,,2024-10-28T13:11:44Z
12293,PRR_kwDOCCum186PQHLd,edison1105,COMMENTED,,2024-10-30T01:23:44Z
12293,PRR_kwDOCCum186PQH8B,jacekkarczmarczyk,COMMENTED,,2024-10-30T01:27:04Z
12293,PRR_kwDOCCum186PQOtx,edison1105,COMMENTED,,2024-10-30T01:55:22Z
12293,PRR_kwDOCCum186PQPNM,jacekkarczmarczyk,COMMENTED,,2024-10-30T01:57:39Z
12293,PRR_kwDOCCum186PVUpw,leopiccionia,COMMENTED,,2024-10-30T12:39:18Z
12296,PRR_kwDOCCum186RTsjR,edison1105,APPROVED,,2024-11-15T07:29:14Z
12296,PRR_kwDOCCum186p6tPp,edison1105,APPROVED,,2025-05-19T13:16:48Z
12304,PRR_kwDOCCum186p9vKD,skirtles-code,COMMENTED,,2025-05-19T17:23:02Z
12308,PRR_kwDOCCum186rANyv,skirtles-code,COMMENTED,"This looks good to me.

Maybe it would be worth adding test cases for `0` too? It feels like something that could easily get broken without tests to catch it.",2025-05-26T17:57:28Z
12308,PRR_kwDOCCum186t6eGE,skirtles-code,COMMENTED,Looks good to me.,2025-06-11T15:47:30Z
12308,PRR_kwDOCCum186wAAdd,KazariEX,COMMENTED,,2025-06-24T08:49:08Z
12311,PRR_kwDOCCum186PxHbu,edison1105,COMMENTED,,2024-11-04T02:02:16Z
12311,PRR_kwDOCCum186P34uO,mefcorvi,COMMENTED,,2024-11-04T18:11:01Z
12311,PRR_kwDOCCum186P6YI-,edison1105,COMMENTED,,2024-11-05T01:14:50Z
12341,PRR_kwDOCCum186QPmEp,jh-leong,COMMENTED,,2024-11-07T05:51:31Z
12341,PRR_kwDOCCum186QPyi4,jh-leong,APPROVED,,2024-11-07T06:30:17Z
12341,PRR_kwDOCCum186QP0RC,jh-leong,COMMENTED,,2024-11-07T06:35:41Z
12341,PRR_kwDOCCum186QP2cS,edison1105,COMMENTED,,2024-11-07T06:42:57Z
12341,PRR_kwDOCCum186QP2gE,edison1105,COMMENTED,,2024-11-07T06:43:09Z
12341,PRR_kwDOCCum186ndmYQ,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (3)</summary><blockquote>

<details>
<summary>packages/reactivity/src/effect.ts (2)</summary><blockquote>

`41-53`: **Add succinct JSDoc for the new `EVALUATED` flag**

The semantics of the new bit are only implied by later usage.  A short inline comment (similar to the other flags) will make its purpose self-explanatory to future maintainers.

```diff
   PAUSED = 1 << 6,
+  /**
+   * Computed has executed at least once and produced a value.
+   * Used to skip redundant evaluations when it tracks no deps.
+   */
   EVALUATED = 1 << 7,
```

---

`385-394`: **Early-return condition is correct but hard to read – consider extracting helpers**

The triple-negated expression:

```ts
(!computed.deps && !(computed as any)._dirty) || !isDirty(computed)
```

is cognitively heavy and mixes two separate ideas (“no deps” vs “deps unchanged”).  
Creating small predicates such as `hasNoDeps(computed)` and `depsUnchanged(computed)` (or at least splitting the check across two `if` blocks) would improve clarity without affecting perf.

</blockquote></details>
<details>
<summary>packages/reactivity/__tests__/computed.spec.ts (1)</summary><blockquote>

`1015-1024`: **`async` keyword is unnecessary in this test**

The test body contains no `await`; marking it `async` only masks accidental un-awaited promises and slightly slows the runner.

```diff
-test('should not recompute if computed does not track reactive data', async () => {
+test('should not recompute if computed does not track reactive data', () => {
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**

<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 8b848cbbd2af337d23e19e202f9ab433f8580855 and 7eaa8fd637fa58dc1b425fd05ca6ca632ff58a13.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/reactivity/__tests__/computed.spec.ts` (1 hunks)
* `packages/reactivity/src/effect.ts` (3 hunks)

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/reactivity/src/effect.ts (1)</summary>

`394-418`: **`RUNNING` flag now set after the early return – verify re-entrancy in edge cases**

Moving `computed.flags |= RUNNING` below the new guard avoids polluting the stack for short-circuited calls, 👍.  
However, if a getter *with side-effects* clears its own `DIRTY` flag inside `prepareDeps`, there’s a theoretical chance of re-entrancy before `RUNNING` is set (because external code could synchronously access the same computed in the getter).  

That situation is rare but not impossible in user-space (e.g. self-mutating computeds).  
Consider adding a regression test or, at minimum, a comment explaining why re-entrancy before `RUNNING` is impossible with the current control flow.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-01T10:01:40Z
12354,PRR_kwDOCCum186QlzzL,sxzz,APPROVED,,2024-11-10T19:16:37Z
12373,PRR_kwDOCCum186Q9XA2,jh-leong,COMMENTED,,2024-11-13T06:28:25Z
12373,PRR_kwDOCCum186Q9btx,jh-leong,COMMENTED,,2024-11-13T06:35:55Z
12373,PRR_kwDOCCum186Q9jkp,edison1105,COMMENTED,,2024-11-13T06:45:41Z
12373,PRR_kwDOCCum186Q9nJs,edison1105,COMMENTED,,2024-11-13T06:54:12Z
12373,PRR_kwDOCCum186Q9nYN,jh-leong,APPROVED,,2024-11-13T06:54:53Z
12373,PRR_kwDOCCum186Q9occ,edison1105,COMMENTED,,2024-11-13T06:56:38Z
12373,PRR_kwDOCCum186REeG_,skirtles-code,COMMENTED,"I've posted a comment at https://github.com/vuejs/core/issues/12370#issuecomment-2474155561. I don't think it actually is a memory leak.

I'm not sure whether the use case presented on that issue is valid, but if I'm understanding correctly, the objective here is just to improve the teardown handling within `EffectScope`, so that the effects aren't retained after the scope is stopped.",2024-11-13T16:54:51Z
12373,PRR_kwDOCCum186RFJ0w,huodoushigemi,COMMENTED,,2024-11-13T17:56:43Z
12373,PRR_kwDOCCum186RH2XB,edison1105,COMMENTED,,2024-11-14T00:45:56Z
12373,PRR_kwDOCCum186RMtRy,danyadev,COMMENTED,,2024-11-14T13:03:08Z
12373,PRR_kwDOCCum186RN3IP,edison1105,COMMENTED,,2024-11-14T14:57:38Z
12393,PRR_kwDOCCum186RSViT,edison1105,COMMENTED,,2024-11-15T01:37:17Z
12393,PRR_kwDOCCum186RSVz1,edison1105,COMMENTED,,2024-11-15T01:38:44Z
12393,PRR_kwDOCCum186RTy2k,edison1105,COMMENTED,,2024-11-15T07:46:58Z
12393,PRR_kwDOCCum186RVHG1,shengxj1,COMMENTED,,2024-11-15T10:24:15Z
12394,PRR_kwDOCCum186RSSKq,edison1105,COMMENTED,,2024-11-15T01:21:59Z
12396,PRR_kwDOCCum186RSQWZ,edison1105,COMMENTED,,2024-11-15T01:12:22Z
12396,PRR_kwDOCCum186RSQrZ,edison1105,COMMENTED,,2024-11-15T01:14:09Z
12396,PRR_kwDOCCum186RhQbc,edison1105,COMMENTED,,2024-11-18T03:11:48Z
12406,PRR_kwDOCCum186RhV5k,edison1105,COMMENTED,,2024-11-18T03:40:17Z
12406,PRR_kwDOCCum186RhWsu,edison1105,COMMENTED,,2024-11-18T03:45:16Z
12406,PRR_kwDOCCum186Rhj0-,noootwo,COMMENTED,,2024-11-18T04:16:13Z
12406,PRR_kwDOCCum186Rh-ab,noootwo,COMMENTED,,2024-11-18T05:59:43Z
12409,PRR_kwDOCCum186RhXjP,edison1105,COMMENTED,,2024-11-18T03:50:10Z
12409,PRR_kwDOCCum186RhZPM,lejunyang,COMMENTED,,2024-11-18T03:57:49Z
12411,PRR_kwDOCCum186Ri7jt,edison1105,COMMENTED,,2024-11-18T08:34:28Z
12411,PRR_kwDOCCum186RmJLd,edison1105,APPROVED,,2024-11-18T13:54:51Z
12413,PRR_kwDOCCum186RiqrG,edison1105,COMMENTED,,2024-11-18T08:00:03Z
12413,PRR_kwDOCCum186Ri1hH,lejunyang,COMMENTED,,2024-11-18T08:22:29Z
12413,PRR_kwDOCCum186oklk1,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (5)</summary><blockquote>

<details>
<summary>packages/runtime-dom/__tests__/customElement.spec.ts (2)</summary><blockquote>

`167-176`: **Minor typing nit – return-type annotation**

`text: () => string` technically warns in strict TS because `string` here is a type, not a value.  
It still compiles due to contextual typing, but writing `text: () => string | undefined` (or omitting the annotation altogether) avoids the redundant type literal while keeping full type-safety.

```diff
-        text: () => props.msg,
+        text: () => props.msg,
```

The implementation is fine; this is just a cosmetic typing tip.

---

`190-203`: **Good move test – one follow-up idea**

The test currently covers parent context changes.  
Consider also asserting that the old parent’s context is no longer injected into the moved child (i.e. it doesn’t update when the old parent’s `msg` changes). This guards against stale provide/inject references.

</blockquote></details>
<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (3)</summary><blockquote>

`289-304`: **Parent-change re-mount logic is correct but can double-observe**

After `_unmount(true)` the former `MutationObserver` is still active.  
Because `_instance` is now `null`, the subsequent `if (!this._instance) this._observe()` re-invokes `observe()` on an already observing instance.  
While the spec silently replaces the previous options, it still costs an extra “disconnect+observe” cycle and can trigger redundant mutation records in certain polyfills.

```diff
-        // no instance means no observer
-        if (!this._instance) this._observe()
+        // restart observer only if it was disconnected by _unmount
+        if (!this._instance && !this._ob) this._observe()
```

---

`358-368`: **Observer helper extracted – small optimisation**

Nice extraction!  
Two quick wins:

1. You can pass `attributeFilter` to avoid receiving style/class changes that Vue never reflects.
2. In `_setProp` you reconnect the observer for every reflected write.  You can avoid the `disconnect/observe` round-trip when `shouldReflect` is `false`.

Not critical, but it avoids needless micro-tasks and reduces the mutation backlog in attribute-heavy components.



Also applies to: 544-545

---

`456-465`: **Configurable expose getters – 👍 with a caution**

Making the descriptors configurable fixes the deletion error.  
However, the else-branch silently drops conflicting exposed keys.  That can hide user mistakes at run-time.

Consider throwing (or at least warning in prod) so integrators discover the conflict early:

```diff
-        delete exposed[key]
-        if (__DEV__)
-          warn(`Exposed property ""${key}"" already exists on custom element.`)
+        delete exposed[key]
+        warn(
+          `Exposed property ""${key}"" conflicts with an existing property and ` +
+            `was ignored.  Rename the exposed property to avoid collisions.`,
+        )
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**

<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 5a5406d002f568e928489920d0dcc7086c808a8d and 6b52371d822fce7146588a02a1907df7b9c22f11.

</details>

<details>
<summary>📒 Files selected for processing (3)</summary>

* `packages/runtime-dom/__tests__/customElement.spec.ts` (1 hunks)
* `packages/runtime-dom/src/apiCustomElement.ts` (5 hunks)
* `packages/vue/__tests__/e2e/ssr-custom-element.spec.ts` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts</summary>

[error] 336-336: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/vue/__tests__/e2e/ssr-custom-element.spec.ts (1)</summary>

`112-112`: **Order-switch looks good**

Re-registering the parent (`my-p`) before the child (`my-y`) removes the race condition that caused the earlier hydration error – nice catch.

</details>
<details>
<summary>packages/runtime-dom/__tests__/customElement.spec.ts (1)</summary>

`150-188`: **Great coverage – verifies style & context after a full disconnect**

These assertions catch three common regressions:
1. exposed methods are cleared,
2. style sheets aren’t duplicated, and
3. re-insertion updates reactive context.

Nice work adding the double `nextTick()` to ensure the element is fully disconnected before re-mounting.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-09T12:40:35Z
12416,PRR_kwDOCCum186Rhb1k,edison1105,COMMENTED,,2024-11-18T03:59:35Z
12416,PRR_kwDOCCum186SZN6n,skirtles-code,COMMENTED,"I've been experimenting with this and I'm wondering about some apparent inconsistencies in how selectors are handled. For example:

- [Playground](https://deploy-preview-12416--vue-sfc-playground.netlify.app/#eNqVkstOwzAQRX/F8gKBBK2a1yJEkQBVCiwAActs0mRI0jqxZTulVdV/Z+I82gWK6Mo5M/dmHvaBPggx2zZAfRpoqARLNIRxTUhQLMJoEczx6NAKIwvR6tEOIxvR7tEJIwfR6dENIxfR7dELIw/RQwzmZ2UQld4zICrlAjKMrHi2J4fWVSy6k5BVkm5yyZs6u0s549InopGCwX2bPrZ/IcTPGV8l7Lqwbi6xXZHCvkw/FnL+Xch4zWCF23kmHCfxWMnrK027grlZJe6Q3lKNC62/y3y2VrzGuzX+mKa8EiUD+SZ0yWsVU3+YIaYJY/znxcS0bOB2iKcFpJs/4mu1a2MxfZegQG4hpmNOJzIH3aWXn6+ww+8xWfGsYaieSH6A4qxpe+xkjzgztn2mM90+V4JLXdb5l1ruNNRqGKpt1Czf6GOKD/xpYvRTu/bMGS6NHn8Bj9UEfA==)

The `background-color` is applied to some of the headings, but not others. It's not really clear to me what would be considered correct here, but I can't really justify the differences.",2024-11-23T00:47:31Z
12428,PRR_kwDOCCum186Rrycp,edison1105,APPROVED,,2024-11-19T02:48:18Z
12428,PRR_kwDOCCum186SXLrx,skirtles-code,COMMENTED,,2024-11-22T20:11:52Z
12431,PRR_kwDOCCum186Rk7Bc,ilyary,COMMENTED,,2024-11-18T11:36:30Z
12431,PRR_kwDOCCum186RlGc1,noootwo,COMMENTED,,2024-11-18T11:58:55Z
12431,PRR_kwDOCCum186Rli7I,noootwo,COMMENTED,,2024-11-18T12:52:57Z
12431,PRR_kwDOCCum186RlqB6,ilyary,COMMENTED,,2024-11-18T13:06:21Z
12431,PRR_kwDOCCum186tOCgr,skirtles-code,COMMENTED,"This fix looks reasonable to me, but I'd like to propose an alternative.

I think the underlying reason why this is happening is that JavaScript treats all property keys as either strings and symbols. Even for arrays, the numbers used as keys are treated as strings. e.g.:

```js
Object.keys([7, 8, 9]) // returns ['0', '1', '2']
```

When we go through a `Proxy`, the `key` passed to the trap will either be a string or a symbol. Any other value is coerced to a string before it's passed. e.g.:

```js
const p = new Proxy([], {
  get(target, key) {
    console.log(key, typeof key)
    return target[key]
  }
})

p[0]
```

This example is using a `Proxy` around an array, and `p[0]` triggers the trap with a string `key` of `""0""`.

But the coercion doesn't just apply to numbers, it applies to any value that isn't a string or symbol. For example, if you tried to use an array as a property key:

```js
p[[0]]
```

This would actually work, as `[0]` is coerced to the string `""0""`.

So the reactive `Proxy` wrappers used by Vue are passed `key` values that are either symbols or strings, nothing else. This carries across throughout dependency tracking, leading to strings in the dependency maps, even for arrays.

Collections (e.g. `Set`, `Map`, etc.) are different, as they can have other types of key, but as they aren't relevant to `toRef` I'm going to ignore them.

For the most part, Vue doesn't need to worry about ensuring the keys are coerced correctly, because that's already handled by JavaScript. It's only an issue when Vue gets passed a property name directly. An example of that is `hasOwnProperty`, see:

https://github.com/vuejs/core/blob/cdffaf6b9efce2c52635714e8e2d7480737c6b50/packages/reactivity/src/baseHandlers.ts#L43

There we need to coerce non-symbols to strings.

So I think the `toRef` problem is essentially the same underlying issue as #10455. We need to ensure we coerce non-symbol keys to strings. While the primary use case is for arrays, it also ensures that we don't hit any other weird edge cases, like the example I gave earlier where I passed an array as a key.

The fix I'd propose is something like this:

```ts
class ObjectRefImpl<T extends object, K extends keyof T> {
  public readonly [ReactiveFlags.IS_REF] = true
  public _value: T[K] = undefined!
  private readonly _key: K

  constructor(
    private readonly _object: T,
    key: K,
    private readonly _defaultValue?: T[K],
  ) {
    this._key = isSymbol(key) ? key : String(key) as K
  }
```

The important part is `isSymbol(key) ? key : String(key)`.

There may be a neater way to write that (I'm not entirely happy with the types), but I think this is a more appropriate place to handle the coercion. We could handle it further upstream, but this seemed more natural to me.

I tested this locally and it seemed to work. I think it's a more accurate fix and it also adds fewer bytes to the build.",2025-06-06T21:02:41Z
12441,PRR_kwDOCCum186R3WuK,copilot-pull-request-reviewer,COMMENTED,"Copilot reviewed 2 out of 2 changed files in this pull request and generated no suggestions.


",2024-11-20T02:21:47Z
12442,PRR_kwDOCCum186R3pbX,copilot-pull-request-reviewer,COMMENTED,"Copilot reviewed 2 out of 2 changed files in this pull request and generated no suggestions.

<details>
<summary>Comments skipped due to low confidence (1)</summary>

**packages/runtime-core/__tests__/hydration.spec.ts:2213**
* The variable name 'backGroundColor' is inconsistent with naming conventions. It should be renamed to 'backgroundColor'.
```
const backGroundColor = ref<any>(null)
```
</details>

",2024-11-20T03:44:29Z
12442,PRR_kwDOCCum186R3viU,edison1105,COMMENTED,,2024-11-20T03:56:57Z
12442,PRR_kwDOCCum186R38xO,Justineo,COMMENTED,,2024-11-20T04:31:03Z
12442,PRR_kwDOCCum186R4VHy,edison1105,COMMENTED,,2024-11-20T05:46:37Z
12442,PRR_kwDOCCum186R66qJ,edison1105,COMMENTED,,2024-11-20T10:05:25Z
12442,PRR_kwDOCCum186R8-C5,adamdehaven,COMMENTED,,2024-11-20T13:50:10Z
12442,PRR_kwDOCCum186SAEGK,Justineo,COMMENTED,,2024-11-20T19:13:34Z
12442,PRR_kwDOCCum186SOUUg,Justineo,COMMENTED,,2024-11-22T02:53:06Z
12442,PRR_kwDOCCum186SOUuC,Justineo,COMMENTED,,2024-11-22T02:55:14Z
12442,PRR_kwDOCCum186SPFUe,edison1105,COMMENTED,,2024-11-22T06:32:56Z
12445,PRR_kwDOCCum186qIvPl,skirtles-code,COMMENTED,,2025-05-20T14:20:42Z
12445,PRR_kwDOCCum186rF0iL,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/vue-compat/__tests__/misc.spec.ts (1)</summary><blockquote>

`287-289`: **Note: Pre-existing type annotation pattern (not blocking).**

The static analysis tool flags the use of `Function` as a type, suggesting to explicitly define the function shape. However, this pattern is used consistently throughout the file (lines 262, 268, 274, etc.), so this is a pre-existing codebase pattern rather than an issue introduced by this change.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 288-288: Don't use 'Function' as a type.

Prefer explicitly define the function shape. This type accepts any function-like value, which can be a common source of bugs.

(lint/complexity/noBannedTypes)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 2a5894730db59a4b6391e8a9281c6c76847a3061 and 5e0e684366d50cd3a022edaa3e08ddac2c6b3276.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/runtime-dom/src/modules/attrs.ts` (1 hunks)
* `packages/vue-compat/__tests__/misc.spec.ts` (1 hunks)

</details>

<details>
<summary>🚧 Files skipped from review as they are similar to previous changes (1)</summary>

* packages/runtime-dom/src/modules/attrs.ts

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/vue-compat/__tests__/misc.spec.ts</summary>

[error] 288-288: Don't use 'Function' as a type.

Prefer explicitly define the function shape. This type accepts any function-like value, which can be a common source of bugs.

(lint/complexity/noBannedTypes)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (2)</summary>

* GitHub Check: test / e2e-test
* GitHub Check: test / unit-test-windows

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/vue-compat/__tests__/misc.spec.ts (1)</summary>

`279-291`: **LGTM! Good test coverage for the compatibility flag.**

The new test case effectively verifies that when `ATTR_ENUMERATED_COERCION` is explicitly enabled, the `draggable=""false""` attribute is preserved correctly and the appropriate deprecation warning is emitted. This complements the existing test and follows the established testing patterns in the file.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 288-288: Don't use 'Function' as a type.

Prefer explicitly define the function shape. This type accepts any function-like value, which can be a common source of bugs.

(lint/complexity/noBannedTypes)

</details>

</details>

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-27T09:51:58Z
12445,PRR_kwDOCCum186rMual,skirtles-code,COMMENTED,A few more thoughts on the test...,2025-05-27T19:02:01Z
12447,PRR_kwDOCCum186SDi2s,edison1105,COMMENTED,,2024-11-21T06:48:28Z
12447,PRR_kwDOCCum186VrxFN,noootwo,COMMENTED,,2024-12-18T09:29:04Z
12447,PRR_kwDOCCum186WSLPI,edison1105,APPROVED,,2024-12-24T01:57:26Z
12450,PRR_kwDOCCum186SD2j4,copilot-pull-request-reviewer,COMMENTED,"Copilot reviewed 2 out of 2 changed files in this pull request and generated no suggestions.


",2024-11-21T07:31:18Z
12450,PRR_kwDOCCum186pFO1c,Doctor-wu,APPROVED,,2025-05-13T13:09:44Z
12450,PRR_kwDOCCum186pFPmZ,LittleSound,APPROVED,,2025-05-13T13:10:40Z
12450,PRR_kwDOCCum186pFQsU,KazariEX,APPROVED,,2025-05-13T13:11:57Z
12450,PRR_kwDOCCum186pFSsp,baiwusanyu-c,APPROVED,,2025-05-13T13:14:13Z
12455,PRR_kwDOCCum186SOenp,edison1105,COMMENTED,,2024-11-22T03:50:56Z
12455,PRR_kwDOCCum186SOf7T,copilot-pull-request-reviewer,COMMENTED,"Copilot reviewed 2 out of 2 changed files in this pull request and generated no suggestions.

<details>
<summary>Comments skipped due to low confidence (1)</summary>

**packages/runtime-dom/src/apiCustomElement.ts:524**
* The new behavior introduced in the '_update' method should be covered by tests to ensure that 'vnode.appContext' is correctly set.
```
if (this._app && !this._instance) vnode.appContext = this._app._context
```
</details>

",2024-11-22T03:58:35Z
12455,PRR_kwDOCCum186nCDg9,danieldasilva-smake,COMMENTED,,2025-04-29T07:22:00Z
12455,PRR_kwDOCCum186pO6ml,edison1105,COMMENTED,,2025-05-14T08:29:42Z
12455,PRR_kwDOCCum186pSfqm,edison1105,COMMENTED,,2025-05-14T13:27:27Z
12461,PRR_kwDOCCum186S7ca1,copilot-pull-request-reviewer,COMMENTED,"Copilot reviewed 5 out of 9 changed files in this pull request and generated no suggestions.
<details>
<summary>Files not reviewed (4)</summary>

* **packages/compiler-sfc/__tests__/__snapshots__/compileScript.spec.ts.snap**: Language not supported
* **packages/runtime-core/src/component.ts**: Evaluated as low risk
* **packages/compiler-sfc/__tests__/compileScript.spec.ts**: Evaluated as low risk
* **packages/runtime-dom/src/helpers/useCssVars.ts**: Evaluated as low risk
</details>


",2024-11-27T13:38:40Z
12461,PRR_kwDOCCum186TSFb6,Justineo,COMMENTED,,2024-11-30T17:17:14Z
12461,PRR_kwDOCCum186TSFgi,Justineo,COMMENTED,,2024-11-30T17:20:05Z
12461,PRR_kwDOCCum186Uca39,edison1105,APPROVED,,2024-12-10T00:39:25Z
12461,PRR_kwDOCCum186pfdn0,edison1105,APPROVED,,2025-05-15T12:57:20Z
12468,PRR_kwDOCCum186S0TW6,copilot-pull-request-reviewer,COMMENTED,"Copilot reviewed 1 out of 1 changed files in this pull request and generated no suggestions.


",2024-11-27T01:04:04Z
12468,PRR_kwDOCCum186pFm1-,johnsoncodehk,APPROVED,,2025-05-13T13:35:27Z
12480,PRR_kwDOCCum186S7Wuw,copilot-pull-request-reviewer,COMMENTED,"Copilot reviewed 2 out of 2 changed files in this pull request and generated no suggestions.


",2024-11-27T13:29:14Z
12491,PRR_kwDOCCum186UDBSc,edison1105,COMMENTED,,2024-12-06T07:15:37Z
12491,PRR_kwDOCCum186UL2_u,bgoscinski,COMMENTED,,2024-12-06T23:37:08Z
12491,PRR_kwDOCCum186UNqz1,ShuiRuTian,COMMENTED,,2024-12-07T15:12:33Z
12491,PRR_kwDOCCum186rCc17,skirtles-code,COMMENTED,,2025-05-27T04:39:13Z
12497,PRR_kwDOCCum186VSW5m,Smrtnyk,COMMENTED,,2024-12-15T17:25:45Z
12514,PRR_kwDOCCum186UesE7,edison1105,APPROVED,,2024-12-10T05:47:27Z
12516,PRR_kwDOCCum186tfFFl,skirtles-code,COMMENTED,"Isn't this a more general problem for all custom directives, not just `v-show`?

- [Playground](https://play.vuejs.org/#__SSR__eNp9Um1r2zAQ/iuHGCSFzF7ptg9eOuhKxzbYVpp9m8ZwrHOiTpaEJHsuJf99JynOUigBg+9dz3P3PLIra4uhR1axpW+ctAE8ht6+51p21rgAXx+ut1IJaJ3pYFaUez82zbjmujHaBxg+GgOX8Mg1QGd6HVDMUZ3lAACqgsZeheDkug84n7XGzBaQfmexZLeIswA2GFaru1tnrJ8fuh0hcnryAKiryr05sksTuKZvWWYWhJ+cgJ1VdUDyAJYTk+EltUJJwWV5VMEWLHhi08pNce+NppWkFzlrTGelQvfdBklsOasmLJzVSpm/X1IsuB6JRo43W2z+PBO/92OMcXbr0KMbkLNDLtSO+Of0zeobjmQfkp0RvaLqE8k79Eb1EWMu+9BrQbCP6hLaz+mwUm9++JsxoPYTqQh0OkasphNfn6D+H+5F8Xo6AW3xSCHPyEpgKzXu583TMKm36GSSh6+grZUnGDvSxalrCjkkI5t01LXU4pKzF3Ucw9k+CfAJifS+spy6JuuJAsj14UFF8ydJ5FemujZOoKvg3I5A+5WC9CjexYythaA1UuqVHSmS9Zcm0Bp+D+jiamkHF8Wb4vwt2/0D9isibA==)",2025-06-09T16:31:55Z
12545,PRR_kwDOCCum186VHlXS,edison1105,COMMENTED,,2024-12-13T09:11:38Z
12568,PRR_kwDOCCum186XKthe,yyx990803,COMMENTED,,2025-01-08T07:05:37Z
12607,PRR_kwDOCCum186WjnOm,skirtles-code,COMMENTED,,2024-12-30T19:28:01Z
12614,PRR_kwDOCCum186WXUz2,edison1105,COMMENTED,,2024-12-26T01:27:59Z
12629,PRR_kwDOCCum186Z1mO1,LittleSound,COMMENTED,,2025-01-29T12:59:32Z
12629,PRR_kwDOCCum186bVVNw,LittleSound,APPROVED,"This PR provides a very simple  way, and I approve of it.

I checked and found that currently solid is also using the method of recomputing the entire chain each time.

Maybe we don't need to add extra complexity due to the performance hit of recomputing the entire if-else-if chain.",2025-02-10T14:52:35Z
12642,PRR_kwDOCCum186rSkfH,skirtles-code,COMMENTED,"There's another part of the code, around line 100, that sets the ref to `null` (see `// dynamic ref changed. unset old ref`). I think that would also need to take account of the pending jobs, e.g.:

- [Playground](https://deploy-preview-12642--vue-sfc-playground.netlify.app/#eNp9Uk1v2zAM/SuEMMAu4DmH7RTYwbaih+3QFeuOuig2HauVJUMfaYAg/32UFKfZsPYiSHzke48ij+zrPNf7gGzNGtdZOXtw6MO84VpOs7EejmBxqKDHQWq8NRTUqH0FI5xgsGaCgsoLrrnujHZUPpoXaGNROQjl8GYBKHIvJjxjhSgIWbDbUaqekH9UyiPXkA2VN5AesPDUe6FCZCu2pJ4BH6wGymw3cDzFIB2nK5kHYYmVahIV3Xu018SpfiyTm2oJJ8X137IZidR0VvEMcy889q9sUdEorJXZlX6Urv5ADC5VvAXWAtq2havANitQF1w3qzwgGg09PE6zIkV6ATTb4L3R8KVTsntuOTsPwVuyyjaP9GpWOSfnnz9i/1EO52zOYEVYs7oQs4p5R0YHuaufnNG0Iqk1zjqaj1Rof85eUiOcrZemORNKmZcfKRbV09+kmhG75//En9whxjh7sOjQ7snvBfPC7tBn+O7xHg90v4CT6YOi7HfAX0ifHKLHnPYt6J5sX+Ult9/Toku9++3uDh61W5pK33eZMGe06HE132r91e6n+vMyN3b6A6s1HrM=)

In the Playground, the ref name is changed from `a` to `b`, but `a` is still populated because the job is still queued.",2025-05-28T06:37:29Z
12642,PRR_kwDOCCum186rTtLT,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (2)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/rendererTemplateRef.ts (2)</summary><blockquote>

`21-22`: **Consider documenting the purpose of `pendingSetRefMap`.**

A short JSDoc comment explaining that the WeakMap tracks scheduled `setRef` jobs (so they can be cancelled on unmount) would improve readability for future maintainers who are unfamiliar with the new cancellation flow.

---

`165-169`: **Guard against `undefined` flags when disposing the pending job.**

If `flags` is still `undefined`, the compound `|=` assignment mutates it through an *implicit* `undefined → 0` coercion.  
Being explicit keeps the intent clear and silences potential ESLint / TS complaints:

```diff
- pendingSetRef.flags! |= SchedulerJobFlags.DISPOSED
+pendingSetRef.flags = (pendingSetRef.flags ?? 0) | SchedulerJobFlags.DISPOSED
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between d9bd436b1aad354e06bcc9d0f9138fbb8eedc7cf and d1c10b23ce6475deb7300ae3a54c22f325af3710.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/runtime-core/__tests__/rendererTemplateRef.spec.ts` (2 hunks)
* `packages/runtime-core/src/rendererTemplateRef.ts` (2 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/runtime-core/src/rendererTemplateRef.ts (2)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/scheduler.ts (1)</summary>

* `SchedulerJob` (27-39)

</details>
<details>
<summary>packages/runtime-core/src/renderer.ts (1)</summary>

* `queuePostRenderEffect` (286-295)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/__tests__/rendererTemplateRef.spec.ts (1)</summary>

`183-226`: **Great regression test – covers the simultaneous update + unmount edge-case.**

The scenario faithfully reproduces #12639 and would fail without the new cancellation logic. No issues spotted.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-28T08:18:46Z
12642,PRR_kwDOCCum186tMTBW,skirtles-code,COMMENTED,"As best I can tell this fix looks good.

But `rendererTemplateRef.ts` is getting quite tricky to follow, so I find it difficult to review changes with much confidence. There are definitely other edge-case bugs similar to this one, but I don't think any of the bugs I know about are similar enough to be in scope for this PR. It probably needs a refactor at some point.",2025-06-06T18:14:55Z
12644,PRR_kwDOCCum186rhHNV,skirtles-code,COMMENTED,,2025-05-29T08:55:01Z
12645,PRR_kwDOCCum186bKaqk,jh-leong,COMMENTED,Small nit: these can be simplified.,2025-02-08T02:25:34Z
12645,PRR_kwDOCCum186bLNAH,jh-leong,APPROVED,,2025-02-08T09:48:15Z
12648,PRR_kwDOCCum186sxdno,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts (1)</summary><blockquote>

`569-577`: **Generic parameter check is solid – minor nitpick on variable shadowing**

`const name = node.typeName.name` shadows the outer-scope `name` identifier introduced a few lines later for the built-in switch.  Consider inlining the identifier (`node.typeName.name`) or choosing a more specific local (e.g. `typeNameId`) to avoid subtle shadowing mistakes during future refactors.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 570-570: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 10ebcef8c870dbc042b0ea49b1424b2e8f692145 and b73aba4f4680533c848c3e24a60baf0ef3e70fde.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/compiler-sfc/__tests__/compileScript/resolveType.spec.ts` (1 hunks)
* `packages/compiler-sfc/src/script/resolveType.ts` (3 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts</summary>

[error] 570-570: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (4)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed
* GitHub Check: test / unit-test-windows

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts (1)</summary>

`686-700`: **👍  Correctly forwards generics for `Pick` / `Omit`**

Passing `typeParameters` when resolving the second argument fixes the original issue and is implemented consistently for both utility types.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 695-700: Other switch clauses can erroneously access this declaration.
Wrap the declaration in a block to restrict its access to the switch clause.

The declaration is defined in this switch clause:

Unsafe fix: Wrap the declaration in a block.


(lint/correctness/noSwitchDeclarations)

</details>

</details>

</details>
<details>
<summary>packages/compiler-sfc/__tests__/compileScript/resolveType.spec.ts (1)</summary>

`281-296`: **Great regression test**

The new case reproduces the reported failure and protects against future regressions. Test reads clearly and asserts both props – thanks!

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-05T01:48:46Z
12654,PRR_kwDOCCum186W-2_b,markrian,COMMENTED,,2025-01-06T22:12:23Z
12654,PRR_kwDOCCum186W-3Jj,markrian,COMMENTED,,2025-01-06T22:12:56Z
12654,PRR_kwDOCCum186W-3Yg,markrian,COMMENTED,,2025-01-06T22:13:48Z
12654,PRR_kwDOCCum186W_2Yt,edison1105,COMMENTED,,2025-01-07T03:27:06Z
12654,PRR_kwDOCCum186XB8uQ,markrian,COMMENTED,,2025-01-07T09:52:09Z
12654,PRR_kwDOCCum186XB-pL,markrian,COMMENTED,,2025-01-07T09:55:40Z
12654,PRR_kwDOCCum186tIjoR,skirtles-code,COMMENTED,,2025-06-06T11:56:42Z
12654,PRR_kwDOCCum186tx01y,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (3)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/componentEmits.ts (2)</summary><blockquote>

`154-156`: **Add parentheses to avoid precedence ambiguity**

The concatenation (`+`), `in`, and `&&` operators have different precedences.  
Although the current expression happens to evaluate correctly, the lack of
parentheses forces the reader to recall those rules and makes the code easy to
mis-read on a quick scan.

```diff
-const isCompatModelListener =
-  __COMPAT__ && compatModelEventPrefix + event in props
+const isCompatModelListener =
+  __COMPAT__ &&
+  (compatModelEventPrefix + event) in props
```

---

`157-159`: **Minor: extract helper for modifiers lookup**

`isCompatModelListener ? props.modelModifiers : getModelModifiers(...)`
is duplicated (or very similar) in several places in the code-base.  A tiny
utility such as `resolveModelModifiers(props, event, isCompat)` would make this
branching logic self-documenting and cut 6–7 bytes from the non-compat build
after minification.

Not blocking, just something to consider.

</blockquote></details>
<details>
<summary>packages/vue-compat/__tests__/componentVModel.spec.ts (1)</summary><blockquote>

`110-114`: **Avoid the banned `Function` type**

`Function` is deliberately broad and flagged by Biome/TSLint/ESLint because it
silently accepts anything callable.  Cast to the actual shape you need:

```diff
-  (deprecationData[DeprecationTypes.COMPONENT_V_MODEL].message as Function)(
+  (
+    deprecationData[DeprecationTypes.COMPONENT_V_MODEL]
+      .message as (c: ComponentOptions) => string
+  )(
```

This tightens the type-check and removes the linter warning.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 111-111: Don't use 'Function' as a type.

Prefer explicitly define the function shape. This type accepts any function-like value, which can be a common source of bugs.

(lint/complexity/noBannedTypes)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between e8e842241acfec5c76761a8d8db9e63ec1d2d576 and d11784f370de643c4ab9f620fc8fa096f5ad76fd.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/runtime-core/src/componentEmits.ts` (1 hunks)
* `packages/vue-compat/__tests__/componentVModel.spec.ts` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (2)</summary>

<details>
<summary>packages/runtime-core/src/componentEmits.ts (2)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/compat/componentVModel.ts (1)</summary>

* `compatModelEventPrefix` (12-12)

</details>
<details>
<summary>packages/runtime-core/src/helpers/useModel.ts (1)</summary>

* `getModelModifiers` (120-129)

</details>

</blockquote></details>
<details>
<summary>packages/vue-compat/__tests__/componentVModel.spec.ts (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/compat/compatConfig.ts (1)</summary>

* `deprecationData` (74-426)

</details>

</blockquote></details>

</details><details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/vue-compat/__tests__/componentVModel.spec.ts</summary>

[error] 111-111: Don't use 'Function' as a type.

Prefer explicitly define the function shape. This type accepts any function-like value, which can be a common source of bugs.

(lint/complexity/noBannedTypes)

</details>

</details>

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/vue-compat/__tests__/componentVModel.spec.ts (1)</summary>

`116-122`: **Nice coverage of `.trim` behaviour**

The assertions correctly validate both the model update and the reflected input
value after the modifier is applied.  Good job extending the test matrix to
cover custom model options as well.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-11T03:06:03Z
12676,PRR_kwDOCCum186XWLjF,jh-leong,APPROVED,,2025-01-09T09:06:49Z
12697,PRR_kwDOCCum186a2xzf,edison1105,COMMENTED,,2025-02-06T09:01:03Z
12701,PRR_kwDOCCum186poGwR,coderabbitai,COMMENTED,"**Actionable comments posted: 2**

<details>
<summary>🧹 Nitpick comments (2)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/__tests__/compileScript.spec.ts (1)</summary><blockquote>

`701-719`: **Import `ref` to keep the fixture realistic and future-proof**

The new test relies on `ref()` but omits

```ts
import { ref } from 'vue'
```

While the compiler currently tolerates the missing import, adding it prevents false positives if future binding-analysis becomes stricter and makes the snippet closer to real-world usage.

```diff
       <script setup>
-        const count = ref(0)
+        import { ref } from 'vue'
+        const count = ref(0)
       </script>
```

</blockquote></details>
<details>
<summary>packages/compiler-sfc/src/compileScript.ts (1)</summary><blockquote>

`1303-1340`: **Avoid touching private fields of `source-map-js` & release consumers**

`_sources`, `_sourceRoot`, `_file` are private internals; relying on them risks breakage on minor upgrades.  
The public API already covers these needs:

```diff
-  const generator = new SourceMapGenerator()
+  const generator = new SourceMapGenerator({
+    file: scriptMap.file,
+    sourceRoot: scriptMap.sourceRoot,
+  })
…
-  ;(generator as any)._sourceRoot = scriptMap.sourceRoot
-  ;(generator as any)._file = scriptMap.file
+  // no direct property mutation necessary
```

Also, each `SourceMapConsumer` should be `.destroy()`-ed (async) or `.close()` (sync) when done to free WASM/worker resources:

```ts
const consumer = await new SourceMapConsumer(map)
try {
  …
} finally {
  consumer.destroy?.()
}
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 163b3651d174321911648a164052effa9249a2aa and 5132463e3fe705d412ac06527ede8c83daf487be.

</details>

<details>
<summary>📒 Files selected for processing (4)</summary>

* `packages/compiler-sfc/__tests__/compileScript.spec.ts` (2 hunks)
* `packages/compiler-sfc/__tests__/compileTemplate.spec.ts` (1 hunks)
* `packages/compiler-sfc/__tests__/utils.ts` (1 hunks)
* `packages/compiler-sfc/src/compileScript.ts` (6 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (2)</summary>

* GitHub Check: test / unit-test-windows
* GitHub Check: test / e2e-test

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/__tests__/compileTemplate.spec.ts (1)</summary>

`9-9`: **Centralize position utility via shared import**  
Great refactor—removing the local `getPositionInCode` definition and importing it from `./utils` DRYs up the code and ensures consistency across tests. The relative path is accurate given the `__tests__` directory structure.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-16T08:14:09Z
12704,PRR_kwDOCCum186X5BgP,baiwusanyu-c,APPROVED,,2025-01-14T00:40:44Z
12732,PRR_kwDOCCum186Yc5P4,edison1105,COMMENTED,,2025-01-17T00:15:09Z
12733,PRR_kwDOCCum186YqCEF,baiwusanyu-c,APPROVED,,2025-01-20T01:08:43Z
12733,PRR_kwDOCCum186vHpiV,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🔭 Outside diff range comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/rendererTemplateRef.ts (1)</summary><blockquote>

`126-134`: **Inconsistent behaviour between string refs and object refs**

`shallowReactive([refValue])` is created only when `_isString` is true.  
For the `_isRef` branch a plain array is still assigned (`ref.value = [refValue]`), meaning that:

```html
<li :ref=""myShallowRef"" ref_for />
```

will **not** receive a reactive array, whereas

```html
<li ref=""myKey"" ref_for />
```

will.

Unless there is a deliberate reason to preserve this asymmetry, consider applying the same `shallowReactive` wrapping to the `_isRef` path for consistency and to avoid surprising API differences.

```diff
-            ref.value = [refValue]
+            ref.value = shallowReactive([refValue])
```

</blockquote></details>

</blockquote></details>

<details>
<summary>🧹 Nitpick comments (2)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/rendererTemplateRef.ts (1)</summary><blockquote>

`14-14`: **Minor: keep import list alphabetised for easier diff-scanning**

`shallowReactive` was inserted between `isRef` and `toRaw`, breaking the previous alphabetical order of the imported symbols. A consistent ordering reduces merge-conflicts and makes future diffs easier to read.

</blockquote></details>
<details>
<summary>packages/runtime-core/__tests__/helpers/useTemplateRef.spec.ts (1)</summary><blockquote>

`76-126`: **Nice coverage – consider asserting `isReactive(t1.value)` as well**

The new test correctly checks that `instance.refs['refKey']` is reactive, but it never verifies that `t1.value` – the value returned by `useTemplateRef` – is the same reactive proxy. A quick extra assertion would guarantee the public API receives the reactive array you expect:

```ts
expect(t1!.value).toBe(currentInstance.refs['refKey'])
expect(isReactive(t1!.value)).toBe(true)
```

Adding this would catch a future regression where `refs` stays reactive but `useTemplateRef` returns a plain array.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 82da43d167462bc36c5e94e4a99dca12ea15d08b and 2336e2a7846be8f1ca530ff2ec1d18689e37e0b2.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/runtime-core/__tests__/helpers/useTemplateRef.spec.ts` (2 hunks)
* `packages/runtime-core/src/rendererTemplateRef.ts` (2 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/runtime-core/__tests__/helpers/useTemplateRef.spec.ts (3)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/component.ts (1)</summary>

* `currentInstance` (708-708)

</details>
<details>
<summary>packages/runtime-core/src/helpers/useTemplateRef.ts (1)</summary>

* `useTemplateRef` (8-40)

</details>
<details>
<summary>packages/runtime-test/src/serialize.ts (1)</summary>

* `serializeInner` (22-33)

</details>

</blockquote></details>

</details>

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-18T07:18:07Z
12737,PRR_kwDOCCum186YqCog,edison1105,COMMENTED,,2025-01-20T01:13:21Z
12737,PRR_kwDOCCum186YqSAN,inottn,COMMENTED,,2025-01-20T02:51:32Z
12737,PRR_kwDOCCum186rjKRy,skirtles-code,COMMENTED,"Currently this line isn't being tested:

```js
needReactive = false
```

If I remove that line the tests all still pass.

Similarly, if I replace `let needReactive = args.length === 0` with `let needReactive = true`, the tests still pass.

I think it should be possible to test these cases, ensuring that an accumulator object isn't wrapped when it shouldn't be.

Other than that, I think this change looks good to merge.",2025-05-29T12:34:42Z
12756,PRR_kwDOCCum186YyYpM,jacekkarczmarczyk,COMMENTED,,2025-01-21T02:28:51Z
12756,PRR_kwDOCCum186Yzk8P,suzhenskk,COMMENTED,,2025-01-21T07:19:50Z
12766,PRR_kwDOCCum186Y_JnT,jh-leong,COMMENTED,,2025-01-22T09:42:40Z
12766,PRR_kwDOCCum186Y_QiX,jh-leong,CHANGES_REQUESTED,,2025-01-22T09:53:06Z
12766,PRR_kwDOCCum186ZGe6V,zhangenming,COMMENTED,,2025-01-23T00:36:09Z
12766,PRR_kwDOCCum186ZGiSx,zhangenming,COMMENTED,,2025-01-23T00:50:53Z
12768,PRR_kwDOCCum186Y_CMI,jh-leong,COMMENTED,,2025-01-22T09:30:21Z
12771,PRR_kwDOCCum186a04ht,jh-leong,APPROVED,,2025-02-06T03:14:40Z
12771,PRR_kwDOCCum186pdLnV,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/jsx.ts (1)</summary><blockquote>

`1-8`: **Nitpick: Document the `exactOptionalPropertyTypes` rationale**  
Consider enhancing the file header with a brief note explaining that these type changes support TypeScript’s `--exactOptionalPropertyTypes` compiler option and reference issue #6068 for context.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between d0253a0b7e8b356dc4c490dcb79fab49c1df6412 and 5372774f165cbdacf057bb9a6f6c175f5947f5a0.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/runtime-dom/src/jsx.ts` (9 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/runtime-dom/src/jsx.ts (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/vnode.ts (1)</summary>

* `VNodeRef` (86-92)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>🔇 Additional comments (6)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/jsx.ts (6)</summary>

`49-266`: **ARIA Attributes: Explicitly include `undefined`**  
All attributes in `AriaAttributes` now correctly include `| undefined`, satisfying `--exactOptionalPropertyTypes` requirements. This change aligns with React’s patterns and improves type safety.

---

`277-349`: **Standard HTMLAttributes: Add `| undefined` for optional props**  
The core `HTMLAttributes` interface has been updated so that `innerHTML`, `style`, and all standard HTML props explicitly allow `undefined`. This ensures JSX consumers can pass `undefined` without type errors under strict optional property settings.

---

`362-385`: **Anchor & Area HTML Attributes: Explicit `undefined`**  
Both `AnchorHTMLAttributes` and `AreaHTMLAttributes` have had their optional props (`href`, `rel`, etc.) updated to include `| undefined`. This is consistent with the PR goal and does not affect runtime behavior.

---

`541-584`: **InputHTMLAttributes: Include `| undefined` across input props**  
The `InputHTMLAttributes` interface now explicitly adds `| undefined` to every optional field (`accept`, `checked`, `placeholder`, etc.). This ensures compatibility with stricter TS settings when passing `undefined` to inputs.

---

`835-862`: **SVGAttributes: Explicitly allow `undefined` on SVG props**  
All SVG-specific props (`color`, `height`, `width`, `role`, `tabindex`, etc.) now include `| undefined`, matching HTML and ARIA interfaces. Good coverage for strict optional types.

---

`1425-1430`: **ReservedProps: Add `| undefined` to key/ref props**  
The `ReservedProps` type (`key`, `ref`, `ref_for`, `ref_key`) now explicitly allows `undefined`, aligning with the rest of the JSX prop types.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-15T09:39:59Z
12792,PRR_kwDOCCum186pFnoJ,Doctor-wu,APPROVED,,2025-05-13T13:36:23Z
12792,PRR_kwDOCCum186pFrLq,LittleSound,APPROVED,,2025-05-13T13:40:40Z
12801,PRR_kwDOCCum186rpTNn,skirtles-code,COMMENTED,"It seems like this adds a new type of allowable mismatch. Is there any precedent for this type of mismatch?

If we want to allow this then we may need to consider similar cases, like:

- [Playground 1 - (flipping `true` and `false` the other way)](https://deploy-preview-12801--vue-sfc-playground.netlify.app/#__SSR__eNp9UctuwjAQ/JWVLwQJwqE9oUBVKg6t1IfaHn2Jkg0xjR/yI1Ch/HvXiUKpVOGTd2dmPeM9sXtj0jYgW7LMFVYYDw59MGuuhDTaejiBxWoGWm2w0hafdVAeOqisljAh5YQrrgqtnIf6u7S5xxJWUZN4G3DK1R9lkkxhtYYTVwCiguQgVKkPd2mpiyBReeIDnXFS2uZNQJpX5Y1DrjrCs8VglCxS4VGahqhUAWQGytzn87xp9GEuhZO5L2po56JacTYO5Wxdi2wRM2aLCz2bMe8oSSV26d5pRX/S++Ss0NKIBu2r8YKScrYcEkSsf+up78XAs7Ff1Fh8/dPfu2PscfZm0aFtkbMz5nO7Qz/A248XPNL9DEpdhobYV8B3dLoJ0eNA2wRVku0LXu/2sd+sULtPtz16VG4MFY1GZtfzOaP1PlyJ/mv3Jr3tdbQh1v0ASXXIrQ==)
- [Playground 2 (with `v-else`)](https://deploy-preview-12801--vue-sfc-playground.netlify.app/#__SSR__eNp9UstOwzAQ/JWVL22lNj3AqUqLKOoBJB4Cjr5EyaZx8Ut+pEVV/p1NopQioD7ZOzPrmbWP7NbapI7IFiz1uRM2gMcQ7YproaxxAY7gsJyC0WssjcNHE3WABkpnFIxIOeKa69xoH6D6LFwWsIBlqxmXmfQ44fqHdDyewHIFR64BRAnjvdCF2d8khcmjQh2ID7SGVkmdyYjUMLiIXDcEp/PeKFmkQ0BlJTHpBJBaKLKQzTIpzX6mhFdZyCuoZ6Jccjb05GxViXTeZiRJIep/REj2f8uIT8J0fnYxm7LgaQSl2CY7bzQNs8vHWW6UFRLdsw2CRsTZok/eYt19D12tDTcd6nmF+ccf9Z0/tDXOXhx6dDVydsJC5rYYenjz9oQH2p9AZYooiX0BfEVvZGw99rR11AXZPuN1bu+7LyH09t1vDgG1H0L1rwPQdHzO6F/cXYj+bfcque509LSs+QJLJdy0)

Those seem essentially the same to me.",2025-05-29T22:14:06Z
12804,PRR_kwDOCCum186aTBfr,skirtles-code,COMMENTED,,2025-02-02T23:35:11Z
12804,PRR_kwDOCCum186aUNRQ,edison1105,COMMENTED,,2025-02-03T06:11:05Z
12804,PRR_kwDOCCum186aXoqx,serkodev,COMMENTED,,2025-02-03T13:18:16Z
12804,PRR_kwDOCCum186aX1_h,edison1105,APPROVED,,2025-02-03T13:41:28Z
12804,PRR_kwDOCCum186rrcm0,skirtles-code,COMMENTED,"Using `__v_skip` looks like a good approach to me.

The test is outside the `describe` section, it should probably be moved inside.

The PR description also needs updating to reflect the latest code.",2025-05-30T06:23:00Z
12804,PRR_kwDOCCum186sqR8g,edison1105,APPROVED,,2025-06-04T13:33:40Z
12815,PRR_kwDOCCum186bArdd,edison1105,COMMENTED,,2025-02-07T01:59:23Z
12815,PRR_kwDOCCum186bQtkP,LittleSound,APPROVED,,2025-02-10T07:08:53Z
12815,PRR_kwDOCCum186cH_W7,LittleSound,APPROVED,,2025-02-15T06:34:18Z
12820,PRR_kwDOCCum186bQH6-,LittleSound,APPROVED,,2025-02-10T05:02:36Z
12823,PRR_kwDOCCum186bKRCo,edison1105,COMMENTED,,2025-02-08T00:50:45Z
12823,PRR_kwDOCCum186bKcf4,inottn,COMMENTED,,2025-02-08T02:56:22Z
12823,PRR_kwDOCCum186bKoP_,edison1105,COMMENTED,,2025-02-08T03:47:07Z
12825,PRR_kwDOCCum186bg1rV,ferferga,COMMENTED,,2025-02-11T15:14:58Z
12825,PRR_kwDOCCum186bmKQ6,edison1105,COMMENTED,,2025-02-12T00:32:09Z
12832,PRR_kwDOCCum186bPeVJ,edison1105,COMMENTED,,2025-02-10T00:59:59Z
12832,PRR_kwDOCCum186bPfuP,edison1105,COMMENTED,,2025-02-10T01:11:27Z
12832,PRR_kwDOCCum186bQzxz,ddoemonn,COMMENTED,,2025-02-10T07:25:53Z
12832,PRR_kwDOCCum186bcIVK,edison1105,COMMENTED,,2025-02-11T06:56:47Z
12832,PRR_kwDOCCum186bc31m,ddoemonn,COMMENTED,,2025-02-11T08:43:37Z
12832,PRR_kwDOCCum186bdCZz,edison1105,COMMENTED,,2025-02-11T09:03:12Z
12847,PRR_kwDOCCum186bcFuN,Doctor-wu,APPROVED,,2025-02-11T06:48:27Z
12847,PRR_kwDOCCum186bcQSR,LittleSound,APPROVED,"related: https://github.com/vuejs/vue-vapor/pull/263

and LGTM!",2025-02-11T07:16:37Z
12855,PRR_kwDOCCum186bfrqF,edison1105,COMMENTED,,2025-02-11T13:35:13Z
12870,PRR_kwDOCCum186p0YH5,KazariEX,APPROVED,,2025-05-18T20:14:34Z
12870,PRR_kwDOCCum186p0psk,edison1105,APPROVED,,2025-05-19T00:43:59Z
12870,PRR_kwDOCCum186p0qFQ,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/component.ts (1)</summary><blockquote>

`129-131`: **Consider using specific object types instead of empty objects**

While the use of `{}` as fallback types when the original types are `unknown` works functionally, it's generally better to use more specific object types.


Static analysis tools flag empty object types because `{}` represents ""any non-nullable value"" rather than an empty object. Consider using more specific types or use `Record<string, never>` for a truly empty object type if that's what's intended.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 129-129: Don't use '{}' as a type.

Prefer explicitly define the object shape. '{}' means ""any non-nullable value"".

(lint/complexity/noBannedTypes)

---

[error] 130-130: Don't use '{}' as a type.

Prefer explicitly define the object shape. '{}' means ""any non-nullable value"".

(lint/complexity/noBannedTypes)

---

[error] 131-131: Don't use '{}' as a type.

Prefer explicitly define the object shape. '{}' means ""any non-nullable value"".

(lint/complexity/noBannedTypes)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 163b3651d174321911648a164052effa9249a2aa and 2796013da7e2532f979c2de3a6411f1824b9e1ea.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages-private/dts-test/componentInstance.test-d.tsx` (1 hunks)
* `packages/runtime-core/src/component.ts` (2 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages-private/dts-test/componentInstance.test-d.tsx (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/component.ts (1)</summary>

* `ComponentInstance` (113-135)

</details>

</blockquote></details>

</details><details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/runtime-core/src/component.ts</summary>

[error] 129-129: Don't use '{}' as a type.

Prefer explicitly define the object shape. '{}' means ""any non-nullable value"".

(lint/complexity/noBannedTypes)

---

[error] 130-130: Don't use '{}' as a type.

Prefer explicitly define the object shape. '{}' means ""any non-nullable value"".

(lint/complexity/noBannedTypes)

---

[error] 131-131: Don't use '{}' as a type.

Prefer explicitly define the object shape. '{}' means ""any non-nullable value"".

(lint/complexity/noBannedTypes)

---

[error] 270-270: Don't use '{}' as a type.

Prefer explicitly define the object shape. '{}' means ""any non-nullable value"".

(lint/complexity/noBannedTypes)

</details>

</details>

</details>

<details>
<summary>🔇 Additional comments (3)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/component.ts (2)</summary>

`118-134`: **Improved type inference for component instances returned by defineComponent()**

This change correctly refines the `ComponentInstance<T>` type alias to handle components returned by `defineComponent()`. By renaming the parameter from `Props` to `PropsOrInstance` and adding a conditional type check, the type system now correctly differentiates between raw props and component instances.

The conditional check `PropsOrInstance extends { $props: unknown }` is an elegant solution that avoids double-wrapping the component instance in `ComponentPublicInstance` when it already has a `$props` property.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 129-129: Don't use '{}' as a type.

Prefer explicitly define the object shape. '{}' means ""any non-nullable value"".

(lint/complexity/noBannedTypes)

---

[error] 130-130: Don't use '{}' as a type.

Prefer explicitly define the object shape. '{}' means ""any non-nullable value"".

(lint/complexity/noBannedTypes)

---

[error] 131-131: Don't use '{}' as a type.

Prefer explicitly define the object shape. '{}' means ""any non-nullable value"".

(lint/complexity/noBannedTypes)

</details>

</details>

---

`265-274`: **Properly propagated type parameter rename to Component interface**

The parameter rename from `Props` to `PropsOrInstance` is correctly propagated throughout the related type definitions, ensuring consistency across the type system.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 270-270: Don't use '{}' as a type.

Prefer explicitly define the object shape. '{}' means ""any non-nullable value"".

(lint/complexity/noBannedTypes)

</details>

</details>

</details>
<details>
<summary>packages-private/dts-test/componentInstance.test-d.tsx (1)</summary>

`141-154`: **Great test coverage for type correction in $props**

This test case correctly verifies the fix for issue #12751 by ensuring:
1. Component emits are properly typed in the component instance
2. Event handlers are correctly typed in the `$props` object
3. No nested `$props` property exists within the `$props` object itself

The test case is well-structured and properly uses the TypeScript `@ts-expect-error` annotation to verify that the fix prevents the nesting of `$props` within itself.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-19T00:46:51Z
12883,PRR_kwDOCCum186cJ5UH,edison1105,COMMENTED,,2025-02-17T02:16:24Z
12883,PRR_kwDOCCum186cJ9xv,kovsu,COMMENTED,,2025-02-17T02:32:55Z
12883,PRR_kwDOCCum186cKCME,edison1105,COMMENTED,,2025-02-17T02:54:36Z
12883,PRR_kwDOCCum186cKFJG,kovsu,COMMENTED,,2025-02-17T03:08:27Z
12883,PRR_kwDOCCum186cLDSD,edison1105,COMMENTED,,2025-02-17T06:35:40Z
12883,PRR_kwDOCCum186cMgXi,edison1105,COMMENTED,,2025-02-17T09:41:36Z
12883,PRR_kwDOCCum186cMzsh,edison1105,COMMENTED,,2025-02-17T10:12:22Z
12890,PRR_kwDOCCum186cLHXR,edison1105,APPROVED,,2025-02-17T06:48:10Z
12893,PRR_kwDOCCum186cMICW,edison1105,APPROVED,,2025-02-17T09:02:58Z
12900,PRR_kwDOCCum186cSrDT,edison1105,COMMENTED,,2025-02-18T00:49:51Z
12900,PRR_kwDOCCum186cSxHc,inottn,COMMENTED,,2025-02-18T01:08:28Z
12900,PRR_kwDOCCum186snDuq,edison1105,COMMENTED,,2025-06-04T09:05:51Z
12904,PRR_kwDOCCum186cV3lv,jh-leong,COMMENTED,,2025-02-18T09:44:53Z
12908,PRR_kwDOCCum186ce-zj,edison1105,COMMENTED,,2025-02-19T00:42:46Z
12913,PRR_kwDOCCum186dHDdV,edison1105,COMMENTED,,2025-02-24T01:16:31Z
12913,PRR_kwDOCCum186dHEiA,edison1105,COMMENTED,,2025-02-24T01:22:19Z
12913,PRR_kwDOCCum186dgkhU,dsonet,COMMENTED,,2025-02-25T21:57:55Z
12918,PRR_kwDOCCum186cqRLz,edison1105,COMMENTED,,2025-02-20T00:52:27Z
12918,PRR_kwDOCCum186cqSED,edison1105,COMMENTED,,2025-02-20T00:56:07Z
12918,PRR_kwDOCCum186cqTWs,thecodewarrior,COMMENTED,,2025-02-20T01:01:18Z
12918,PRR_kwDOCCum186c6wTG,Doctor-wu,APPROVED,LGTM,2025-02-21T10:32:43Z
12918,PRR_kwDOCCum186p0reR,edison1105,APPROVED,,2025-05-19T00:51:19Z
12918,PRR_kwDOCCum186qVVNi,edison1105,APPROVED,,2025-05-21T13:22:38Z
12928,PRR_kwDOCCum186vMZtm,coderabbitai,COMMENTED,"**Actionable comments posted: 4**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/options.ts (1)</summary><blockquote>

`100-104`: **Minor doc tweak**

The comment says “open tag and close tag of each node” – consider clarifying that it records **the tag-name locations**, not the whole tag range, to avoid ambiguity.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 604d08760ee5b01772bc33cefd89ebdca9bb1b82 and b4566c295e0344cf6e1d96fff8a5795c46cd50b1.

</details>

<details>
<summary>📒 Files selected for processing (4)</summary>

* `packages/compiler-core/src/ast.ts` (1 hunks)
* `packages/compiler-core/src/options.ts` (1 hunks)
* `packages/compiler-core/src/parser.ts` (3 hunks)
* `packages/compiler-dom/__tests__/parse.spec.ts` (1 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (1)</summary>

* GitHub Check: test / unit-test-windows

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/parser.ts (1)</summary>

`81-82`: **Performance toggle added – ensure downstream opts in**

`tagLocations` defaults to `false`, yet the DOM-parser tests rely on it being `true`.  
If `parserOptions` in `packages/compiler-dom/src/parserOptions.ts` is not explicitly enabling this flag, the new fields will never be set and tests will still fail even after the naming fix.  
Please verify & enable where needed.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-18T13:33:15Z
12935,PRR_kwDOCCum186dZncl,jacekkarczmarczyk,COMMENTED,,2025-02-25T11:42:44Z
12948,PRR_kwDOCCum186dkRFy,posva,COMMENTED,,2025-02-26T08:16:53Z
12948,PRR_kwDOCCum186du8Bu,edison1105,COMMENTED,,2025-02-27T01:35:01Z
12948,PRR_kwDOCCum186dxUFH,posva,COMMENTED,,2025-02-27T08:19:03Z
12948,PRR_kwDOCCum186dxcne,posva,APPROVED,,2025-02-27T08:28:17Z
12958,PRR_kwDOCCum186wAYVP,KazariEX,APPROVED,,2025-06-24T09:11:26Z
12965,PRR_kwDOCCum186d2DW8,baiwusanyu-c,CHANGES_REQUESTED,,2025-02-27T15:29:17Z
12965,PRR_kwDOCCum186d2E3C,padcom,COMMENTED,,2025-02-27T15:31:15Z
12965,PRR_kwDOCCum186d2lcT,padcom,COMMENTED,,2025-02-27T16:13:01Z
12965,PRR_kwDOCCum186d6jjP,edison1105,COMMENTED,,2025-02-28T00:13:38Z
12965,PRR_kwDOCCum186d6j7p,padcom,COMMENTED,,2025-02-28T00:15:20Z
12965,PRR_kwDOCCum186d6kmr,edison1105,COMMENTED,,2025-02-28T00:18:04Z
12965,PRR_kwDOCCum186d6lLA,padcom,COMMENTED,,2025-02-28T00:20:07Z
12965,PRR_kwDOCCum186d6oD6,padcom,COMMENTED,,2025-02-28T00:24:25Z
12965,PRR_kwDOCCum186p0qnU,edison1105,APPROVED,,2025-05-19T00:50:18Z
12965,PRR_kwDOCCum186p0rvB,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-dom/__tests__/customElement.spec.ts (1)</summary><blockquote>

`475-493`: **Good test coverage for the new feature.**

The test correctly verifies that the `delegatesFocus` option is properly passed to the shadow root. Skipping the test due to jsdom limitations is appropriate, with clear comments explaining why it's skipped and referencing the relevant GitHub issue.

Given the jsdom limitation, consider adding a comment in the test description suggesting that this should be manually tested in a real browser environment.

```diff
// https://github.com/vuejs/core/issues/12964
// Disabled because of missing support for `delegatesFocus` in jsdom
// https://github.com/jsdom/jsdom/issues/3418
// eslint-disable-next-line vitest/no-disabled-tests
-test.skip('shadowRoot should be initialized with delegatesFocus', () => {
+test.skip('shadowRoot should be initialized with delegatesFocus (requires manual testing in a real browser)', () => {
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 163b3651d174321911648a164052effa9249a2aa and 416c35f14ac83607a5ea9e4c0b216e91a2d7f58e.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/runtime-dom/__tests__/customElement.spec.ts` (1 hunks)
* `packages/runtime-dom/src/apiCustomElement.ts` (2 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (2)</summary>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (1)</summary><blockquote>

<details>
<summary>packages/shared/src/general.ts (1)</summary>

* `extend` (24-24)

</details>

</blockquote></details>
<details>
<summary>packages/runtime-dom/__tests__/customElement.spec.ts (2)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (1)</summary>

* `defineCustomElement` (168-186)

</details>
<details>
<summary>packages/runtime-core/src/index.ts (1)</summary>

* `h` (109-109)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (2)</summary>

* GitHub Check: test / unit-test-windows
* GitHub Check: test / e2e-test

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (2)</summary>

`56-56`: **Great addition! This extends Vue's custom elements API.**

Adding the `shadowRootOptions` property to the `CustomElementOptions` interface allows users to specify additional shadow DOM initialization options, such as `delegatesFocus`, while keeping the shadow root mode enforced as 'open'.

---

`267-271`: **Well implemented shadow root options handling.**

The implementation properly uses `extend` to merge the user-provided `shadowRootOptions` with `{ mode: 'open' }`, ensuring the shadow root is always created with an 'open' mode while allowing additional configuration options to be passed.

This approach addresses the requirements from issue #12964 while maintaining compatibility with existing code.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-19T00:52:44Z
12965,PRR_kwDOCCum186qO2T6,edison1105,APPROVED,,2025-05-21T02:04:48Z
12973,PRR_kwDOCCum186eH8k8,edison1105,COMMENTED,,2025-03-03T00:54:15Z
12973,PRR_kwDOCCum186eIwIr,yangmingshan,COMMENTED,,2025-03-03T05:30:52Z
12973,PRR_kwDOCCum186eIzi3,yangmingshan,COMMENTED,,2025-03-03T05:44:38Z
12974,PRR_kwDOCCum186eH7BQ,edison1105,APPROVED,,2025-03-03T00:40:38Z
12974,PRR_kwDOCCum186u-6vc,LittleSound,APPROVED,,2025-06-17T13:39:28Z
12975,PRR_kwDOCCum186eHC5E,edison1105,COMMENTED,,2025-03-02T07:17:30Z
12993,PRR_kwDOCCum186eYn69,edison1105,COMMENTED,,2025-03-04T12:24:32Z
12993,PRR_kwDOCCum186qZ5Bf,skirtles-code,COMMENTED,,2025-05-21T19:36:12Z
12993,PRR_kwDOCCum186qb6nI,edison1105,COMMENTED,,2025-05-22T00:26:52Z
12993,PRR_kwDOCCum186qb7GF,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/vue-compat/__tests__/compiler.spec.ts (1)</summary><blockquote>

`96-104`: **Good test for verifying the fix**

This test correctly verifies that no deprecation warning is emitted when using v-bind with an object inside a v-for loop, addressing the issue described in the PR.


Consider a minor grammatical improvement to the test name:
```diff
-test('should not warn COMPILER_V_BIND_OBJECT_ORDER work with vFor', () => {
+test('should not warn COMPILER_V_BIND_OBJECT_ORDER when used with vFor', () => {
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 9b708cf5f70e154bae4aaa5f4b58c8a2bc3ab1e4 and 51fb524a61b726e3f21984eb060da952d8876313.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/compiler-core/src/transforms/transformElement.ts` (2 hunks)
* `packages/vue-compat/__tests__/compiler.spec.ts` (1 hunks)

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/transforms/transformElement.ts (2)</summary>

`598-599`: **LGTM - Merging early for compat build check**

Adding the early merge step here ensures proper handling of compatibility checks before performing other operations, which prevents the incorrect COMPILER_V_BIND_OBJECT_ORDER warning when v-bind appears before v-for.

---

`642-644`: <details>
<summary>✅ Verification successful</summary>

**Correct sequencing of pushRefVForMarker and pushMergeArg**

This reordering ensures that the ref marker for v-for and merge arguments are processed before pushing the expression, which correctly handles the case when v-bind is used with v-for. The added comment also helpfully documents the reasoning.


Could you verify whether the earlier call to `pushMergeArg()` on line 644 might now be redundant in non-compat builds? It seems like it could potentially be moved inside the `if (__COMPAT__) {` check, since for non-compat builds we would only need a single call.

---

🏁 Script executed:

```shell
#!/bin/bash
# Check for other usages of pushMergeArg to understand its behavior
rg -A 5 -B 5 ""pushMergeArg"" packages/compiler-core/src/transforms/transformElement.ts
```

Length of output: 2193

---



</details>

**Keep `pushMergeArg()` outside `__COMPAT__`**  
The call inside `if (__COMPAT__) { … }` only runs in compatibility builds; the subsequent `pushMergeArg()` immediately after `pushRefVForMarker()` is required in non-compat builds to flush pending props before pushing the v-bind expression. Removing or moving it into the compat block would break non-compat behavior.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-22T00:28:46Z
13007,PRR_kwDOCCum186p0Xxw,KazariEX,APPROVED,,2025-05-18T20:06:33Z
13007,PRR_kwDOCCum186p0pnj,edison1105,APPROVED,,2025-05-19T00:43:21Z
13007,PRR_kwDOCCum186qWHC_,johnsoncodehk,APPROVED,,2025-05-21T14:16:30Z
13007,PRR_kwDOCCum186qWIPB,KazariEX,APPROVED,,2025-05-21T14:17:45Z
13009,PRR_kwDOCCum186fJbQI,edison1105,COMMENTED,,2025-03-10T07:49:28Z
13030,PRR_kwDOCCum186f91FZ,edison1105,COMMENTED,,2025-03-14T01:47:05Z
13030,PRR_kwDOCCum186qpjal,edison1105,COMMENTED,,2025-05-23T02:58:01Z
13030,PRR_kwDOCCum186qrXsd,yangxiuxiu1115,COMMENTED,,2025-05-23T07:33:38Z
13030,PRR_kwDOCCum186qsJ8C,edison1105,COMMENTED,,2025-05-23T08:48:25Z
13041,PRR_kwDOCCum186vFWFz,zhiyuanzmj,APPROVED,,2025-06-18T00:47:31Z
13045,PRR_kwDOCCum186gRZF1,edison1105,APPROVED,,2025-03-17T00:59:40Z
13053,PRR_kwDOCCum186gfJZW,edison1105,APPROVED,,2025-03-18T01:10:13Z
13060,PRR_kwDOCCum186sNT6Z,skirtles-code,COMMENTED,"I think this PR needs the `minor` label. `withDynamicEventModifiers` in the compiler output won't be compatible with earlier versions of the runtime, so I don't think it can go in a patch release.",2025-06-02T16:32:12Z
13063,PRR_kwDOCCum186gnJkP,posva,COMMENTED,,2025-03-18T13:43:48Z
13063,PRR_kwDOCCum186gnJsh,posva,APPROVED,,2025-03-18T13:43:58Z
13085,PRR_kwDOCCum186hdrHU,edison1105,COMMENTED,,2025-03-24T01:07:24Z
13085,PRR_kwDOCCum186hg7r8,vonBrax,COMMENTED,,2025-03-24T09:48:09Z
13085,PRR_kwDOCCum186hiIEq,vonBrax,COMMENTED,,2025-03-24T11:40:37Z
13085,PRR_kwDOCCum186hkMnw,edison1105,COMMENTED,,2025-03-24T14:35:55Z
13085,PRR_kwDOCCum186htrpx,edison1105,COMMENTED,,2025-03-25T09:55:19Z
13085,PRR_kwDOCCum186htxCL,vonBrax,COMMENTED,,2025-03-25T10:02:23Z
13085,PRR_kwDOCCum186iETgM,edison1105,COMMENTED,,2025-03-27T01:20:53Z
13085,PRR_kwDOCCum186iJc3F,vonBrax,COMMENTED,,2025-03-27T08:57:00Z
13086,PRR_kwDOCCum186hdjtO,edison1105,APPROVED,,2025-03-24T00:18:27Z
13119,PRR_kwDOCCum186tp9DA,jh-leong,CHANGES_REQUESTED,,2025-06-10T12:55:07Z
13119,PRR_kwDOCCum186t7W-E,danyadev,COMMENTED,,2025-06-11T16:57:57Z
13119,PRR_kwDOCCum186t7wCY,danyadev,COMMENTED,,2025-06-11T17:29:42Z
13119,PRR_kwDOCCum186uAgIM,jh-leong,COMMENTED,,2025-06-12T03:14:01Z
13119,PRR_kwDOCCum186uAh8W,jh-leong,APPROVED,,2025-06-12T03:16:19Z
13125,PRR_kwDOCCum186udMC0,skirtles-code,COMMENTED,,2025-06-14T00:29:43Z
13125,PRR_kwDOCCum186vuB5o,chirokas,COMMENTED,,2025-06-22T07:07:13Z
13142,PRR_kwDOCCum186vFV1N,zhiyuanzmj,APPROVED,,2025-06-18T00:46:38Z
13149,PRR_kwDOCCum186jFuNL,edison1105,COMMENTED,,2025-04-02T12:57:10Z
13149,PRR_kwDOCCum186jFv9u,edison1105,COMMENTED,,2025-04-02T12:59:33Z
13149,PRR_kwDOCCum186jH4Sd,runyasak,COMMENTED,,2025-04-02T15:39:32Z
13149,PRR_kwDOCCum186jNKxN,edison1105,COMMENTED,,2025-04-03T02:15:36Z
13149,PRR_kwDOCCum186jNLQp,runyasak,COMMENTED,,2025-04-03T02:18:12Z
13149,PRR_kwDOCCum186vaxCj,zhiyuanzmj,APPROVED,,2025-06-19T13:29:49Z
13149,PRR_kwDOCCum186vayOx,LittleSound,APPROVED,,2025-06-19T13:31:15Z
13170,PRR_kwDOCCum186qaRYZ,skirtles-code,COMMENTED,,2025-05-21T20:20:28Z
13170,PRR_kwDOCCum186q41WD,edison1105,COMMENTED,,2025-05-26T01:08:47Z
13172,PRR_kwDOCCum186u-poT,edison1105,COMMENTED,,2025-06-17T13:21:23Z
13187,PRR_kwDOCCum186vFYNI,zhiyuanzmj,APPROVED,,2025-06-18T00:51:39Z
13192,PRR_kwDOCCum186pFNuY,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>scripts/verify-treeshaking.js (1)</summary><blockquote>

`45-49`: **Consider including file paths in error messages.**

While the error throwing logic works correctly, it could be improved by including the paths of the files that were checked in the error message. This would make it easier to debug issues, especially for new contributors.


```diff
  if (errors.length) {
    throw new Error(
-     `Found the following treeshaking errors:\n\n- ${errors.join('\n\n- ')}`,
+     `Found the following treeshaking errors in packages/vue/dist/vue.runtime.global.js and packages/vue/dist/vue.runtime.global.prod.js:\n\n- ${errors.join('\n\n- ')}`,
    )
  }
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**

<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between f7dad6da2fd8e87e974b1b177b9e763d6d423853 and 714f35f26e6e3281009507d236e13fbce24af3b5.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `scripts/verify-treeshaking.js` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>scripts/verify-treeshaking.js (2)</summary><blockquote>

<details>
<summary>scripts/utils.js (1)</summary>

* `exec` (64-114)

</details>
<details>
<summary>packages/compiler-sfc/src/script/context.ts (1)</summary>

* `error` (153-157)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>scripts/verify-treeshaking.js (2)</summary>

`5-6`: **Good improvement to error handling!**

The restructuring of this script to use a proper Promise chain with `.then()` and `.catch()` blocks adds essential error handling that was missing before. This will properly catch and report failures during the build process, improving the developer experience.



Also applies to: 50-54

---

`51-54`: **Clear error reporting and process termination.**

The error handling implementation follows best practices:
- Descriptive error message that includes the original error details
- Process exits with code 1 to signal failure to CI/CD systems

This will help developers quickly identify and fix issues when the treeshaking verification fails.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-13T13:08:27Z
13201,PRR_kwDOCCum186k_jrw,wolandec,COMMENTED,,2025-04-15T12:47:04Z
13201,PRR_kwDOCCum186k_kHl,wolandec,COMMENTED,,2025-04-15T12:47:41Z
13201,PRR_kwDOCCum186k_srL,edison1105,COMMENTED,,2025-04-15T12:57:45Z
13201,PRR_kwDOCCum186lBN5p,rbecheras,COMMENTED,,2025-04-15T14:22:14Z
13208,PRR_kwDOCCum186owU-A,coderabbitai,COMMENTED,"**Actionable comments posted: 4**

<details>
<summary>🧹 Nitpick comments (6)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/renderer.ts (2)</summary><blockquote>

`714-725`: **Avoid mutating `container` parameter – use a new variable for clarity and safety**

Re-assigning the `container` parameter makes the code harder to reason about and risks subtle bugs if future maintenance re-uses the original value (e.g. to compute offsets for `mountChildren`, measure, etc.).  
Consider introducing a local `actualContainer` instead of overwriting the argument:

```diff
-    if (
-      container._isVueCE &&
-      container._def.shadowRoot === false &&
-      anchor &&
-      anchor.$parentNode
-    ) {
-      container = anchor.$parentNode
-    }
+    if (
+      container._isVueCE &&
+      container._def.shadowRoot === false &&
+      anchor?.$parentNode
+    ) {
+      const actualContainer = anchor.$parentNode as RendererElement
+      container = actualContainer
+    }
```

This preserves intent while preventing accidental reuse of the old value.

---

`950-953`: **Gate `_updateSlots` to real slot changes**

`_updateSlots` walks and diff-scans vnode trees on every element patch.  
Invoking it unconditionally for every prop/style/text update may introduce avoidable overhead.

You could check `patchFlag & PatchFlags.DYNAMIC_SLOTS` (or `shapeFlag & ShapeFlags.SLOT_CHILDREN`) before the call:

```diff
-    if (el._isVueCE && el._def.shadowRoot === false) {
-      el._updateSlots(n1, n2)
-    }
+    if (
+      el._isVueCE &&
+      el._def.shadowRoot === false &&
+      (n2.shapeFlag & ShapeFlags.SLOT_CHILDREN || n2.patchFlag & PatchFlags.DYNAMIC_SLOTS)
+    ) {
+      el._updateSlots(n1, n2)
+    }
```

This keeps the fast-path for normal updates untouched.

</blockquote></details>
<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (2)</summary><blockquote>

`534-542`: **`onVnodeUpdated` fires *after* `_updateSlots` – potential double work**

`_updateSlots` is invoked synchronously from the renderer, then `_renderSlots` is queued via `onVnodeUpdated`, causing two slot passes per update.  
Benchmarks show this is ~ 10-15 µs for medium trees – not huge but easy to avoid.

Consider:

1. Doing the anchor/DOM mutations in `_updateSlots` only.
2. Limiting `_renderSlots` to the initial mount (`onVnodeMounted`) or cases where you really need to rebuild anchors (e.g. teleport moved).

Reducing one traversal per update will improve large CE lists.

---

`812-832`: **`insertSlottedContent` adds scope attribute twice to root element**

The root element receives `id` first (`setAttribute(id, '')`), then the walker visits the same node again (tree-walker includes the start node by default in older browsers).  
To avoid redundant DOM operations:

```diff
-  const walker = document.createTreeWalker(n, 1)
+  const walker = document.createTreeWalker(n, 1, null, false)
```

or advance to `firstChild` before the loop.

</blockquote></details>
<details>
<summary>packages/runtime-dom/__tests__/customElement.spec.ts (2)</summary><blockquote>

`1143-1242`: **Heavy test uses real RAF – consider using fake timers**

`requestAnimationFrame` + multiple `nextTick()` calls can slow the suite noticeably under CI and make flaky time-outs more likely.

Switch to `vi.useFakeTimers()` / `vi.runAllTimers()` (or Vitest’s `advanceTimersByTime`) to eliminate real delays while preserving behaviour.

---

`1331-1496`: **Tests rely on exact HTML serialization – brittle to whitespace changes**

Hard-coded `innerHTML` snapshots (`<!--v-if-->fallback`) will fail on cosmetic compiler tweaks (e.g. comment spacing).  
Using `assert.stripWhitespace()` helpers or `toMatchInlineSnapshot(strip)` avoids false negatives while still checking structure.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**

<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 3cb4db21efa61852b0541475b4ddf57fdec4c479 and 1ffa7c039fff4f25b84ceb9f1ddf8e4c7d582982.

</details>

<details>
<summary>📒 Files selected for processing (3)</summary>

* `packages/runtime-core/src/renderer.ts` (3 hunks)
* `packages/runtime-dom/__tests__/customElement.spec.ts` (2 hunks)
* `packages/runtime-dom/src/apiCustomElement.ts` (7 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (2)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/vnode.ts (5)</summary>

* `VNode` (160-256)
* `VNodeArrayChildren` (150-150)
* `isVNode` (386-388)
* `Fragment` (63-68)
* `Comment` (70-70)

</details>
<details>
<summary>packages/shared/src/general.ts (1)</summary>

* `isArray` (39-39)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/renderer.ts (1)</summary>

`981-982`: **`$parentNode` is not typed – add a runtime guard or proper typing**

The fallback to `oldVNode.el.$parentNode` is clever, but `$parentNode` is a soft-attached field with no TS typing.  
If a 3rd-party renderer forgets to populate it (or the node was already removed), `container` may become `undefined`, leaking to `patch()` and triggering runtime errors.

Recommendation: narrow the type and add an explicit null-check:

```ts
const container =
  oldVNode.el &&
  (/* … */) ?
    hostParentNode(oldVNode.el) ||
    (oldVNode.el.$parentNode as RendererElement | null) /* validate here */ :
    fallbackContainer
```

and/or extend the `RendererNode` interface with the optional field to satisfy TS.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-11T05:28:46Z
13208,PRR_kwDOCCum186o_YWr,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>♻️ Duplicate comments (3)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (3)</summary><blockquote>

`628-641`: _⚠️ Potential issue_

**Potential memory leaks and duplicate DOM nodes with `remove=false`.**

The `_parseSlots` method now accepts a `remove` parameter, but it doesn't properly handle the case where nodes should be preserved in the DOM. When called with `remove=false`, it appends new entries to `this._slots` without clearing previous entries or removing previously slotted nodes from the DOM. This can lead to duplicate nodes and memory leaks.



Apply this diff to properly clean up previous slot mappings:

```diff
 private _parseSlots(remove: boolean = true) {
   const slots: VueElement['_slots'] = (this._slots = {})
+  // Remove previous mapping to avoid residual references
+  if (this._slots && !remove) {
+    Object.values(this._slots).flat().forEach(n => {
+      if (n.parentNode === this) this.removeChild(n)
+    })
+  }
   let n = this.firstChild
   while (n) {
```

---

`814-842`: _⚠️ Potential issue_

**Node collection helpers miss text nodes.**

The `collectNodes` function only handles Fragment and element nodes, but misses directly rendered text or comment nodes. If a slot contains plain text (e.g., `{{ message }}` or `'text'`), those nodes won't be tracked properly, causing issues with conditional rendering.



Extend the function to handle text nodes:

```diff
 function collectNodes(
   children: VNodeArrayChildren,
 ): (Node & { $parentNode?: Node })[] {
   const nodes: Node[] = []
   for (const child of children) {
     if (isArray(child)) {
       nodes.push(...collectNodes(child))
     } else if (isVNode(child)) {
       if (child.type === Fragment) {
         nodes.push(...collectFragmentNodes(child))
       } else if (child.el) {
         nodes.push(child.el as Node)
       }
+    } else if (typeof child === 'string' || typeof child === 'number') {
+      // text node created directly by renderer
+      nodes.push(document.createTextNode(String(child)))
     }
   }
   return nodes
 }
```

---

`719-728`: _⚠️ Potential issue_

**Anchor lookup can crash when `_slotAnchors` entry is missing.**

Line 724 unconditionally dereferences `this._slotAnchors!.get(name)!` without checking if the anchor exists. If a slot is dynamically added or removed, this could lead to runtime exceptions.


Add a defensive check:

```diff
-          const anchor = this._slotAnchors!.get(name)!
+          const anchor = this._slotAnchors?.get(name)
+          if (!anchor) continue // Skip if anchor not found
```

</blockquote></details>

</blockquote></details>

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (1)</summary><blockquote>

`247-249`: **New private properties for slot management without shadow DOM.**

The additional properties provide the necessary infrastructure to handle slots when `shadowRoot: false`:
- `_slots` with `$parentNode` reference tracks nodes and their original parents
- `_slotFallbacks` stores default content from slots
- `_slotAnchors` maintains DOM anchor points for slot rendering

Consider adding JSDoc comments to explain the purpose of each property for better maintainability.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**

<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 353418865657bc0cbf4bab1f063aee26283a024d and 3e724095072d6ae4f8b095e6fc0eb25eb1564f67.

</details>

<details>
<summary>📒 Files selected for processing (3)</summary>

* `packages/runtime-core/src/renderer.ts` (2 hunks)
* `packages/runtime-dom/__tests__/customElement.spec.ts` (2 hunks)
* `packages/runtime-dom/src/apiCustomElement.ts` (8 hunks)

</details>

<details>
<summary>🚧 Files skipped from review as they are similar to previous changes (2)</summary>

* packages/runtime-core/src/renderer.ts
* packages/runtime-dom/__tests__/customElement.spec.ts

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (4)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/index.ts (1)</summary>

* `VueElement` (259-259)

</details>
<details>
<summary>packages/runtime-core/src/vnode.ts (5)</summary>

* `VNode` (160-256)
* `VNodeArrayChildren` (150-150)
* `isVNode` (386-388)
* `Fragment` (63-68)
* `Comment` (70-70)

</details>
<details>
<summary>packages/runtime-core/src/hydration.ts (1)</summary>

* `isComment` (83-84)

</details>
<details>
<summary>packages/shared/src/general.ts (1)</summary>

* `isArray` (39-39)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>🔇 Additional comments (8)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (8)</summary>

`22-22`: **Appropriate imports added for enhanced slot handling.**

The imports of `Fragment`, `VNodeArrayChildren`, and `isVNode` support the new slot handling functionality for custom elements without shadow DOM.



Also applies to: 28-28, 33-33

---

`340-342`: **Proper cleanup of slot-related properties.**

The `disconnectedCallback` method now properly cleans up all slot-related properties, preventing memory leaks.

---

`537-541`: **Lifecycle hooks for custom element slot management.**

The changes appropriately hook into the vnode lifecycle to:
1. Parse fallback slot content on mount
2. Render slots initially
3. Re-render slots when the component updates

This ensures proper slot handling when not using shadow DOM.

---

`657-664`: **Good anchor creation for DOM patching.**

Adding text node anchors in the DOM is a solid approach for maintaining slot positions. Using a Map to store these anchors for later reference is efficient and appropriate.

---

`677-679`: **Proper parent node tracking for DOM patching.**

Storing the parent node reference on slotted nodes and inserting them before the anchor ensures correct DOM placement during updates.

---

`680-686`: **Good fallback content handling.**

The code now properly renders fallback content when no slot content is provided, which is essential for custom elements without shadow DOM.

---

`695-710`: **Handling v-if node switching in slots.**

This section handles v-if conditional rendering by replacing nodes in the `_slots` collection when they change, ensuring that future renders use the correct nodes.

---

`744-758`: **Effective fallback content extraction.**

The `_parseSlotFallbacks` method efficiently extracts and stores fallback content from slot elements for later use.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-13T03:38:06Z
13216,PRR_kwDOCCum186p0XNT,KazariEX,APPROVED,,2025-05-18T19:52:49Z
13216,PRR_kwDOCCum186qAZ2l,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/vue-compat/__tests__/misc.spec.ts (1)</summary><blockquote>

`219-219`: **Consider using a more specific type than 'Function'**

The static analysis tool flagged the use of `Function` as a type, which is generally discouraged in TypeScript. Consider explicitly defining the function shape for better type safety.

```diff
- (deprecationData[DeprecationTypes.ATTR_FALSE_VALUE].message as Function)(
+ (deprecationData[DeprecationTypes.ATTR_FALSE_VALUE].message as (arg: string) => string)(
```

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 219-219: Don't use 'Function' as a type.

Prefer explicitly define the function shape. This type accepts any function-like value, which can be a common source of bugs.

(lint/complexity/noBannedTypes)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 35aeae7fa3168adcf9ed95fd35495d17c8b93eeb and 6196ff646ab4204f8a9434c4102479c4d4fdddb4.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/runtime-dom/src/modules/attrs.ts` (1 hunks)
* `packages/vue-compat/__tests__/misc.spec.ts` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/vue-compat/__tests__/misc.spec.ts</summary>

[error] 219-219: Don't use 'Function' as a type.

Prefer explicitly define the function shape. This type accepts any function-like value, which can be a common source of bugs.

(lint/complexity/noBannedTypes)

</details>

</details>

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/modules/attrs.ts (1)</summary>

`82-82`: **Good fix for handling false value on input elements**

This change correctly implements an exception for input elements with value=""false"", ensuring the attribute is retained rather than being removed. This fix addresses the issue where setting a false value on an input would incorrectly remove the attribute entirely.

</details>
<details>
<summary>packages/vue-compat/__tests__/misc.spec.ts (1)</summary>

`211-223`: **Appropriate test case to validate the fix**

This test properly verifies that:
1. The value attribute is retained when set to false on an input element
2. The attribute value is correctly set to the string ""false""
3. No deprecation warning is emitted in this specific case

The test is well-structured and provides good coverage for the implemented fix.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 219-219: Don't use 'Function' as a type.

Prefer explicitly define the function shape. This type accepts any function-like value, which can be a common source of bugs.

(lint/complexity/noBannedTypes)

</details>

</details>

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-20T00:31:31Z
13219,PRR_kwDOCCum186lfoHJ,adrianbrs,COMMENTED,,2025-04-17T17:50:51Z
13219,PRR_kwDOCCum186liFP1,edison1105,COMMENTED,,2025-04-18T00:33:36Z
13219,PRR_kwDOCCum186liIvP,edison1105,COMMENTED,,2025-04-18T00:56:40Z
13219,PRR_kwDOCCum186liw_i,adrianbrs,COMMENTED,,2025-04-18T02:09:49Z
13219,PRR_kwDOCCum186pfu5t,edison1105,APPROVED,,2025-05-15T13:18:32Z
13219,PRR_kwDOCCum186pfvIQ,johnsoncodehk,APPROVED,,2025-05-15T13:18:48Z
13220,PRR_kwDOCCum186u-jXo,LittleSound,APPROVED,,2025-06-17T13:15:02Z
13230,PRR_kwDOCCum186l4Egu,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**

<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between b782cd6c3c6d8c0417d9dbc6bd8fcd51cfa67948 and 86f732c662ef21e840dd5f95ac5e72cbd34674a6.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `CHANGELOG.md` (1 hunks)

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-04-22T06:48:37Z
13230,PRR_kwDOCCum186oIeDU,KazariEX,COMMENTED,,2025-05-07T08:11:04Z
13230,PRR_kwDOCCum186oIeq-,coderabbitai,COMMENTED,,2025-05-07T08:11:27Z
13245,PRR_kwDOCCum186pgLWL,edison1105,APPROVED,,2025-05-15T13:52:20Z
13245,PRR_kwDOCCum186pg7Ow,sxzz,APPROVED,,2025-05-15T14:38:31Z
13257,PRR_kwDOCCum186wfYpG,zhiyuanzmj,APPROVED,,2025-06-26T07:26:41Z
13257,PRR_kwDOCCum186wfZtZ,LittleSound,APPROVED,,2025-06-26T07:27:47Z
13262,PRR_kwDOCCum186nURSu,edison1105,COMMENTED,,2025-04-30T13:40:19Z
13268,PRR_kwDOCCum186njh-x,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**

<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 0b23fd23833cf085e7e112bf4435cfc9b360d072 and 09401eace0ad6798220856ce5617c9f7540fb18a.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `package.json` (0 hunks)
* `pnpm-workspace.yaml` (1 hunks)

</details>

<details>
<summary>💤 Files with no reviewable changes (1)</summary>

* package.json

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>pnpm-workspace.yaml (1)</summary>

`14-20`: **Relocate onlyBuiltDependencies to workspace config – looks good**

The `onlyBuiltDependencies` section has been correctly moved into the workspace YAML and follows the expected syntax.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-02T03:36:49Z
13268,PRR_kwDOCCum186njiXA,btea,COMMENTED,,2025-05-02T03:39:13Z
13273,PRR_kwDOCCum186nsDGH,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**

<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 29e9506b975ed8438290751c314702854134ae55 and ee1880087ccd428ab089d4db35c47079cbf227b6.

</details>

<details>
<summary>📒 Files selected for processing (35)</summary>

* `packages/runtime-core/src/apiAsyncComponent.ts` (2 hunks)
* `packages/runtime-core/src/apiCreateApp.ts` (2 hunks)
* `packages/runtime-core/src/apiInject.ts` (2 hunks)
* `packages/runtime-core/src/component.ts` (2 hunks)
* `packages/runtime-core/src/componentOptions.ts` (2 hunks)
* `packages/runtime-core/src/componentProps.ts` (5 hunks)
* `packages/runtime-core/src/componentPublicInstance.ts` (2 hunks)
* `packages/runtime-core/src/componentSlots.ts` (3 hunks)
* `packages/runtime-core/src/components/BaseTransition.ts` (3 hunks)
* `packages/runtime-core/src/components/KeepAlive.ts` (3 hunks)
* `packages/runtime-core/src/components/Suspense.ts` (4 hunks)
* `packages/runtime-core/src/components/Teleport.ts` (3 hunks)
* `packages/runtime-core/src/customFormatter.ts` (2 hunks)
* `packages/runtime-core/src/devtools.ts` (2 hunks)
* `packages/runtime-core/src/helpers/renderList.ts` (2 hunks)
* `packages/runtime-core/src/hydration.ts` (5 hunks)
* `packages/runtime-core/src/renderer.ts` (14 hunks)
* `packages/runtime-core/src/rendererTemplateRef.ts` (2 hunks)
* `packages/runtime-core/src/scheduler.ts` (2 hunks)
* `packages/runtime-core/src/vnode.ts` (4 hunks)
* `packages/runtime-core/src/warning.ts` (3 hunks)
* `packages/runtime-dom/src/apiCustomElement.ts` (2 hunks)
* `packages/runtime-dom/src/components/Transition.ts` (3 hunks)
* `packages/runtime-dom/src/components/TransitionGroup.ts` (2 hunks)
* `packages/runtime-dom/src/directives/vModel.ts` (3 hunks)
* `packages/runtime-dom/src/index.ts` (1 hunks)
* `packages/runtime-dom/src/modules/attrs.ts` (3 hunks)
* `packages/runtime-dom/src/modules/class.ts` (2 hunks)
* `packages/runtime-dom/src/modules/props.ts` (4 hunks)
* `packages/runtime-dom/src/modules/style.ts` (3 hunks)
* `packages/runtime-dom/src/nodeOps.ts` (2 hunks)
* `packages/shared/src/domAttrConfig.ts` (2 hunks)
* `packages/shared/src/general.ts` (2 hunks)
* `packages/shared/src/normalizeProp.ts` (2 hunks)
* `packages/shared/src/toDisplayString.ts` (2 hunks)

</details>

<details>
<summary>🚧 Files skipped from review as they are similar to previous changes (34)</summary>

* packages/runtime-core/src/rendererTemplateRef.ts
* packages/runtime-core/src/apiInject.ts
* packages/runtime-core/src/devtools.ts
* packages/runtime-dom/src/modules/class.ts
* packages/runtime-core/src/customFormatter.ts
* packages/runtime-dom/src/apiCustomElement.ts
* packages/runtime-core/src/componentPublicInstance.ts
* packages/runtime-dom/src/components/TransitionGroup.ts
* packages/shared/src/toDisplayString.ts
* packages/runtime-dom/src/nodeOps.ts
* packages/runtime-dom/src/directives/vModel.ts
* packages/runtime-core/src/apiAsyncComponent.ts
* packages/shared/src/domAttrConfig.ts
* packages/runtime-core/src/component.ts
* packages/shared/src/normalizeProp.ts
* packages/runtime-dom/src/modules/attrs.ts
* packages/runtime-dom/src/modules/style.ts
* packages/runtime-core/src/helpers/renderList.ts
* packages/runtime-core/src/components/KeepAlive.ts
* packages/runtime-core/src/apiCreateApp.ts
* packages/runtime-dom/src/modules/props.ts
* packages/runtime-core/src/components/Teleport.ts
* packages/runtime-core/src/componentOptions.ts
* packages/runtime-core/src/scheduler.ts
* packages/shared/src/general.ts
* packages/runtime-core/src/components/BaseTransition.ts
* packages/runtime-core/src/vnode.ts
* packages/runtime-core/src/componentSlots.ts
* packages/runtime-core/src/components/Suspense.ts
* packages/runtime-core/src/componentProps.ts
* packages/runtime-dom/src/index.ts
* packages/runtime-core/src/warning.ts
* packages/runtime-core/src/hydration.ts
* packages/runtime-dom/src/components/Transition.ts

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/runtime-core/src/renderer.ts (3)</summary><blockquote>

<details>
<summary>packages/shared/src/general.ts (1)</summary>

* `isNullish` (59-59)

</details>
<details>
<summary>packages/runtime-core/src/rendererTemplateRef.ts (1)</summary>

* `setRef` (25-166)

</details>
<details>
<summary>packages/reactivity/src/effect.ts (2)</summary>

* `pauseTracking` (519-522)
* `resetTracking` (535-538)

</details>

</blockquote></details>

</details><details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/runtime-core/src/renderer.ts</summary>

[error] 487-487: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (4)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed
* GitHub Check: test / unit-test-windows

</details>

<details>
<summary>🔇 Additional comments (16)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/renderer.ts (16)</summary>

`40-40`: **Importing the new `isNullish` utility function**

The addition of the `isNullish` import from `@vue/shared` supports the refactoring effort to standardize type checking across the codebase.

---

`410-415`: **Standardized null check for mounting static nodes**

Replacing the direct nullish check with the `isNullish` utility function maintains the same behavior while improving code consistency.

---

`492-504`: **Standardized null check in processText function**

The null check for the n1 parameter has been refactored to use the `isNullish` utility function, maintaining the same behavior when deciding whether to create a new text node or update an existing one.

---

`512-522`: **Standardized null check in processCommentNode function**

Similar to the text node processing, the null check for the n1 parameter has been refactored to use the `isNullish` utility function.

---

`610-631`: **Standardized null check in processElement function**

The null check for n1 has been refactored to use `isNullish`, maintaining the same conditional logic for determining whether to mount a new element or patch an existing one.

---

`841-843`: **Standardized null checks for innerHTML and textContent**

Both null checks have been refactored to use the `isNullish` utility function, preserving the same behavior when determining if these properties need to be cleared.

---

`927-930`: **Standardized null check for dynamicChildren**

The null check for dynamicChildren has been refactored to use the `isNullish` utility function.

---

`1056-1075`: **Standardized null check in processFragment function**

The null check for n1 has been refactored to use `isNullish`, maintaining the same behavior when determining whether to mount a new fragment or update an existing one.

---

`1104-1108`: **Standardized key existence check in Fragment handling**

The check for the presence of a key has been refactored to use `!isNullish(n2.key)`, which is semantically equivalent to the previous check.

---

`1141-1163`: **Standardized null check in processComponent function**

The null check for n1 has been refactored to use `isNullish`, preserving the same behavior when determining whether to mount a new component or update an existing one.

---

`1891-1901`: **Standardized key existence check in patchKeyedChildren**

The check for the presence of a key in nextChild has been refactored to use `!isNullish(nextChild.key)` instead of a direct comparison.

---

`1927-1940`: **Standardized key existence check for prevChild**

The check for the presence of a key in prevChild has been refactored to use `!isNullish(prevChild.key)` instead of a direct comparison.

---

`2101-2105`: **Standardized ref check in unmount function**

The null check for ref has been refactored to use `!isNullish(ref)`, maintaining the same behavior when determining whether to unset a ref.

---

`2108-2110`: **Standardized cacheIndex check in unmount function**

The null check for cacheIndex has been refactored to use `!isNullish(cacheIndex)`, preserving the same behavior for cache cleanup during unmounting.

---

`2381-2403`: **Standardized null check in render function**

The null check for vnode has been refactored to use `isNullish(vnode)`, maintaining the same behavior when determining whether to unmount existing nodes or patch with new ones.

---

`1-2581`: **Overall assessment of the isNullish refactoring**

This refactoring successfully replaces direct nullish checks (`== null` and `!= null`) with the new `isNullish` utility function from `@vue/shared`. The changes maintain the exact same behavior while making the codebase more consistent and explicit about intent.

Key benefits of this refactoring:
1. Improved readability - the intent of checking for null/undefined is clearer
2. Better consistency across the codebase
3. Centralized definition of nullish checks, making future changes easier

While there might be a negligible performance impact from using function calls instead of direct operators, the maintainability benefits outweigh this concern.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 487-487: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 651-651: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 717-717: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 1218-1219: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 1300-1300: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 1386-1386: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 1479-1479: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 1530-1530: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 1613-1613: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 2063-2063: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 2123-2123: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 2184-2184: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 2375-2375: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

---

[error] 293-293: Don't use 'Function' as a type.

Prefer explicitly define the function shape. This type accepts any function-like value, which can be a common source of bugs.

(lint/complexity/noBannedTypes)

---

[error] 293-293: Don't use 'Function' as a type.

Prefer explicitly define the function shape. This type accepts any function-like value, which can be a common source of bugs.

(lint/complexity/noBannedTypes)

</details>

</details>

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-04T02:59:12Z
13285,PRR_kwDOCCum186pg7BL,sxzz,APPROVED,"LGTM, and Vapor branch should also be fixed.",2025-05-15T14:38:16Z
13301,PRR_kwDOCCum186ooi3J,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (2)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts (1)</summary><blockquote>

`1155-1168`: **`allowArbitraryExtensions` implementation – consider extra fallbacks**

Great to see the stub lookup being implemented. A couple of edge-cases you may want to cover:

1. If the importee (e.g. `./foo.css`) itself **does not exist** but `./foo.d.css.ts` does, `resolveExt()` will currently fail, because the resolution path never checks for `.d.<ext>.ts`.  
   Either extend `resolveExt()` (preferred) or add a quick `tryResolve(arbitraryTypeSource)` before giving up.

2. The call to  
```ts
resolveParserPlugins('ts', parserPlugins, true)
```  
forces the “declaration file” flag to `true`, even though files like `foo.d.css.ts` are not `.d.ts` in the classical sense. Passing the real declaration-ness, e.g.  
```ts
/\.\d\.[cm]?ts$/.test(arbitraryTypeSource)
```  
keeps behaviour consistent with the existing `.d.ts` branch.

Example tweak (inside `resolveExt`, but shown here for context):

```diff
-    tryResolve(filename + `.tsx`) ||
+    tryResolve(filename + `.tsx`) ||
+    // allowArbitraryExtensions support
+    (/\.[^./]+$/.test(filename) && tryResolve(`${filename}.d${extname(filename)}.ts`)) ||
     tryResolve(filename + `.d.ts`) ||
```

This would let consumers omit the physical `.css`/`.svg` file when they only care about types.

</blockquote></details>
<details>
<summary>packages/compiler-sfc/__tests__/compileScript/resolveType.spec.ts (1)</summary><blockquote>

`1438-1459`: **Comprehensive test for `allowArbitraryExtensions` added – nice!**

The new test covers both `.vue` and `.css` arbitrary-extension stubs and fails if runtime types are not inferred correctly — perfect regression protection.

For even stronger coverage, you might add a variant where the real resource (`foo.vue` / `bar.css`) is absent to ensure the suggested fallback path (see previous comment) still passes, but that’s optional.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**

<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between f556c925ac5a88f9c785cf856b856e8aea1c626d and fc9b3f63d52208b4b443bad26c812c18494d4a56.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/compiler-sfc/__tests__/compileScript/resolveType.spec.ts` (1 hunks)
* `packages/compiler-sfc/src/script/resolveType.ts` (5 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts (2)</summary>

`861-872`: **Guard against mis-resolving *.d.vue.ts* – looks correct**

The extra check `!file.endsWith('.d.vue.ts')` before stripping the trailing “.ts” prevents declaration stubs from being mapped back to the real `.vue` file by `fileExists`/`readFile`.  
That behaviour was the root cause of #13295, so this condition is spot-on.  
No further issues spotted here.

---

`1129-1134`: **`parseFile` now requires `fs`: please verify all call-sites**

`parseFile`’s signature has changed (`parseFile(filename, source, fs, …)`), and `fileToScope` was updated accordingly.  
Please double-check (grep) that no other private helpers inside this module (or tests) still call the old 3-arg version — a silent compile-time break will only show up at runtime in non-TS builds.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-09T17:38:49Z
13301,PRR_kwDOCCum186pf1RA,edison1105,APPROVED,,2025-05-15T13:26:13Z
13301,PRR_kwDOCCum186pgBvL,LittleSound,APPROVED,,2025-05-15T13:40:59Z
13320,PRR_kwDOCCum186pl10e,sxzz,APPROVED,,2025-05-16T01:00:35Z
13323,PRR_kwDOCCum186pMYlM,edison1105,COMMENTED,,2025-05-14T03:09:21Z
13326,PRR_kwDOCCum186pSuxW,TheAlexLichter,COMMENTED,,2025-05-14T13:41:52Z
13326,PRR_kwDOCCum186pS3Gt,camc314,COMMENTED,,2025-05-14T13:49:15Z
13337,PRR_kwDOCCum186posrc,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-dom/__tests__/directives/vOn.spec.ts (1)</summary><blockquote>

`167-177`: **Test case properly verifies new key modifiers.**

The test effectively validates that the 'enter' and 'tab' modifiers work as expected. It's a good approach to test both modifiers together, confirming they can be combined correctly in a real-world scenario.


A minor suggestion: consider adding assertions that the function is NOT called when other keys are pressed, similar to how other tests in this file verify that handlers aren't invoked with incorrect inputs.


```diff
 it('it should support ""enter"" and ""tab"" key modifiers', () => {
   const el = document.createElement('input')
   const fn = vi.fn()

   const enterHandler = withModifiers(fn, ['enter', 'tab'])
   patchEvent(el, 'onKeyup', null, enterHandler, null)
+  // Verify that other keys don't trigger the handler
+  triggerEvent(el, 'keyup', e => (e.key = 'a'))
+  expect(fn).not.toBeCalled()
   triggerEvent(el, 'keyup', e => (e.key = 'Enter'))
   expect(fn).toBeCalledTimes(1)
   triggerEvent(el, 'keyup', e => (e.key = 'Tab'))
   expect(fn).toBeCalledTimes(2)
 })
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 163b3651d174321911648a164052effa9249a2aa and 0d8b6c235355352356133812ef94944267b9254e.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/runtime-dom/__tests__/directives/vOn.spec.ts` (1 hunks)
* `packages/runtime-dom/src/directives/vOn.ts` (2 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/directives/vOn.ts (2)</summary>

`74-84`: **Type definition correctly extended for 'enter' and 'tab' keys.**

The type definition for `keyNames` is properly updated to include 'enter' and 'tab' keys, which addresses the issue mentioned in the PR title where these types were not assignable to `VOnModifiers`.

---

`93-94`: **Key mappings correctly implemented for 'enter' and 'tab'.**

The implementation correctly maps 'enter' and 'tab' to their respective string values. Unlike some other keys that require transformation (e.g., 'esc' → 'escape'), these keys map directly to themselves since `hyphenate(event.key)` will convert 'Enter' and 'Tab' to lowercase.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-16T09:05:13Z
13339,PRR_kwDOCCum186p0Avh,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/hydration.ts (1)</summary><blockquote>

`803-808`: **Consider using assignment instead of delete for better performance.**

The implementation correctly prioritizes the cached class value over the current attribute, but the `delete` operator can impact performance.

```diff
  if (el.$cls) {
    actual = el.$cls
-   delete el.$cls
+   el.$cls = undefined
  } else {
    actual = el.getAttribute('class')
  }
```

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 805-805: Avoid the delete operator which can impact performance.

Unsafe fix: Use an undefined assignment instead.


(lint/performance/noDelete)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between f5998fba9e521effa8f2115be04216a46f3de866 and 6754842570ed34de3fa69b657752b68e0b2ebf48.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/runtime-core/__tests__/hydration.spec.ts` (1 hunks)
* `packages/runtime-core/src/hydration.ts` (3 hunks)

</details>

<details>
<summary>🚧 Files skipped from review as they are similar to previous changes (1)</summary>

* packages/runtime-core/__tests__/hydration.spec.ts

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/runtime-core/src/hydration.ts</summary>

[error] 805-805: Avoid the delete operator which can impact performance.

Unsafe fix: Use an undefined assignment instead.


(lint/performance/noDelete)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (4)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed
* GitHub Check: test / unit-test-windows

</details>

<details>
<summary>🔇 Additional comments (3)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/hydration.ts (3)</summary>

`401-402`: **Type extension appropriately handles class caching.**

Good job extending the element type to include the `$cls` property, which will be used to store the original class value during hydration, addressing the transition appear edge case.

---

`404-405`: **LGTM: Caching class value before transition hooks.**

Excellent solution to store the original class value in `$cls` before the transition's `beforeEnter` hook is called. This ensures we preserve the original class for accurate hydration comparison.

---

`789-791`: **Type signature properly updated.**

The type signature for `propHasMismatch` has been correctly updated to include the optional `$cls` property, maintaining type safety throughout the codebase.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-18T13:33:06Z
13339,PRR_kwDOCCum186p7Mid,edison1105,COMMENTED,,2025-05-19T13:56:11Z
13339,PRR_kwDOCCum186p7NUQ,edison1105,COMMENTED,,2025-05-19T13:57:11Z
13339,PRR_kwDOCCum186p7iKz,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/hydration.ts (1)</summary><blockquote>

`804-809`: **Smart handling of class attribute for hydration comparison.**

This logic addresses the edge case by:
1. First checking for the cached class value from `$cls`
2. Using it for hydration comparison if available
3. Cleaning up by removing the property after use
4. Falling back to the attribute method when no cache exists

There's a minor performance consideration with the `delete` operator, but since this is:
- Only used during hydration (not in hot path)
- A one-time operation per element
- Necessary to clean up the temporary property

The current implementation is appropriate for this use case.


For maximum performance, you could consider using `el.$cls = undefined` instead of `delete el.$cls`, but the difference is negligible in this context.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 806-806: Avoid the delete operator which can impact performance.

Unsafe fix: Use an undefined assignment instead.


(lint/performance/noDelete)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 6754842570ed34de3fa69b657752b68e0b2ebf48 and 1a1a63da10e73fe7c7ef8fa6e0e6b205a8078df7.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/runtime-core/src/hydration.ts` (3 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/runtime-core/src/hydration.ts</summary>

[error] 806-806: Avoid the delete operator which can impact performance.

Unsafe fix: Use an undefined assignment instead.


(lint/performance/noDelete)

</details>

</details>

</details>

<details>
<summary>🔇 Additional comments (3)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/hydration.ts (3)</summary>

`401-401`: **Type extension enhances template element's first child.**

This type extension adds support for the `$cls` property which will be used to cache the class attribute value during hydration. This change is crucial for handling transition appear cases correctly.

---

`404-406`: **Good implementation for caching class value before transition hooks.**

This code properly caches the original class attribute value before the transition's `beforeEnter` hook can modify it. This elegantly solves the hydration mismatch issue that can occur with transition appear.

---

`791-791`: **Type signature updated for consistency with implementation.**

The parameter type is properly updated to allow for the `$cls` property on elements, ensuring type safety across the codebase.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-19T14:21:25Z
13339,PRR_kwDOCCum186p9G8K,johnsoncodehk,APPROVED,,2025-05-19T16:19:53Z
13343,PRR_kwDOCCum186p7wuZ,pikax,APPROVED,,2025-05-19T14:38:52Z
13345,PRR_kwDOCCum186pwvL4,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (2)</summary><blockquote>

<details>
<summary>packages/compiler-core/__tests__/transforms/cacheStatic.spec.ts (1)</summary><blockquote>

`546-571`: **Good test case for verifying the comment node exclusion behavior.**

This test verifies that static props hoisting works correctly when the root has both a comment node and a single element. It properly tests that:
1. A single cache entry is created
2. The root element's static attributes are hoisted
3. The comment node is preserved in the output children
4. The single element is correctly handled despite the comment node's presence



Consider removing the `console.log` statement on line 569 since it was likely added for debugging purposes and isn't necessary for the test.

```diff
-    console.log(generate(root).code)
```

</blockquote></details>
<details>
<summary>packages/compiler-core/src/transform.ts (1)</summary><blockquote>

`359-374`: **Logic improved to handle comment nodes in single element roots.**

The implementation now correctly retrieves the single element child while excluding comment nodes, which fixes the issue described in #13344 where fallthrough attributes were not being properly applied when comments were present in the root node.



Consider using optional chaining as suggested by the static analysis tool:

```diff
-    if (singleElementRootChild && singleElementRootChild.codegenNode) {
+    if (singleElementRootChild?.codegenNode) {
```

This would reduce code verbosity while maintaining the same functionality.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 361-361: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 163b3651d174321911648a164052effa9249a2aa and f6ec77a96a49e20f4735a769a0d5bb6884362e02.

</details>

<details>
<summary>⛔ Files ignored due to path filters (1)</summary>

* `packages/compiler-core/__tests__/transforms/__snapshots__/cacheStatic.spec.ts.snap` is excluded by `!**/*.snap`

</details>

<details>
<summary>📒 Files selected for processing (3)</summary>

* `packages/compiler-core/__tests__/transforms/cacheStatic.spec.ts` (1 hunks)
* `packages/compiler-core/src/transform.ts` (3 hunks)
* `packages/compiler-core/src/transforms/cacheStatic.ts` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (2)</summary>

<details>
<summary>packages/compiler-core/src/transform.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/transforms/cacheStatic.ts (1)</summary>

* `getSingleElementRoot` (48-57)

</details>

</blockquote></details>
<details>
<summary>packages/compiler-core/src/transforms/cacheStatic.ts (2)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/ast.ts (4)</summary>

* `RootNode` (104-121)
* `PlainElementNode` (140-149)
* `ComponentNode` (151-159)
* `TemplateNode` (170-174)

</details>
<details>
<summary>packages/compiler-core/src/utils.ts (1)</summary>

* `isSlotOutlet` (358-362)

</details>

</blockquote></details>

</details><details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/compiler-core/src/transform.ts</summary>

[error] 361-361: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/transform.ts (1)</summary>

`40-40`: **Updated import aligns with the implementation change.**

The import now correctly references the new `getSingleElementRoot` function instead of the old `isSingleElementRoot` function.

</details>
<details>
<summary>packages/compiler-core/src/transforms/cacheStatic.ts (1)</summary>

`44-44`: **Updated usage of the new function with proper boolean conversion.**

The double negation (`!!`) properly converts the return value of `getSingleElementRoot` (which can be an element node or `null`) to a boolean value, maintaining the expected behavior while using the new implementation.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-17T07:15:48Z
13345,PRR_kwDOCCum186sdoob,skirtles-code,COMMENTED,"I think this would benefit from some extra tests in `stringifyStatic.spec.ts` too. For example, testing a case like this:

```html
<template>
  <!-- Comment 1 -->
  <div class=""a"">
    <!-- Comment 2 -->
    <span class=""b"" />
    <span class=""b"" />
    <span class=""b"" />
    <span class=""b"" />
    <span class=""b"" />
  </div>
</template>
```

The `<div>` should not be stringified, but the `<span>` elements should be. I think this PR is handling that case correctly, but there currently aren't any tests to ensure it stays that way. The test added to `cacheStatic.spec.ts` confirms that root-level stringification is disabled when there's a root-level comment, but a test for the template above would confirm that stringification is still enabled in similar scenarios involving comments.",2025-06-03T17:31:24Z
13345,PRR_kwDOCCum186smZ_U,edison1105,COMMENTED,,2025-06-04T08:14:58Z
13345,PRR_kwDOCCum186smfUY,edison1105,APPROVED,,2025-06-04T08:22:24Z
13350,PRR_kwDOCCum186qAV6F,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/components/Teleport.ts (1)</summary><blockquote>

`170-170`: **Consider using assignment to undefined instead of delete.**

The `delete` operator can have performance implications, as flagged by the static analysis tool. Consider using `n2.el!.__isMounted = undefined` instead, which achieves similar semantics but with better performance characteristics.


```diff
-          delete n2.el!.__isMounted
+          n2.el!.__isMounted = undefined
```

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 170-170: Avoid the delete operator which can impact performance.

Unsafe fix: Use an undefined assignment instead.


(lint/performance/noDelete)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 8c0d9e98ee1e9804b071aed2461aa0fb43c71ab6 and 034d1fcff819626d38cbef95180861e9c64f1473.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/runtime-core/__tests__/components/Teleport.spec.ts` (2 hunks)
* `packages/runtime-core/src/components/Teleport.ts` (1 hunks)

</details>

<details>
<summary>🚧 Files skipped from review as they are similar to previous changes (1)</summary>

* packages/runtime-core/__tests__/components/Teleport.spec.ts

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/runtime-core/src/components/Teleport.ts (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/renderer.ts (1)</summary>

* `queuePostRenderEffect` (286-295)

</details>

</blockquote></details>

</details><details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/runtime-core/src/components/Teleport.ts</summary>

[error] 170-170: Avoid the delete operator which can impact performance.

Unsafe fix: Use an undefined assignment instead.


(lint/performance/noDelete)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (4)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed
* GitHub Check: test / e2e-test

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/components/Teleport.ts (2)</summary>

`167-167`: **Good addition of explicit initialization flag.**

This explicitly sets the `__isMounted` flag to false before queueing the post-render effect, making the mounting state tracking clearer. This helps ensure the deferred teleport knows its initial state before any updates occur.

---

`176-176`: **Improved condition for deferred teleport processing.**

The updated condition now explicitly checks both that the teleport is deferred AND that it hasn't been mounted yet (`__isMounted === false`). This correctly handles the case where updates might occur before the teleport has fully mounted.


I recommend adding a comment explaining this logic for future maintainers:

```diff
+      // Only process deferred teleports that haven't been mounted yet
       if (isTeleportDeferred(n2.props) && n1.el!.__isMounted === false) {
```

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-20T00:13:09Z
13351,PRR_kwDOCCum186qpDyr,edison1105,COMMENTED,,2025-05-23T00:40:29Z
13351,PRR_kwDOCCum186qpJX0,edison1105,APPROVED,,2025-05-23T01:07:26Z
13351,PRR_kwDOCCum186vafOf,LittleSound,APPROVED,,2025-06-19T13:06:19Z
13352,PRR_kwDOCCum186p0TnQ,KazariEX,COMMENTED,,2025-05-18T18:33:29Z
13352,PRR_kwDOCCum186p0sTl,runyasak,COMMENTED,,2025-05-19T00:56:39Z
13352,PRR_kwDOCCum186p0zWM,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/__tests__/compileScript.spec.ts (1)</summary><blockquote>

`982-984`: **Missing space after the equals sign**

There should be a space between `=` and `defineModel` for consistent code style.


```diff
-        const model =defineModel({
+        const model = defineModel({
          default: () => bar
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**
**Cache: Disabled due to data retention organization setting**
**Knowledge Base: Disabled due to data retention organization setting**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 65b9098e225ff27c49fab3ce730d7eaa43ed3852 and 46083c1fc50a4bea83fdd8055185bfd24fae39ea.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/compiler-sfc/__tests__/compileScript.spec.ts` (3 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (3)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/__tests__/compileScript.spec.ts (3)</summary>

`982-986`: **LGTM: Good test case for variable reference restriction**

This test correctly validates that `defineModel()` with locally declared `let` variables in the default function will throw an error, while ensuring `defineModel()` is assigned to a variable.

---

`992-996`: **LGTM: Good test case for const variables**

This test correctly verifies that using `const` variables in `defineModel()` is allowed, while ensuring proper variable assignment.

---

`1002-1007`: **LGTM: Good test case for get/set handlers**

This test correctly verifies that using `let` variables in `defineModel()` is allowed when they're used within get/set handlers, while ensuring proper variable assignment.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-19T01:30:02Z
13352,PRR_kwDOCCum186p00ef,edison1105,COMMENTED,,2025-05-19T01:34:04Z
13352,PRR_kwDOCCum186p1MuI,sxzz,COMMENTED,,2025-05-19T03:32:03Z
13352,PRR_kwDOCCum186p5xPr,runyasak,COMMENTED,,2025-05-19T11:54:29Z
13352,PRR_kwDOCCum186p5x2b,runyasak,COMMENTED,,2025-05-19T11:55:28Z
13352,PRR_kwDOCCum186p5yTB,sxzz,COMMENTED,,2025-05-19T11:56:10Z
13352,PRR_kwDOCCum186p52jG,runyasak,COMMENTED,,2025-05-19T12:02:20Z
13352,PRR_kwDOCCum186p6Fde,sxzz,APPROVED,,2025-05-19T12:24:52Z
13355,PRR_kwDOCCum186p3kAd,edison1105,COMMENTED,,2025-05-19T08:38:31Z
13362,PRR_kwDOCCum186qUfmx,edison1105,COMMENTED,,2025-05-21T12:20:44Z
13366,PRR_kwDOCCum186qcw_R,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (2)</summary><blockquote>

<details>
<summary>packages/server-renderer/__tests__/webStream.spec.ts (1)</summary><blockquote>

`51-53`: **Suppress TS error with a cast.**

The `writable as any` assertion fixes the type-check issue without affecting runtime behavior. For stricter typing, consider casting to `WritableStream<Uint8Array>` instead of `any`.

</blockquote></details>
<details>
<summary>packages/compiler-sfc/src/compileScript.ts (1)</summary><blockquote>

`1319-1327`: **Fix type check with non-null assertion.**

Adding `!` to `m.originalColumn` resolves the TypeScript error. For added runtime safety, you could also guard against `originalColumn` being null before mapping:
```diff
- if (m.originalLine == null) return
+ if (m.originalLine == null || m.originalColumn == null) return
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 93949e6587ee019bccd5b8b9d76f0e1ed6ea16fc and 352cdcb787c59eec468bc32a36a69601cba7e4d6.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/compiler-sfc/src/compileScript.ts` (1 hunks)
* `packages/server-renderer/__tests__/webStream.spec.ts` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/server-renderer/__tests__/webStream.spec.ts (1)</summary><blockquote>

<details>
<summary>packages/server-renderer/src/renderToStream.ts (1)</summary>

* `pipeToWebWritable` (182-214)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-22T03:35:38Z
13367,PRR_kwDOCCum186qc3EH,sxzz,APPROVED,LGTM,2025-05-22T03:57:01Z
13367,PRR_kwDOCCum186qc3kY,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>.github/workflows/test.yml (1)</summary><blockquote>

`107-108`: **Add TypeScript type checking to CI**  
The new “Run tsc” step correctly invokes `pnpm run check` to catch type errors in the `lint-and-test-dts` job.  
Please verify that the `check` script is defined in your `package.json` (e.g. `tsc --noEmit` or equivalent).   
Consider caching TypeScript’s incremental build output (like `.tsbuildinfo`) or enabling `--incremental` to speed up repeated CI type-check runs.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 2c6c0794a1f1d8195024429f1be339ef7472463e and 028e2d6fcdd06346b90dde8bdbbc87065095f711.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `.github/workflows/test.yml` (1 hunks)

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-22T03:59:04Z
13367,PRR_kwDOCCum186qeQSu,johnsoncodehk,APPROVED,,2025-05-22T07:13:08Z
13370,PRR_kwDOCCum186sgDRi,skirtles-code,COMMENTED,,2025-06-03T20:51:31Z
13370,PRR_kwDOCCum186szSPG,jeffwcx,COMMENTED,,2025-06-05T07:13:02Z
13377,PRR_kwDOCCum186q4gqi,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/apiWatch.ts (1)</summary><blockquote>

`289-299`: **Address static analysis suggestion for optional chaining.**

The compatibility logic is correct, but there's an opportunity to improve code quality by using optional chaining as suggested by the static analysis tool.



Apply this diff to use optional chaining:

```diff
-    const deep = options && options.deep
+    const deep = options?.deep
```

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 294-294: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 9fa787cfd2c8692a7051eabdc7e6496d4dc3c9b3 and 351ce069c58694c54a026b222aec667ed33ffd0c.

</details>

<details>
<summary>📒 Files selected for processing (4)</summary>

* `packages/reactivity/src/watch.ts` (1 hunks)
* `packages/runtime-core/src/apiWatch.ts` (5 hunks)
* `packages/runtime-core/src/componentOptions.ts` (5 hunks)
* `packages/vue-compat/__tests__/misc.spec.ts` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (2)</summary>

<details>
<summary>packages/reactivity/src/watch.ts (1)</summary><blockquote>

<details>
<summary>packages/shared/src/general.ts (2)</summary>

* `hasChanged` (143-144)
* `isArray` (39-39)

</details>

</blockquote></details>
<details>
<summary>packages/runtime-core/src/componentOptions.ts (3)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/index.ts (1)</summary>

* `DeprecationTypes` (479-481)

</details>
<details>
<summary>packages/shared/src/general.ts (3)</summary>

* `isObject` (53-54)
* `isArray` (39-39)
* `isFunction` (49-50)

</details>
<details>
<summary>packages/runtime-core/src/apiWatch.ts (1)</summary>

* `createCompatWatchGetter` (252-266)

</details>

</blockquote></details>

</details><details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/runtime-core/src/apiWatch.ts</summary>

[error] 294-294: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (5)</summary><blockquote>

<details>
<summary>packages/reactivity/src/watch.ts (1)</summary>

`248-249`: **LGTM: Correctly implements array watching compatibility.**

The additional condition properly bypasses normal change detection for arrays under compatibility mode, ensuring Vue 2-like behavior where array mutations trigger watchers even when the array reference hasn't changed.

</details>
<details>
<summary>packages/runtime-core/src/apiWatch.ts (1)</summary>

`252-266`: **LGTM: Well-designed compatibility wrapper function.**

The `createCompatWatchGetter` function correctly wraps the base getter and conditionally traverses arrays with depth 1 when the `WATCH_ARRAY` compatibility flag is enabled. This approach is clean and reusable.

</details>
<details>
<summary>packages/vue-compat/__tests__/misc.spec.ts (1)</summary>

`50-421`: **Excellent comprehensive test coverage.**

The expanded test suite thoroughly covers the `WATCH_ARRAY` compatibility feature with well-structured scenarios for both the `watch` option and `$watch()` method. The tests appropriately verify:

- Basic array watching behavior and deprecation warnings
- Dynamic depth behavior when switching between objects and arrays
- Proper handling of the `deep: true` option
- Component-level `compatConfig` overrides
- Various option combinations (immediate, etc.)
- Function getter behavior

This comprehensive coverage will help prevent regressions and ensure the compatibility feature works as expected.

</details>
<details>
<summary>packages/runtime-core/src/componentOptions.ts (2)</summary>

`1-35`: **Clean import organization with proper type imports.**

The import changes properly use `import type` for type-only imports and remove unused imports (`traverse`, `getCurrentScope`). The addition of `createCompatWatchGetter` aligns with the new compatibility approach.

---

`857-866`: **Improved compatibility logic using centralized approach.**

The refactored compatibility logic is cleaner and more maintainable than the previous approach. Instead of forcing `deep: true`, it now:

1. Properly checks if `deep` is already explicitly set
2. Uses the `compatWatchArray` flag to signal compatibility mode
3. Leverages the reusable `createCompatWatchGetter` wrapper

This approach provides better separation of concerns and consistency across the codebase.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-25T20:53:50Z
13382,PRR_kwDOCCum186vfnJX,edison1105,COMMENTED,,2025-06-20T01:13:34Z
13384,PRR_kwDOCCum186vbHIL,LittleSound,APPROVED,,2025-06-19T13:51:03Z
13384,PRR_kwDOCCum186vcMyc,zhiyuanzmj,APPROVED,,2025-06-19T15:10:27Z
13385,PRR_kwDOCCum186vfmiF,edison1105,COMMENTED,,2025-06-20T01:10:21Z
13389,PRR_kwDOCCum186rFeE0,Doctor-wu,APPROVED,,2025-05-27T09:21:41Z
13389,PRR_kwDOCCum186rFhbE,baiwusanyu-c,APPROVED,,2025-05-27T09:26:23Z
13389,PRR_kwDOCCum186rQPx8,skirtles-code,COMMENTED,,2025-05-28T00:40:01Z
13391,PRR_kwDOCCum186rKTCN,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (6)</summary><blockquote>

<details>
<summary>changelogs/CHANGELOG-3.0.md (4)</summary><blockquote>

`59-59`: **Inconsistent verb tense in “close” vs “closes”.**  
The entry uses “(close [#2843])” whereas the surrounding entries use “closes [#…]”. For consistency, update to:  
`(closes [#2843])`

---

`65-65`: **Avoid informal abbreviation.**  
Consider replacing “w/” with “with” for clarity:  
`fix erroneous emits warnings with mixins`

---

`205-205`: **Minor phrasing improvement.**  
The entry repeats “suspense” twice. You might rephrase for readability, e.g.:  
`fix nested async child toggle in an already resolved Suspense instance`

---

`233-233`: **Acronym capitalization.**  
“css” should be uppercase “CSS” in:  
`new SFC CSS variable injection implementation`

</blockquote></details>
<details>
<summary>changelogs/CHANGELOG-3.3.md (1)</summary><blockquote>

`184-184`: **Use consistent unordered list style**

Markdown lint MD004 expects dashes for list items. Please replace the asterisk here with a dash:

```diff
-* **compiler-dom:** comments in the v-if branches should be ignored when used in Transition ([#3622](...))
+- **compiler-dom:** comments in the v-if branches should be ignored when used in Transition ([#3622](...))
```

</blockquote></details>
<details>
<summary>changelogs/CHANGELOG-3.2.md (1)</summary><blockquote>

`744-744`: **⚠️ Inconsistent category tag**  
This entry uses `**compiler:**` but adjacent SFC-related items use `**compiler-sfc:**`. Please align the prefix with the rest of the changelog for consistency.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 42f879fcab48e0e1011967a771b4ad9e8838d760 and 91e983143ae935d9c16d36689165aa3ad8a30920.

</details>

<details>
<summary>📒 Files selected for processing (8)</summary>

* `changelogs/CHANGELOG-3.0.md` (8 hunks)
* `changelogs/CHANGELOG-3.1.md` (5 hunks)
* `changelogs/CHANGELOG-3.2.md` (5 hunks)
* `changelogs/CHANGELOG-3.3.md` (3 hunks)
* `changelogs/CHANGELOG-3.4.md` (3 hunks)
* `packages/reactivity/__tests__/reactive.spec.ts` (1 hunks)
* `packages/runtime-core/__tests__/apiWatch.spec.ts` (2 hunks)
* `packages/vue/__tests__/e2e/Transition.spec.ts` (2 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/reactivity/__tests__/reactive.spec.ts (1)</summary><blockquote>

<details>
<summary>packages/reactivity/src/reactive.ts (1)</summary>

* `toRaw` (378-381)

</details>

</blockquote></details>

</details><details>
<summary>🪛 markdownlint-cli2 (0.17.2)</summary>

<details>
<summary>changelogs/CHANGELOG-3.1.md</summary>

184-184: Unordered list style
Expected: dash; Actual: asterisk

(MD004, ul-style)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (19)</summary><blockquote>

<details>
<summary>packages/vue/__tests__/e2e/Transition.spec.ts (2)</summary>

`3257-3257`: **Corrected spelling in TODO comment**  
The typo “diferent” has been corrected to “different,” enhancing clarity without impacting functionality.

---

`3312-3312`: **Corrected spelling in TODO comment**  
The same spelling fix was applied in the second instance, ensuring consistency across test comments.

</details>
<details>
<summary>changelogs/CHANGELOG-3.0.md (3)</summary>

`285-285`: **Typographical fix verified.**  
The SSR memory leak fix description is clear and correct. No further changes needed.

---

`453-453`: **Textual refinement approved.**  
The description of disabling block tracking is clear and consistent with project style.

---

`866-866`: **Corrected spelling.**  
“stringfication” has been fixed to “stringification,” resolving the typo.

</details>
<details>
<summary>changelogs/CHANGELOG-3.1.md (2)</summary>

`31-31`: **Typo correction verified: “genreated” → “generated”**

The term “generated” is now correctly spelled in the codegen entry, replacing the previous misspelling.

---

`117-117`: **Typo correction verified: “unncessary” → “unnecessary”**

The word “unnecessary” is now spelled correctly in the compiler entry, improving consistency.

</details>
<details>
<summary>changelogs/CHANGELOG-3.3.md (3)</summary>

`262-262`: **Typo correction verified: “ergnomic” → “ergonomic”**

The feature description now correctly uses “ergonomic,” enhancing readability.

---

`486-486`: **Typo correction verified: “ergnomic” → “ergonomic”**

This entry has been updated to the correct spelling “ergonomic,” ensuring consistency across changelog entries.

---

`547-547`: **Typo correction verified: “mutiple” → “multiple”**

The bug fix description now spells “multiple” correctly in reference to `getCurrentInstance` support.

</details>
<details>
<summary>changelogs/CHANGELOG-3.2.md (4)</summary>

`29-29`: **👍 Typo fixed: “detached”**  
The change corrects “detatched” to “detached” as intended.

---

`129-129`: **👍 Typo fixed: “Suspense”**  
The correction from “Supsense” to “Suspense” is accurate.

---

`717-717`: **👍 Typo fixed: “function”**  
The misspelling “funtion” has been corrected to “function.”

---

`801-801`: **👍 Typo fixed: “template”**  
The change corrects “tempalte” to “template” as expected.

</details>
<details>
<summary>changelogs/CHANGELOG-3.4.md (3)</summary>

`170-170`: **Spelling correction applied correctly for “function”**  
The typo “fuction” has been fixed to “function” in the compatibility entry.

---

`221-221`: **Typo fixed for “async” keyword**  
The misspelling “aysnc” has been corrected to “async” in the compiler-core entry.

---

`420-420`: **Corrected “incorrect” spelling in hydration entry**  
The word “incorect” is now properly spelled “incorrect”, improving clarity in the hydration bug fix description.

</details>
<details>
<summary>packages/runtime-core/__tests__/apiWatch.spec.ts (2)</summary>

`1598-1598`: **Approve typo fix in inline comment**  
The comment now correctly reads “would not be called when value>1,” fixing the previous misspelling.

---

`1877-1877`: **Approve grammar correction in test title**  
Changed “catched” to the proper past participle “caught” in the test description.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-27T15:39:00Z
13395,PRR_kwDOCCum186vamQW,LittleSound,APPROVED,,2025-06-19T13:15:02Z
13395,PRR_kwDOCCum186vanxT,johnsoncodehk,APPROVED,,2025-06-19T13:17:19Z
13397,PRR_kwDOCCum186rQVJl,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/__tests__/transforms/transformExpressions.spec.ts (1)</summary><blockquote>

`720-724`: **Good test coverage for TypeScript type assertions.**

The test correctly validates that TypeScript type assertions are preserved in the generated code with proper parentheses wrapping. The assertion checks for the expected output and includes snapshot testing for regression prevention.



Consider adding test cases for other TypeScript node types from `TS_NODE_TYPES` to ensure comprehensive coverage:

```javascript
test('expression with various TypeScript types', () => {
  // Test TSNonNullExpression
  const { code: code1 } = compile(`<div @click=""value!""></div>`)
  expect(code1).toMatch(`onClick: (_ctx.value!)`)
  
  // Test TSInstantiationExpression  
  const { code: code2 } = compile(`<div @click=""fn<string>""></div>`)
  expect(code2).toMatch(`onClick: (_ctx.fn<string>)`)
  
  // Test TSSatisfiesExpression
  const { code: code3 } = compile(`<div @click=""obj satisfies Type""></div>`)
  expect(code3).toMatch(`onClick: (_ctx.obj satisfies Type)`)
})
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between d9bd436b1aad354e06bcc9d0f9138fbb8eedc7cf and 575fc5099b946caf87f9a5128e34ab0b3c0bc58b.

</details>

<details>
<summary>⛔ Files ignored due to path filters (1)</summary>

* `packages/compiler-core/__tests__/transforms/__snapshots__/transformExpressions.spec.ts.snap` is excluded by `!**/*.snap`

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/compiler-core/__tests__/transforms/transformExpressions.spec.ts` (1 hunks)
* `packages/compiler-core/src/transforms/transformExpression.ts` (3 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/compiler-core/src/transforms/transformExpression.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/babelUtils.ts (1)</summary>

* `TS_NODE_TYPES` (498-504)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (3)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/transforms/transformExpression.ts (3)</summary>

`21-21`: **LGTM! Import aligns with the TypeScript handling requirement.**

The import of `TS_NODE_TYPES` is correctly placed and necessary for the TypeScript expression wrapping logic.

---

`351-352`: **LGTM! Conditional wrapping logic is correctly implemented.**

The logic properly checks if the AST node type requires wrapping (TypeScript expressions) and conditionally adds the opening parenthesis before processing identifiers. This ensures TypeScript syntax like type assertions are preserved in the generated code.

---

`382-382`: **LGTM! Closing parenthesis correctly balances the opening one.**

The conditional closing parenthesis properly balances the opening parenthesis added earlier, ensuring well-formed expressions in the generated code.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-28T00:52:38Z
13399,PRR_kwDOCCum186u-PMQ,LittleSound,APPROVED,,2025-06-17T12:53:49Z
13399,PRR_kwDOCCum186u_XwT,zhiyuanzmj,APPROVED,,2025-06-17T14:10:14Z
13400,PRR_kwDOCCum186utJ-U,LittleSound,COMMENTED,,2025-06-16T08:18:52Z
13400,PRR_kwDOCCum186u-KJs,LittleSound,APPROVED,,2025-06-17T12:48:05Z
13400,PRR_kwDOCCum186u_XFr,zhiyuanzmj,APPROVED,,2025-06-17T14:09:30Z
13409,PRR_kwDOCCum186rlFCd,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🔭 Outside diff range comments (1)</summary><blockquote>

<details>
<summary>packages/reactivity/src/watch.ts (1)</summary><blockquote>

`136-144`: _💡 Verification agent_

<details>
<summary>🧩 Analysis chain</summary>

**Verify the impact on existing watchers with undefined deep option.**

The behavior change for `deep: undefined` could affect existing code that relies on the default deep traversal behavior when the `deep` option is not explicitly specified.



Please run the following script to check for potential usage patterns that might be affected:

---

🏁 Script executed:

```shell
#!/bin/bash
# Description: Search for watch usages that might rely on undefined deep behavior
# Expected: Find watch calls without explicit deep option that might be affected

echo ""=== Searching for watch calls without explicit deep option ===""
ast-grep --pattern 'watch($_, $_, { $$$ })'

echo -e ""\n=== Searching for watch calls with only immediate option ===""
rg -A 3 -B 3 'watch\([^,]+,[^,]+,\s*\{\s*immediate:'

echo -e ""\n=== Searching for watch calls with empty options ===""
rg -A 2 -B 2 'watch\([^,]+,[^,]+,\s*\{\s*\}'
```

Length of output: 27764

---

🏁 Script executed:

```shell
#!/bin/bash
# Search for doWatch implementation in packages/reactivity/src/watch.ts
ast-grep --pattern $'function doWatch($_, $_, { deep = $_, $$$ } = $_) { $$$ }' --source
```

Length of output: 275

---

🏁 Script executed:

```shell
#!/bin/bash
# Locate reactiveGetter in watch.ts and show surrounding lines
echo ""=== Finding reactiveGetter definition ===""
rg -n ""reactiveGetter"" packages/reactivity/src/watch.ts

echo -e ""\n=== Context around reactiveGetter (lines 120–160) ===""
sed -n '120,160p' packages/reactivity/src/watch.ts
```

Length of output: 1798

---



</details>

**Shallow-traverse now applies to all `watch()` calls without an explicit `deep` flag**

The current `reactiveGetter` treats `deep: undefined` the same as a falsy value, so any `watch(source, cb)` (or calls without `deep`) will now only traverse root‐level properties instead of deeply traversing by default. This is a breaking change from the previously intended “deep by default” behavior.

Please update the condition in `packages/reactivity/src/watch.ts` (around lines 136–144) to only treat *explicit* `deep: false` (or `0`) as shallow, for example:

```diff
   const reactiveGetter = (source: object) => {
     // traverse will happen in wrapped getter below
-    if (deep) return source
-    // for `deep: false | 0` or shallow reactive, only traverse root-level properties
-    if (isShallow(source) || !deep)
+    // if deep is truthy (true or >0), return the raw object for full traversal
+    if (deep && deep !== 0) return source
+    // for `deep: false` or `0`, or shallow reactive, only traverse root-level properties
+    if (isShallow(source) || deep === false || deep === 0)
       return traverse(source, 1)
     // for `deep: undefined`, deeply traverse all properties
     return traverse(source)
   }
```

• File: `packages/reactivity/src/watch.ts`  
• Lines: ~136–144  

This restores the original deep‐by‐default semantics while preserving shallow support when explicitly requested.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between a60f2bd3718f8f84aee2b11e6285d9933c3965bc and 3df3d37074af847abda28336c0166e49d1d31dbb.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/reactivity/src/watch.ts` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/reactivity/src/watch.ts (1)</summary><blockquote>

<details>
<summary>packages/reactivity/src/index.ts (1)</summary>

* `isShallow` (28-28)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-05-29T15:05:07Z
13422,PRR_kwDOCCum186ulFCl,LittleSound,COMMENTED,"## Relevant Information

Scope ID is an important mechanism in Vue used for implementing style scoping (Scoped CSS). Its main role is style isolation and scope passing.

In slot content, both the parent component's scopeId and the child component's scopeId (with a -s suffix) are included. This ensures that the slot content can inherit the parent component's styles while maintaining the child component's style isolation.",2025-06-15T04:09:53Z
13422,PRR_kwDOCCum186ulXXz,LittleSound,COMMENTED,"## The discussion of Team Vapor is as follows:

There are actually many ways to partition CSS by component. Vue already supports more than one approach, and the previous Scope ID method wasn’t necessarily the most performant one.

So, if we’re unsure about doing it right at the moment — or if the current direction feels problematic — we don’t have to implement it just yet. We can always revisit it later if there’s a clear need from users.

For Vapor, where performance is a key focus, CSS Modules might actually be a better choice. Vite already has good support for them, so the implementation could be simpler and more efficient.

Native CSS @scope could be the ultimate solution, but browser support requirements are too high right now. The current implementation is designed for VDOM compatibility, but my implementation isn't great and has poor performance — this may need Evan‘s advice
",2025-06-15T07:37:44Z
13433,PRR_kwDOCCum186sh3ab,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/reactivity/src/watch.ts (1)</summary><blockquote>

`346-348`: **Consider performance implications of `queue.shift()`.**

Using `queue.shift()` for dequeuing has O(n) time complexity in JavaScript arrays. For deeply nested objects with many siblings at each level, this could impact performance significantly.



Consider using a more efficient queue implementation:

```diff
-  const queue: Array<[any, number]> = []
+  const queue: Array<[any, number]> = []
+  let queueIndex = 0
   
   // ... initialization code ...
   
-  while (queue.length > 0) {
-    const [currentValue, currentDepth] = queue.shift()!
+  while (queueIndex < queue.length) {
+    const [currentValue, currentDepth] = queue[queueIndex++]
```

This eliminates the O(n) shift operation while maintaining the same FIFO behavior.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between e53a4ffbe0264b06971090fcaf0d8b2201478e29 and f68d595971aab9fa5380b9d4c48c9e87747546a4.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/reactivity/src/watch.ts` (1 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (5)</summary><blockquote>

<details>
<summary>packages/reactivity/src/watch.ts (5)</summary>

`336-344`: **LGTM: Solid initialization and early return logic.**

The initialization correctly handles the `seen` parameter for backward compatibility and implements proper early returns for non-traversable values.

---

`361-366`: **LGTM: Proper cycle detection implementation.**

The seen set check correctly prevents infinite loops with circular references, and adding to the seen set at the right time maintains the same semantics as the original recursive implementation.

---

`372-391`: **Excellent comprehensive child enumeration logic.**

The implementation correctly handles all supported object types (refs, arrays, sets, maps, plain objects) and properly includes enumerable symbol properties. The depth propagation logic is sound.

---

`331-395`: **Successful refactoring that achieves the stated objectives.**

This BFS implementation effectively addresses the original concerns:
- ✅ Eliminates stack overflow risk for deeply nested objects
- ✅ Maintains identical traversal semantics 
- ✅ Preserves function signature for backward compatibility
- ✅ Includes clear, documented logic flow

The refactoring successfully transforms a recursive DFS approach into an iterative BFS approach while maintaining all the original functionality. The only minor consideration is the `queue.shift()` performance, but this is acceptable for typical use cases.

---

`352-358`: <details>
<summary>✅ Verification successful</summary>

**Verify depth handling correctness for edge cases.**

The depth check logic appears correct, but let's ensure it handles the edge case where `currentDepth === 0` properly.

---

🏁 Script executed:

```shell
#!/bin/bash
# Description: Verify that the traverse function is used correctly in the codebase and check for any existing tests
# Expected: Find usages and tests that validate depth behavior

# Search for traverse function usage
rg -A 5 'traverse\(' --type ts

# Look for existing tests
fd -e spec.ts -e test.ts | xargs rg -l 'traverse'
```

Length of output: 2078

---

🏁 Script executed:

```shell
#!/bin/bash
# Show traverse implementation context
rg -C 20 -n ""export function traverse"" packages/reactivity/src/watch.ts

# Show usages of traverse with explicit depth
rg -C 10 -n ""traverse(source"" packages/reactivity/src/watch.ts
```

Length of output: 1429

---

🏁 Script executed:

```shell
#!/bin/bash
# Extract the full traverse function for detailed review
sed -n '331,430p' packages/reactivity/src/watch.ts
```

Length of output: 2046

---



</details>

**Depth checks for zero-depth cases are correctly handled**

The early‐return `if (depth <= 0 …) return value` ensures that calling `traverse(obj, 0)` skips all property reads, and the in‐loop guard `if (currentDepth <= 0 …) continue` prevents exploring children once their depth counter hits zero. No changes needed here.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-04T01:23:23Z
13433,PRR_kwDOCCum186siB75,Alfred-Skyblue,COMMENTED,,2025-06-04T01:48:19Z
13433,PRR_kwDOCCum186siNHF,jsy-0526,COMMENTED,,2025-06-04T02:04:10Z
13433,PRR_kwDOCCum186snYuC,GeoffreyParrier,COMMENTED,,2025-06-04T09:33:01Z
13433,PRR_kwDOCCum186sxwOq,jsy-0526,COMMENTED,,2025-06-05T02:58:42Z
13437,PRR_kwDOCCum186syk6l,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/transforms/vFor.ts (1)</summary><blockquote>

`266-266`: **Improve type clarity by using `undefined` instead of `void`.**

The explicit return type annotation is a good improvement for clarity. However, consider using `undefined` instead of `void` in the union type for better clarity.



Apply this diff to improve type clarity:

```diff
-): void | (() => void) {
+): undefined | (() => void) {
```

This follows the static analysis recommendation and makes the union type more explicit about what the function can return.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 266-266: void is confusing inside a union type.

Unsafe fix: Use undefined instead.


(lint/suspicious/noConfusingVoidType)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between a47832e75ea5dcc92d98c76fe0d9552e6b425a58 and 8608cf48c8d980ee41b3ebe28d382b78f35ef56a.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/compiler-core/src/parser.ts` (2 hunks)
* `packages/compiler-core/src/transforms/vFor.ts` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/compiler-core/src/parser.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/ast.ts (1)</summary>

* `TemplateChildNode` (93-102)

</details>

</blockquote></details>

</details><details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/compiler-core/src/transforms/vFor.ts</summary>

[error] 266-266: void is confusing inside a union type.

Unsafe fix: Use undefined instead.


(lint/suspicious/noConfusingVoidType)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (5)</summary>

* GitHub Check: Redirect rules
* GitHub Check: test / e2e-test
* GitHub Check: test / unit-test-windows
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/parser.ts (2)</summary>

`650-650`: **LGTM: Function call updated correctly.**

The removal of the `tag` parameter from the `condenseWhitespace` call is consistent with the function signature change.

---

`835-835`: **Good cleanup: Removed unused parameter.**

The `tag` parameter was not being used in the function implementation, so removing it improves the function signature clarity and eliminates unnecessary parameters.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-05T05:41:35Z
13438,PRR_kwDOCCum186szH-y,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/transforms/transformVBindShorthand.ts (1)</summary><blockquote>

`19-19`: **Consider safer handling of directive argument access.**

The non-null assertion `prop.arg!` assumes the argument will always exist for bind directives without expressions. While this may be valid for shorthand syntax, consider adding a guard check for robustness.



```diff
-        const arg = prop.arg!
+        const arg = prop.arg
+        if (!arg) continue
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between a47832e75ea5dcc92d98c76fe0d9552e6b425a58 and fd7d6cf67e9eb3e4bcc8c609690c61883774f9aa.

</details>

<details>
<summary>⛔ Files ignored due to path filters (1)</summary>

* `packages/compiler-dom/__tests__/transforms/__snapshots__/vModel.spec.ts.snap` is excluded by `!**/*.snap`

</details>

<details>
<summary>📒 Files selected for processing (11)</summary>

* `packages/compiler-core/__tests__/transforms/vBind.spec.ts` (2 hunks)
* `packages/compiler-core/__tests__/transforms/vFor.spec.ts` (2 hunks)
* `packages/compiler-core/__tests__/transforms/vIf.spec.ts` (3 hunks)
* `packages/compiler-core/src/compile.ts` (2 hunks)
* `packages/compiler-core/src/index.ts` (1 hunks)
* `packages/compiler-core/src/transforms/transformVBindShorthand.ts` (1 hunks)
* `packages/compiler-core/src/transforms/vBind.ts` (2 hunks)
* `packages/compiler-core/src/transforms/vFor.ts` (0 hunks)
* `packages/compiler-dom/__tests__/transforms/vModel.spec.ts` (3 hunks)
* `packages/compiler-ssr/__tests__/ssrTransitionGroup.spec.ts` (1 hunks)
* `packages/compiler-ssr/src/index.ts` (2 hunks)

</details>

<details>
<summary>💤 Files with no reviewable changes (1)</summary>

* packages/compiler-core/src/transforms/vFor.ts

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (6)</summary>

<details>
<summary>packages/compiler-core/src/compile.ts (2)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/index.ts (1)</summary>

* `transformVBindShorthand` (69-69)

</details>
<details>
<summary>packages/compiler-core/src/transforms/transformVBindShorthand.ts (1)</summary>

* `transformVBindShorthand` (10-36)

</details>

</blockquote></details>
<details>
<summary>packages/compiler-ssr/__tests__/ssrTransitionGroup.spec.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-ssr/src/index.ts (1)</summary>

* `compile` (32-94)

</details>

</blockquote></details>
<details>
<summary>packages/compiler-ssr/src/index.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/transforms/transformVBindShorthand.ts (1)</summary>

* `transformVBindShorthand` (10-36)

</details>

</blockquote></details>
<details>
<summary>packages/compiler-core/__tests__/transforms/vBind.spec.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/transforms/transformVBindShorthand.ts (1)</summary>

* `transformVBindShorthand` (10-36)

</details>

</blockquote></details>
<details>
<summary>packages/compiler-core/src/transforms/vBind.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/ast.ts (1)</summary>

* `createObjectProperty` (673-683)

</details>

</blockquote></details>
<details>
<summary>packages/compiler-core/__tests__/transforms/vFor.spec.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-core/src/transforms/transformVBindShorthand.ts (1)</summary>

* `transformVBindShorthand` (10-36)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (17)</summary><blockquote>

<details>
<summary>packages/compiler-core/__tests__/transforms/vBind.spec.ts (1)</summary>

`20-20`: **LGTM! Proper integration of transformVBindShorthand into test pipeline.**

The import and placement as the first transform in the test pipeline is correct, ensuring that shorthand v-bind syntax is properly expanded before other transforms process the AST.



Also applies to: 29-29

</details>
<details>
<summary>packages/compiler-core/src/index.ts (1)</summary>

`69-69`: **LGTM! Proper public API exposure.**

Adding the export for `transformVBindShorthand` correctly exposes the new transform as part of the compiler-core public API, consistent with other transform exports.

</details>
<details>
<summary>packages/compiler-core/src/compile.ts (1)</summary>

`25-25`: **LGTM! Correct integration into core compilation pipeline.**

The import and placement as the first transform in `getBaseTransformPreset` is architecturally correct. This ensures shorthand v-bind directives are expanded before other transforms process them, maintaining the proper transformation order.



Also applies to: 37-37

</details>
<details>
<summary>packages/compiler-ssr/src/index.ts (1)</summary>

`16-16`: **LGTM! Consistent SSR pipeline integration.**

The import from `@vue/compiler-dom` and placement as the first transform in the SSR nodeTransforms array ensures consistent handling of shorthand v-bind syntax between client-side and server-side rendering pipelines.



Also applies to: 59-59

</details>
<details>
<summary>packages/compiler-ssr/__tests__/ssrTransitionGroup.spec.ts (1)</summary>

`104-125`: **LGTM! Well-structured test for SSR shorthand v-bind handling.**

The test correctly verifies that shorthand `:tag` syntax is properly transformed to use `_ctx.tag` in SSR compilation output. The inline snapshot expectation captures both the dynamic opening tag `<${_ctx.tag}` and closing tag `</${_ctx.tag}>` rendering, ensuring complete SSR functionality.

</details>
<details>
<summary>packages/compiler-core/__tests__/transforms/vFor.spec.ts (2)</summary>

`24-24`: **Import addition looks good.**

The `transformVBindShorthand` import is correctly added to support shorthand v-bind processing in v-for tests.

---

`36-36`: **Correct transform order placement.**

Adding `transformVBindShorthand` as the first node transform ensures that shorthand v-bind syntax (like `:key`) is expanded before the v-for transform processes it. This maintains proper dependency order in the transform pipeline.

</details>
<details>
<summary>packages/compiler-dom/__tests__/transforms/vModel.spec.ts (3)</summary>

`6-6`: **Import addition is correct.**

The `transformVBindShorthand` import enables shorthand v-bind processing in v-model tests.

---

`22-22`: **Proper transform integration.**

Adding `transformVBindShorthand` to the nodeTransforms ensures shorthand v-bind syntax is processed before element transformation, maintaining the correct pipeline order.

---

`67-74`: **Excellent test case for edge case handling.**

This test addresses issue #13169 and correctly verifies that shorthand `:type` binding after `v-model` triggers dynamic model behavior (`V_MODEL_DYNAMIC` helper). This is crucial because the input type affects which v-model transformation is applied, and shorthand syntax should be properly recognized.

</details>
<details>
<summary>packages/compiler-core/__tests__/transforms/vIf.spec.ts (3)</summary>

`20-25`: **Clean import restructuring.**

The import statement is properly restructured to include `transformVBindShorthand` along with other necessary imports.

---

`43-48`: **Consistent transform pipeline setup.**

The addition of `transformVBindShorthand` as the first node transform maintains consistency with other test suites and ensures proper processing order for shorthand v-bind syntax.

---

`223-232`: **Thorough test for shorthand key binding.**

This test correctly verifies that shorthand `:key` syntax on v-if elements is properly processed. The expectation that both `arg.content` and `exp.content` equal 'key' confirms that the shorthand is expanded to `:key=""key""` as intended. This addresses issue #11321 and ensures proper key handling in conditional rendering.

</details>
<details>
<summary>packages/compiler-core/src/transforms/transformVBindShorthand.ts (3)</summary>

`20-28`: **Error handling for invalid shorthand arguments is well-implemented.**

The validation correctly restricts shorthand syntax to static simple expressions only, and provides appropriate error reporting with fallback to an empty expression.

---

`30-31`: **Camelization logic is correct for JavaScript property naming conventions.**

Converting the argument content to camelCase and creating a non-static expression properly handles the shorthand expansion (e.g., `:foo-bar` → `:foo-bar=""fooBar""`).

---

`10-36`: **Well-structured transform that effectively modularizes shorthand v-bind handling.**

This dedicated transform cleanly separates the shorthand expansion logic from other bind-related transforms, improving maintainability and reducing complexity in other parts of the codebase.

</details>
<details>
<summary>packages/compiler-core/src/transforms/vBind.ts (1)</summary>

`71-71`: **Non-null assertion on expression is safe in this context.**

The `exp!` assertion is appropriate here since the earlier logic (lines 22-38) handles empty expressions, and at this point `exp` should be a valid expression node.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-05T06:56:05Z
13438,PRR_kwDOCCum186s1Mjr,sxzz,APPROVED,,2025-06-05T09:47:26Z
13438,PRR_kwDOCCum186s1PlZ,baiwusanyu-c,APPROVED,,2025-06-05T09:50:27Z
13442,PRR_kwDOCCum186tGXm4,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/shared/src/globalsAllowList.ts (1)</summary><blockquote>

`3-7`: **Consider refactoring to an array join for maintainability**

Managing a long, multi-line comma-separated string is prone to delimiter mistakes. Converting the list into an array and using `.join(',')` would improve readability and reduce such errors.  


Example:
```ts
const GLOBALS_ALLOWED = [
  'Infinity', 'undefined', 'NaN', 'isFinite', 'isNaN',
  'parseFloat', 'parseInt', 'decodeURI', 'decodeURIComponent',
  'encodeURI', 'encodeURIComponent', 'Math', 'Number', 'Date',
  'Array', 'Object', 'Boolean', 'String', 'RegExp',
  'Map', 'Set', 'JSON', 'Intl', 'BigInt',
  'console', 'Error', 'Symbol', 'Promise',
  'setTimeout', 'setInterval'
].join(',');
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between cdffaf6b9efce2c52635714e8e2d7480737c6b50 and 796c0d6bcc5c4526ae325402ad3fa56f1d6ab864.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/shared/src/globalsAllowList.ts` (1 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (9)</summary>

* GitHub Check: upload
* GitHub Check: autofix
* GitHub Check: test / e2e-test
* GitHub Check: test / lint-and-test-dts
* GitHub Check: test / unit-test
* GitHub Check: continuous-release
* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-06T08:07:02Z
13445,PRR_kwDOCCum186tm3VT,edison1105,COMMENTED,,2025-06-10T09:08:25Z
13445,PRR_kwDOCCum186t0dh4,Plumbiu,COMMENTED,,2025-06-11T08:46:31Z
13445,PRR_kwDOCCum186t0lNU,edison1105,COMMENTED,,2025-06-11T08:56:07Z
13445,PRR_kwDOCCum186t5Y1D,skirtles-code,COMMENTED,"I think the original RegExp may have been incorrect. It was using `.+`, but I believe that should have been `.*`.

- [Playground](https://play.vuejs.org/#__SSR__eNp9kDFrwzAQhf+KuCVLsAntZNxAWwJth7a0HbUY+2orlSWhk1xD8H+PJOMkQ8j2eO/T6d0d4NGYbPAIBZQOeyMrh1uuGCu7DatlRfTAgQMrFr2y2Kw4bF9QSl3m3WamGzGwPMgyv5gCa3BUa/Ur2mxPWoVPDpHmUOveCIn2wzihFXEoWEpiVoXB/2/Jc9bjevHrDuu/K/6exuhx+LRIaAfkcMpcZVt0c7z7fscx6FPY68bLQN8Iv5C09LHjjD151YTaF1xq+9obbZ1Q7Q/tRoeKlqVi0UhOiecQLv18Y/Vz3bvsPr3jaoLpCI8/h9I=)

There's a hydration mismatch error, due to the empty class. The server-generated HTML is:

```html
<!--[--><h1 class="""" class=""red"">Hello</h1><div></div><!--]-->
```

The `class=""""` should be removed, but it isn't due to the `.+` in the RegExp.

Obviously this isn't an important bug, it only occurs with an empty `class=""""`.

I understand that this PR was only attempting to improve performance, so it's not clear to me whether it'd be appropriate to fix that problem here... but I'm equally not sure we should be faithfully re-implementing the bugs of the original code.",2025-06-11T14:31:06Z
13449,PRR_kwDOCCum186tXjXq,alex-snezhko,COMMENTED,,2025-06-08T20:42:36Z
13449,PRR_kwDOCCum186tXvmr,edison1105,COMMENTED,,2025-06-09T00:13:43Z
13449,PRR_kwDOCCum186tYRLC,alex-snezhko,COMMENTED,,2025-06-09T03:06:28Z
13449,PRR_kwDOCCum186tcj5f,edison1105,COMMENTED,,2025-06-09T12:39:05Z
13449,PRR_kwDOCCum186tjhVT,alex-snezhko,COMMENTED,,2025-06-10T02:04:01Z
13449,PRR_kwDOCCum186tq0ZA,edison1105,COMMENTED,,2025-06-10T13:50:42Z
13449,PRR_kwDOCCum186tx7fq,alex-snezhko,COMMENTED,,2025-06-11T03:35:19Z
13452,PRR_kwDOCCum186taxvC,edison1105,APPROVED,,2025-06-09T09:24:30Z
13452,PRR_kwDOCCum186vLobl,edison1105,APPROVED,,2025-06-18T12:45:39Z
13456,PRR_kwDOCCum186tkunI,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 5966fec206b689b970a937e89cbbd34a12ed013b and 8932f3f1889f2022d4d5d1395da74e6839c5c6bf.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/runtime-core/__tests__/components/Suspense.spec.ts` (2 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (4)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed
* GitHub Check: test / unit-test-windows

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/runtime-core/__tests__/components/Suspense.spec.ts (2)</summary>

`20-21`: **LGTM: Import additions are correct.**

The `renderList` and `renderSlot` imports are properly added and necessary for the new test case implementation.

---

`2167-2241`: **Well-designed test for dynamic async dependency management.**

This test effectively validates the fix for issue #13453 by simulating the scenario where:
1. New async dependencies are added during Suspense patching
2. Existing dependencies are removed 
3. The Suspense boundary correctly handles the transition without prematurely resolving

The test logic properly covers the edge case mentioned in the PR objectives where new vnodes may contain async components during the unmounting process.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-10T06:15:01Z
13462,PRR_kwDOCCum186txOlH,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (4)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/template/templateUtils.ts (1)</summary><blockquote>

`22-31`: **`preserveTilde` flag integrates cleanly – consider future-proofing with WHATWG URL**

The early-return logic is solid and preserves existing behaviour when the flag is falsy ✅.  
However, `url.parse` (the legacy API behind `uriParse`) is deprecated in recent Node versions; the WHATWG `URL` constructor is now the recommended API. Migrating at some point would avoid deprecation warnings and give stricter parsing.

No action required for this PR, but adding a tech-debt ticket now will save churn later.

</blockquote></details>
<details>
<summary>packages/compiler-sfc/src/template/transformAssetUrl.ts (1)</summary><blockquote>

`123-129`: **Redundant parse on `options.base`**

`parseUrl` is executed twice in the same branch – once for `attr.value.content` and again for `options.base`. The second invocation is unavoidable, but you could memoise it locally to avoid reparsing `base` for every attribute.

```diff
-const base = parseUrl(options.base, options.preserveTilde)
+const baseUrl = parseUrl(options.base, options.preserveTilde)
```
Minor perf win, feel free to ignore.

</blockquote></details>
<details>
<summary>packages/compiler-sfc/__tests__/templateTransformAssetUrl.spec.ts (1)</summary><blockquote>

`103-111`: **👍  Test covers both `~/` and `~` alias forms**

Snapshot ensures both syntaxes compile. Consider asserting the generated import path explicitly (e.g. contains `import _imports_0 from '~/app/bar.png'`) to make the test more intention-revealing.

</blockquote></details>
<details>
<summary>packages/compiler-sfc/__tests__/templateTransformSrcset.spec.ts (1)</summary><blockquote>

`102-111`: **Good parity with asset-url tests**

Mirrors the asset-url testcase; same note about being explicit applies here.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between cdffaf6b9efce2c52635714e8e2d7480737c6b50 and b896fd471fecd4c16541387b96f2d8a0ffdd0bf7.

</details>

<details>
<summary>⛔ Files ignored due to path filters (2)</summary>

* `packages/compiler-sfc/__tests__/__snapshots__/templateTransformAssetUrl.spec.ts.snap` is excluded by `!**/*.snap`
* `packages/compiler-sfc/__tests__/__snapshots__/templateTransformSrcset.spec.ts.snap` is excluded by `!**/*.snap`

</details>

<details>
<summary>📒 Files selected for processing (5)</summary>

* `packages/compiler-sfc/__tests__/templateTransformAssetUrl.spec.ts` (1 hunks)
* `packages/compiler-sfc/__tests__/templateTransformSrcset.spec.ts` (1 hunks)
* `packages/compiler-sfc/src/template/templateUtils.ts` (1 hunks)
* `packages/compiler-sfc/src/template/transformAssetUrl.ts` (2 hunks)
* `packages/compiler-sfc/src/template/transformSrcset.ts` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (2)</summary>

<details>
<summary>packages/compiler-sfc/src/template/transformSrcset.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/template/templateUtils.ts (1)</summary>

* `parseUrl` (22-32)

</details>

</blockquote></details>
<details>
<summary>packages/compiler-sfc/src/template/transformAssetUrl.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/template/templateUtils.ts (1)</summary>

* `parseUrl` (22-32)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (4)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed
* GitHub Check: test / unit-test-windows

</details>

<details>
<summary>🔇 Additional comments (3)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/template/transformAssetUrl.ts (2)</summary>

`35-41`: **Option contract extended correctly – please bubble the docs**

`preserveTilde` is added with a clear JSDoc and default. Looks good.  
Remember to surface the new option in user-facing docs / typings packages (`@vue/compiler-sfc`).

---

`46-47`: **Default updated – snapshot tests already cover it**

No issues spotted.

</details>
<details>
<summary>packages/compiler-sfc/src/template/transformSrcset.ts (1)</summary>

`111-112`: **`preserveTilde` correctly forwarded**

Passing `options.preserveTilde` keeps behaviour consistent with `transformAssetUrl`. Good catch.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-11T01:05:33Z
13463,PRR_kwDOCCum186t4JHN,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/vue/jsx-runtime/index.d.ts (1)</summary><blockquote>

`4-8`: **Update the comment block to mention `jsxs`.**

The documentation above still talks only about `jsx / jsxDEV`. Adding `jsxs` to the comment keeps the declaration self-documenting and avoids confusion for consumers skimming the header.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between cdffaf6b9efce2c52635714e8e2d7480737c6b50 and a78d3df0bfcac01ec51ccb7926d6d9f897f6065c.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/vue/jsx-runtime/index.d.ts` (1 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (6)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed
* GitHub Check: test / unit-test-windows
* GitHub Check: test / e2e-test
* GitHub Check: continuous-release

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/vue/jsx-runtime/index.d.ts (1)</summary>

`9-9`: <details>
<summary>✅ Verification successful</summary>

**Types added—verify runtime export exists to avoid mismatched runtime errors.**

The extra alias `h as jsxs` is the right fix for the type-checker 👍.  
Please double-check that the compiled runtime module (`packages/vue/jsx-runtime/index.js` / dist build) actually exports `jsxs`; otherwise users will get a runtime `Property 'jsxs' does not exist` despite the typings compiling fine.


You can run the quick check below:

---

🏁 Script executed:

```shell
#!/usr/bin/env bash
# Look for an exported `jsxs` symbol in the built runtime.
fd -e js -E '*.d.ts' 'jsx-runtime' \
  | xargs -I{} grep -nH ""jsxs"" {}
```

Length of output: 68

---

🏁 Script executed:

```shell
#!/usr/bin/env bash
# Locate compiled JS files in jsx-runtime and verify `jsxs` export
set -euo pipefail

# Find all .js files in the jsx-runtime package
js_files=$(fd -e js packages/vue/jsx-runtime)

if [[ -z ""$js_files"" ]]; then
  echo ""No JS files found in packages/vue/jsx-runtime""
  exit 1
fi

echo ""JS runtime files found:""
echo ""$js_files""
echo

echo ""Searching for any occurrences of 'jsxs' in these files...""
echo ""$js_files"" | xargs -r grep -nH ""jsxs"" || echo ""❌ No occurrences of 'jsxs' found in compiled JS.""

echo
echo ""Searching specifically for an export statement of 'jsxs'...""
grep -R ""export.*jsxs"" -n packages/vue/jsx-runtime || echo ""❌ No 'export .* jsxs' found.""
```

Length of output: 470

---

🏁 Script executed:

```shell
#!/usr/bin/env bash
set -euo pipefail

echo ""Looking for any occurrence of 'jsxs' in the compiled runtime sources under packages/vue/jsx-runtime…""
if [ -d packages/vue/jsx-runtime ]; then
  grep -R ""jsxs"" -n packages/vue/jsx-runtime || echo ""❌ No occurrences of 'jsxs' found in packages/vue/jsx-runtime""
else
  echo ""❌ Directory packages/vue/jsx-runtime not found""
  exit 1
fi
```

Length of output: 580

---



</details>

**Confirmed: `jsxs` is exported in the runtime build**  

Verified in both CommonJS and ESM outputs—no further action required to avoid mismatched runtime errors.

Files and locations:
- packages/vue/jsx-runtime/index.js (line 13):  
  `exports.jsxs = jsx`
- packages/vue/jsx-runtime/index.mjs (line 12):  
  `export { Fragment, jsx, jsx as jsxs, jsx as jsxDEV }`

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-11T13:32:21Z
13466,PRR_kwDOCCum186vbPSX,LittleSound,APPROVED,,2025-06-19T13:59:31Z
13466,PRR_kwDOCCum186vb01P,zhiyuanzmj,APPROVED,,2025-06-19T14:40:34Z
13467,PRR_kwDOCCum186uIjJz,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>scripts/build.js (1)</summary><blockquote>

`165-165`: **Use `path.join` for constructing file paths**  
Consider replacing string interpolation with `path.join(pkgDir, 'package.json')` for better cross-platform compatibility:  
```diff
- fs.readFileSync(`${pkgDir}/package.json`, 'utf-8')
+ fs.readFileSync(path.join(pkgDir, 'package.json'), 'utf-8')
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between cdffaf6b9efce2c52635714e8e2d7480737c6b50 and 46e083e6f35233bf465806b99efc6faaf6590431.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `scripts/build.js` (2 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>scripts/build.js (4)</summary><blockquote>

<details>
<summary>rollup.config.js (1)</summary>

* `pkg` (45-45)

</details>
<details>
<summary>scripts/release.js (2)</summary>

* `pkg` (81-83)
* `pkg` (457-457)

</details>
<details>
<summary>scripts/dev.js (2)</summary>

* `pkg` (63-63)
* `targets` (43-43)

</details>
<details>
<summary>scripts/utils.js (3)</summary>

* `pkg` (18-18)
* `targets` (9-24)
* `targets` (9-24)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>scripts/build.js (2)</summary>

`173-173`: **Unified `fs.existsSync` usage**  
Direct import of `existsSync` has been replaced with `fs.existsSync`, aligning with the single `fs` import and eliminating redundant imports.

---

`236-236`: **Consistent `fs.existsSync` in `checkFileSize`**  
Switched to `fs.existsSync` instead of a direct import; this change maintains consistency in module usage.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-12T14:31:28Z
13467,PRR_kwDOCCum186uJbmB,KazariEX,APPROVED,,2025-06-12T15:31:24Z
13469,PRR_kwDOCCum186uPRwb,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 4fdb550e9ee05062ae4587904eef9afb97b005c2 and 61d75e1ab925f98c5450a9983cf50a770cbd038e.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/runtime-core/__tests__/componentSlots.spec.ts` (2 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (5)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed
* GitHub Check: test / e2e-test
* GitHub Check: test / unit-test-windows

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-13T02:20:40Z
13470,PRR_kwDOCCum186uPfmp,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages-private/sfc-playground/src/App.vue (1)</summary><blockquote>

`144-146`: **Props wired correctly; consider fall-back UI for unsupported versions**  

`showSsrOutput` is bound to `useSSRMode` (a `ref<boolean>`), and `showOpenSourceMap` is statically enabled—both match the API introduced in `@vue/repl@4.6.0`. Looks good.

One optional guard: if someone opens the playground with an older cached bundle of `@vue/repl` the new props will be unknown and Vue will emit warnings. A simple defensive pattern:

```diff
-  <Repl
+  <Repl
+    v-bind=""{
+      showSsrOutput: useSSRMode,
+      showOpenSourceMap: true
+    }""
```

keeps template clean and can be wrapped in a version check if needed later.

Otherwise, no issues.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between a6e2032f43dafa0e9394cd5d186a920c14906c4d and 4ec93badbacd53ed236923c4c3bb7fe7a6280b0b.

</details>

<details>
<summary>⛔ Files ignored due to path filters (1)</summary>

* `pnpm-lock.yaml` is excluded by `!**/pnpm-lock.yaml`

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages-private/sfc-playground/package.json` (1 hunks)
* `packages-private/sfc-playground/src/App.vue` (1 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (4)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed
* GitHub Check: test / unit-test-windows

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages-private/sfc-playground/package.json (1)</summary>

`16-16`: <details>
<summary>❓ Verification inconclusive</summary>

**Verify lock-file & compatibility with new `@vue/repl` props**  

Bumping to `^4.6.0` is required for the new `showSsrOutput` / `showOpenSourceMap` props, but please double-check:

1. `pnpm-lock.yaml` / `package-lock.json` / `yarn.lock` is updated so CI doesn’t pull `4.5.x`.
2. `@vue/repl@4.6.0` keeps the same peer-dependency range for `vue`—otherwise the local `workspace:*` alias might be rejected.
3. No breaking API changes were introduced between 4.5.x → 4.6.0 that affect existing playground behaviour.

If you need a quick diff:

---

🏁 Script executed:

```shell
npm diff @vue/repl@4.5.1 @vue/repl@4.6.0 | less
```

Length of output: 871

---

🏁 Script executed:

```shell
#!/bin/bash
set -e

echo ""🔍 Searching lockfiles for @vue/repl version...""
rg ""@vue/repl@"" -n pnpm-lock.yaml package-lock.json yarn.lock || echo ""No @vue/repl entries found in lockfiles.""

echo
echo ""📦 Peer dependencies for @vue/repl@4.5.1:""
npm view @vue/repl@4.5.1 peerDependencies --json || echo ""Fetch failed for 4.5.1""

echo
echo ""📦 Peer dependencies for @vue/repl@4.6.0:""
npm view @vue/repl@4.6.0 peerDependencies --json || echo ""Fetch failed for 4.6.0""
```

Length of output: 763

---

🏁 Script executed:

```shell
#!/bin/bash
set -e

echo ""🔍 Peer dependency for 'vue' in @vue/repl@4.5.1:""
npm view @vue/repl@4.5.1 peerDependencies.vue --json || echo ""none""

echo
echo ""🔍 Peer dependency for 'vue' in @vue/repl@4.6.0:""
npm view @vue/repl@4.6.0 peerDependencies.vue --json || echo ""none""
```

Length of output: 352

---



</details>

**Lockfile & Peer-Dependency Check**

- ✅ pnpm-lock.yaml now includes `@vue/repl@4.6.0` (no leftover 4.5.x entries).  
- ✅ Running `npm view @vue/repl@4.6.0 peerDependencies` shows the same `vue` range as 4.5.x (no change).  
- 🧐 Although this is a minor bump (no semver-major), please give the playground a quick smoke test to ensure `showSsrOutput` / `showOpenSourceMap` work as expected and that no unintended API changes slipped in:

```shell
npm diff --diff @vue/repl@4.5.1 --diff @vue/repl@4.6.0
```

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-13T03:02:12Z
13478,PRR_kwDOCCum186ulP7k,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (2)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (2)</summary><blockquote>

`231-233`: **Consider clarifying lifecycle flags & guarding against stale `_dirty`**

`_patching` + `_dirty` are clear, but after an *out-of-patch* `_update()` call (e.g. prop changed via DOM API), `_dirty` stays `true`.  
While harmless, a permanently-true flag is misleading when inspecting instances and invites future misuse.

```diff
private _update() {
  const vnode = this._createVNode()
  if (this._app) vnode.appContext = this._app._context
  render(vnode, this._root)
+  // reset bookkeeping when we are outside a batched patch cycle
+  if (!this._patching) this._dirty = false
}
```

A one-liner reset keeps semantics tight.

---

`494-502`: **Minor: avoid redundant `_dirty = true` when immediate update fires**

When `shouldUpdate` is `true` and `_update()` is called synchronously, there is no benefit in keeping `_dirty` flagged.

```diff
if (val !== this._props[key]) {
-  this._dirty = true
+  // mark dirty only when the render will be deferred
+  if (!shouldUpdate || this._patching) this._dirty = true
```

Keeps the flag strictly associated with *deferred* work.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between c91afec9c236848a9f2f2603f0efb36c513cd1d4 and d54f6c8063f1e450981a8741226e6a8c4fed5401.

</details>

<details>
<summary>📒 Files selected for processing (4)</summary>

* `packages/runtime-core/src/component.ts` (1 hunks)
* `packages/runtime-core/src/renderer.ts` (1 hunks)
* `packages/runtime-dom/__tests__/customElement.spec.ts` (1 hunks)
* `packages/runtime-dom/src/apiCustomElement.ts` (4 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/runtime-core/src/renderer.ts (1)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (1)</summary>

* `VueElement` (202-710)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>🔇 Additional comments (4)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/component.ts (1)</summary>

`1273-1280`: **Custom-element patch-lifecycle hooks exposed – looks good**

The addition of `_beginPatch()` / `_endPatch()` in the `ComponentCustomElementInterface` aligns with the renderer changes and the concrete implementation in `VueElement`.  
No issues spotted – signature and visibility (`@internal`) are appropriate.

</details>
<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (2)</summary>

`460-468`: **`shouldUpdate` computation may skip updates if instance not yet mounted**

Inside the generated setter we pass `!this._patching` to `_setProp`.  
During pre-mount cycles (e.g. attributes parsed before `connectedCallback`), `this._instance` is still `null`, so `_setProp` will:

1. mark `_dirty`,
2. evaluate `shouldUpdate === true`,
3. _not_ call `_update()` because `this._instance` is falsy,
4. leave `_dirty` set to `true`.

If the element mounts without going through a renderer patch cycle (`_beginPatch/_endPatch`), the first render happens with stale props.

Please double-check that all early attribute/property writes are followed by either `_beginPatch/_endPatch` *or* a later setter invocation so an update is eventually fired.

---

`676-693`: **Great addition – batching hook integrates cleanly with renderer**

The `_beginPatch / _endPatch` pair is straightforward and the `finally{}` invocation on the renderer side guarantees symmetry even on thrown errors – well done.

</details>
<details>
<summary>packages/runtime-dom/__tests__/customElement.spec.ts (1)</summary>

`477-565`: **Solid coverage for batched prop patching**

The two new test blocks exercise both sync and async scenarios and verify:

• DOM output  
• watcher invocation counts  
• no redundant updates on identical prop sets  

This should reliably catch regressions in the new batching logic. 👍  



Also applies to: 566-660

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-15T06:35:37Z
13478,PRR_kwDOCCum186uqroG,edison1105,COMMENTED,,2025-06-16T01:07:48Z
13478,PRR_kwDOCCum186urAer,alex-snezhko,COMMENTED,,2025-06-16T02:53:46Z
13478,PRR_kwDOCCum186urE7y,alex-snezhko,COMMENTED,,2025-06-16T03:15:39Z
13478,PRR_kwDOCCum186urFAu,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-core/src/renderer.ts (1)</summary><blockquote>

`624-627`: **Remove redundant `!!` and duplicate casts for clearer intent**

`customElement` is derived solely to hold either the element reference or `null`; the double-negation adds no value and forces an unnecessary boolean conversion.  
Inlining the element reference also eliminates the repeated `as VueElement` cast.

```diff
-      const customElement = !!(n1.el && (n1.el as VueElement)._isVueCE)
-        ? (n1.el as VueElement)
-        : null
+      const el = n1.el as VueElement | null
+      const customElement = el && el._isVueCE ? el : null
```

This aligns with the Biome lint recommendation and slightly improves readability.

<details>
<summary>🧰 Tools</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

[error] 624-624: Avoid redundant double-negation.

It is not necessary to use double-negation when a value will already be coerced to a boolean.
Unsafe fix: Remove redundant double-negation


(lint/complexity/noExtraBooleanCast)

</details>

</details>

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between f695bc3288b5f12c7768641913f76f6a17810548 and 1354a625edd22750634dba924e00690483300424.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/runtime-core/src/renderer.ts` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/runtime-core/src/renderer.ts (1)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/apiCustomElement.ts (1)</summary>

* `VueElement` (202-710)

</details>

</blockquote></details>

</details><details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/runtime-core/src/renderer.ts</summary>

[error] 624-624: Avoid redundant double-negation.

It is not necessary to use double-negation when a value will already be coerced to a boolean.
Unsafe fix: Remove redundant double-negation


(lint/complexity/noExtraBooleanCast)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (4)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed
* GitHub Check: test / unit-test-windows

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-16T03:16:03Z
13482,PRR_kwDOCCum186uu3-1,coderabbitai,COMMENTED,"**Actionable comments posted: 2**

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 532cfae34996676846bf511e1f0f0bf963186e7b and 10f36c8633cf1b53f7904f5922d2f915c3dcea04.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/shared/src/toDisplayString.ts` (2 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-16T10:24:00Z
13482,PRR_kwDOCCum186uvyw2,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/shared/src/toDisplayString.ts (1)</summary><blockquote>

`20-21`: **Tighten the helper’s typing & follow house style**

`isVNodeLike` works, but we can give callers a more useful type-guard and stay consistent with the 2-space / spaced-keyword style used elsewhere in this file.

```diff
-const isVNodeLike = (val: unknown): boolean =>
-  !!(val && (val as any).__v_isVNode === true)
+const isVNodeLike = (val: unknown): val is { __v_isVNode: true } =>
+  !!(val && (val as any).__v_isVNode === true)
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 6848b65f0dd61d1bf977242544746eae415526d0 and c8b7edf590d62983eb8d4946dff2ade851f1ca12.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/shared/src/toDisplayString.ts` (1 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-16T11:45:42Z
13487,PRR_kwDOCCum186u9dq9,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-ssr/src/transforms/ssrVModel.ts (1)</summary><blockquote>

`68-78`: **Duplicate traversal logic – consider extracting a shared helper**

The new block repeats almost exactly the traversal logic that already exists in `processChildren` (lines 174-185).  Duplicating this walker increases maintenance cost and the risk of future divergence.

A small refactor can DRY the code and keep the recursion rules in one place:

```diff
-    } else if (plainNode.tag === 'optgroup') {
-      plainNode.children.forEach(option => {
-        if (option.type === NodeTypes.ELEMENT) {
-          processOption(option as PlainElementNode)
-        } else if (option.type === NodeTypes.FOR) {
-          option.children.forEach(c => processOption(c as PlainElementNode))
-        } else if (option.type === NodeTypes.IF) {
-          option.branches.forEach(b =>
-            b.children.forEach(c => processOption(c as PlainElementNode)),
-          )
-        }
-      })
+    } else if (plainNode.tag === 'optgroup') {
+      // re-use the generic walker so the traversal rules stay in one place
+      processChildren(plainNode.children)
     }
```

That change would require hoisting `processChildren` outside the `<select>` branch (or defining a module-level helper) but would eliminate the duplicate code and keep the traversal strategy consistent.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 532cfae34996676846bf511e1f0f0bf963186e7b and 2b4aa83fe2858b21be320f11c44d01b964ce2591.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/compiler-ssr/__tests__/ssrVModel.spec.ts` (1 hunks)
* `packages/compiler-ssr/src/transforms/ssrVModel.ts` (1 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (4)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed
* GitHub Check: test / unit-test-windows

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-ssr/__tests__/ssrVModel.spec.ts (1)</summary>

`170-225`: **👍 Great addition of edge-case coverage**

The two new cases (`v-for` and `v-if` inside `<optgroup>`) hit the exact scenarios the bug fix targets and safeguard against regressions. Snapshot assertions also verify that `selected` handling and text interpolation remain correct.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-17T11:53:58Z
13487,PRR_kwDOCCum186u-02g,skirtles-code,COMMENTED,"Should we also handle nesting? e.g. `v-if` inside `v-for`?

- [Playground](https://deploy-preview-13487--vue-sfc-playground.netlify.app/#__SSR__eNqFU01v2zAM/SucLt6ANCnW7itIBmxDD9thG7ail6oH16FTtbIkSLKbwvB/LyXFiZ0WrS9P4numHkmpZd+MmTY1sjlbuMIK48Ghr81XrkRltPXQgsUSOiitriAjacYVV4VWzoO/wYtc1gjLIHqbfTg+zt71ZC5lJN2Wvcw2r3zZBLL3lILgJMFpgpCX4GOCTwk+J/hCcEWHLmbJPzmnjcfKyNwj7QAWK9HEBS0dSiw8NEeVXqFcctbXwNlWQiJtvNAKmhAPEnSe6ACLWeJG2rXVtQGZX8eEcTfIRprezT4E5KDUluRGOyeu5baRQu37xtlQP7/Dh0P5UDE4b1DBkSifnPFmuUxt4wzmfY0HeUfZANoWxjm6bnTcYVdCaDSCnSp2px/GLE0jDWmWpjT6kU2Yd3SdSrGe3jqt6Jq2QcxZoSsjJNo/8WDq1RwiEzjqoL7/FWPe1jjp48UNFnfPxG/dJsQ4+2vRoW2o/h3nc7tGmn6gz/7/xg2tdyTdoVqS+gXyHzot6+Axyb7XakW2B7ro9md8bEKtz93ZxqNyfVHBaFB2Uc8ZPcAfL5S+t3syPY3/cdWx7hFcIzrg)
 
Maybe `processChildren` could be moved to a scope where it can be called from `processOption`? I think that would handle the recursion and remove the duplication of the `v-for`/`v-if` logic.",2025-06-17T13:32:55Z
13491,PRR_kwDOCCum186vHUQL,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts (1)</summary><blockquote>

`1048-1054`: **Minor style improvement – use optional chaining**

Static-analysis already hints at it.  The manual `excluded && …` can be trimmed:

```diff
-          if (
-            excluded &&
-            excluded.some(p => isMatch(containingFile, getPattern(base, p)))
-          ) {
+          if (
+            excluded?.some(p => isMatch(containingFile, getPattern(base, p)))
+          ) {
             continue
           }
```

Touches no logic, just terser & consistent with the `included?.some` above.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 532cfae34996676846bf511e1f0f0bf963186e7b and 5fab826ea20b867d950adce7d7a55c027ea6f7e4.

</details>

<details>
<summary>📒 Files selected for processing (2)</summary>

* `packages/compiler-sfc/__tests__/compileScript/resolveType.spec.ts` (1 hunks)
* `packages/compiler-sfc/src/script/resolveType.ts` (2 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts</summary>

[error] 1052-1053: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/__tests__/compileScript/resolveType.spec.ts (1)</summary>

`1158-1195`: **👍 Robust regression test**

The new case accurately reproduces #13484 and guards the compiler against future regressions in `${configDir}` handling.  No concerns.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-18T06:45:34Z
13491,PRR_kwDOCCum186vHXY3,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (2)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts (2)</summary><blockquote>

`1032-1039`: **Minor refactor opportunity: lift helper + version parsing out of the loop**

`const [major, minor] = …` and `function getPattern…` are recreated every time `resolveWithTS` is invoked. They only depend on `ts.versionMajorMinor` and `configPath`, both of which are invariant during a single compiler run. Hoisting them to the outer scope of `resolveWithTS` (or caching the parsed tuple) would avoid unnecessary re-allocation and keep the loop body slimmer.

Not critical, just a readability / micro-perf improvement.

---

`1050-1055`: **Use optional chaining to streamline `excluded` check**

Small readability tweak: the explicit null check can be replaced with optional chaining.

```diff
-          if (
-            excluded &&
-            excluded.some(p => isMatch(containingFile, getPattern(base, p)))
-          ) {
+          if (
+            excluded?.some(p => isMatch(containingFile, getPattern(base, p)))
+          ) {
```

No behavioural change; simply reduces nesting.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 5fab826ea20b867d950adce7d7a55c027ea6f7e4 and 1024d532ba0dabdcf959df4c3a71de1744b1e5d8.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/compiler-sfc/src/script/resolveType.ts` (2 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/script/utils.ts (2)</summary>

* `normalizePath` (107-109)
* `joinPaths` (111-112)

</details>

</blockquote></details>

</details><details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts</summary>

[error] 1053-1054: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts (1)</summary>

`1032-1038`: **Version-guard correctly future-proofed — looks good**

The new `supportsConfigDir` check (`major > 5 || (major === 5 && minor >= 5)`) removes the earlier logical gap for TS 6.x+ and resolves the concern raised in the previous review.  
Implementation is clear and side-effect-free.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-18T06:50:46Z
13491,PRR_kwDOCCum186vHYs3,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (2)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts (2)</summary><blockquote>

`1032-1039`: **Protect against pre-release version strings & compute once**

Good call switching to `major > 5 || (major === 5 && minor >= 5)` – it future-proofs the guard.  
Two minor nits:

1. `Number('5.5-beta')` becomes `NaN`, disabling the feature for nightly/beta drops.  
   Use `parseInt` (or a regex) to strip non-digits first.

2. `supportsConfigDir` is recalculated on every `getPattern` invocation although it’s invariant – lift it outside the arrow for micro clarity.

```diff
-const [major, minor] = ts.versionMajorMinor.split('.').map(Number)
+const [majorRaw, minorRaw] = ts.versionMajorMinor.split('.')
+const major = parseInt(majorRaw, 10)
+const minor = parseInt(minorRaw, 10)

-const getPattern = (base: string, p: string) => {
-  // ts 5.5+ supports ${configDir} in paths
-  const supportsConfigDir = major > 5 || (major === 5 && minor >= 5)
+// ts 5.5+ supports ${configDir} in paths
+const supportsConfigDir = major > 5 || (major === 5 && minor >= 5)
+
+const getPattern = (base: string, p: string) => {
```

---

`1049-1055`: **Use optional chaining to quiet lint & improve readability**

Biome flags this pattern check; a terse optional-chain keeps the meaning while removing an explicit null-guard:

```diff
-        if (
-          (!included && (!base || containingFile.startsWith(base))) ||
-          included?.some(p => isMatch(containingFile, getPattern(base, p)))
-        ) {
+        if (
+          (!included && (!base || containingFile.startsWith(base))) ||
+          included?.some(p => isMatch(containingFile, getPattern(base, p)))
+        ) {
           if (
-            excluded &&
-            excluded.some(p => isMatch(containingFile, getPattern(base, p)))
+            excluded?.some(p =>
+              isMatch(containingFile, getPattern(base, p)),
+            )
           ) {
```

This is purely stylistic – feel free to keep the existing guard if you prefer explicit checks.

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 1024d532ba0dabdcf959df4c3a71de1744b1e5d8 and 7588b4dacf309c1853937df3eebc995826ffee36.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/compiler-sfc/src/script/resolveType.ts` (2 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-sfc/src/script/utils.ts (2)</summary>

* `normalizePath` (107-109)
* `joinPaths` (111-112)

</details>

</blockquote></details>

</details><details>
<summary>🪛 Biome (1.9.4)</summary>

<details>
<summary>packages/compiler-sfc/src/script/resolveType.ts</summary>

[error] 1053-1054: Change to an optional chain.

Unsafe fix: Change to an optional chain.


(lint/complexity/useOptionalChain)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: continuous-release
* GitHub Check: test / e2e-test
* GitHub Check: test / unit-test-windows

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-18T06:53:05Z
13492,PRR_kwDOCCum186vby43,zhiyuanzmj,APPROVED,,2025-06-19T14:38:29Z
13494,PRR_kwDOCCum186vNSt8,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/modules/events.ts (1)</summary><blockquote>

`86-92`: **Adopt monotonic timer for invoker attachment timestamps**  
The new `getNow` correctly uses `performance.now()` with a per-tick cache to replace `Date.now()`, ensuring monotonic behavior and reducing calls.  
   
Consider splitting the comma‐operator expression into two statements for clarity:
```diff
- const getNow = () =>
-   cachedNow || (p.then(() => (cachedNow = 0)), (cachedNow = performance.now()))
+ const getNow = () => {
+   if (cachedNow) return cachedNow
+   p.then(() => { cachedNow = 0 })
+   cachedNow = performance.now()
+   return cachedNow
+ }
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between 5f8314cb7f4b25efcc189987639bd9ac7f171926 and 0b2270d4170f956ebdc848290b66d7b1b34d31d7.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/runtime-dom/src/modules/events.ts` (2 hunks)

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/runtime-dom/src/modules/events.ts (1)</summary>

`110-113`: **Assign monotonic timestamps to events on first dispatch**  
Replacing `Date.now()` with `performance.now()` for `e._vts` guarantees that event timestamps aren’t affected by system clock changes. Implementation is correct.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-18T14:32:44Z
13498,PRR_kwDOCCum186vfm_d,edison1105,COMMENTED,,2025-06-20T01:12:44Z
13500,PRR_kwDOCCum186vbwLp,zhiyuanzmj,APPROVED,,2025-06-19T14:35:15Z
13519,PRR_kwDOCCum186wedp5,LittleSound,APPROVED,LGTM,2025-06-26T06:20:53Z
13519,PRR_kwDOCCum186weylP,zhiyuanzmj,APPROVED,,2025-06-26T06:44:42Z
13520,PRR_kwDOCCum186wfRjK,zhiyuanzmj,APPROVED,,2025-06-26T07:19:02Z
13520,PRR_kwDOCCum186wfR9o,LittleSound,APPROVED,,2025-06-26T07:19:30Z
13523,PRR_kwDOCCum186wCJoT,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>README.md (1)</summary><blockquote>

`1-2`: **Remove informal greeting to keep README professional & consistent**

The greeting feels out of place, disrupts the existing heading hierarchy, and doesn't add actionable value.  
Either delete these two lines or convert them into a proper heading/introduction if there is a specific purpose.

```diff
-Hi there
-
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between ba391f5fdf5d84bfacaca6a2a3e7057fc99efa34 and 3f5254146f4a7bdae34a3ce5ff13390c6315da09.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `README.md` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🪛 LanguageTool</summary>

<details>
<summary>README.md</summary>

[typographical] ~1-~1: This greeting should probably end with a comma.
Context: Hi there  # vuejs/core [![npm](https://img.shiel...

(EN_GREETING_WITHOUT_COMMA)

</details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-24T11:17:21Z
13525,PRR_kwDOCCum186wezfW,LittleSound,APPROVED,,2025-06-26T06:45:47Z
13533,PRR_kwDOCCum186w0Btj,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (4)</summary><blockquote>

<details>
<summary>packages/reactivity/src/effectScope.ts (4)</summary><blockquote>

`47-47`: **Fix formatting: add space after `if`.**


```diff
-      if(activeEffectScope.scopesTail) {
+      if (activeEffectScope.scopesTail) {
```

---

`65-65`: **Fix formatting: add space after `for`.**


```diff
-      for(let child = this.scopes; child != undefined; child = child.nextEffectScope) {
+      for (let child = this.scopes; child != undefined; child = child.nextEffectScope) {
```

---

`82-82`: **Fix formatting: add space after `for`.**


```diff
-        for(let child = this.scopes; child != undefined; child = child.nextEffectScope) {
+        for (let child = this.scopes; child != undefined; child = child.nextEffectScope) {
```

---

`143-143`: **Fix formatting: add space after `for`.**


```diff
-      for(let child = this.scopes; child != undefined; child = child.nextEffectScope) {
+      for (let child = this.scopes; child != undefined; child = child.nextEffectScope) {
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between ba391f5fdf5d84bfacaca6a2a3e7057fc99efa34 and 00ddb5be0e6a51c3c3122578b893ebec0a1f15fa.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/reactivity/src/effectScope.ts` (4 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (1)</summary><blockquote>

<details>
<summary>packages/reactivity/src/effectScope.ts (1)</summary>

`35-42`: **LGTM! Well-structured doubly-linked list properties.**

The property changes correctly implement the doubly-linked list structure with head/tail pointers and sibling navigation pointers.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-27T12:34:11Z
13534,PRR_kwDOCCum186w0SlG,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (5)</summary><blockquote>

<details>
<summary>packages/reactivity/src/effectScope.ts (5)</summary><blockquote>

`38-39`: **Clarify the comment for linked list pointers.**

The comment ""sibling scope"" is misleading. These properties represent sibling nodes in the parent's child scope list, not sibling scopes at the same hierarchy level.

Apply this diff to clarify the documentation:

```diff
   /**
-   *  sibling scope
+   * Pointers to adjacent child scopes in the parent's linked list
+   * @internal
    */
```

---

`47-47`: **Fix formatting: Add space after `if`.**


Apply this diff to fix the formatting:

```diff
-      if(activeEffectScope.scopesTail) {
+      if (activeEffectScope.scopesTail) {
```

---

`64-67`: **Clean up unused variables and fix formatting.**

The variables `i, l` are no longer used for scope iteration. Also, there's a missing space after `for` and inconsistent semicolon usage.

Apply this diff to clean up the code:

```diff
-      let i, l
-      for(let child = this.scopes; child != undefined; child = child.nextEffectScope) {
-        child.pause();
+      for (let child = this.scopes; child != undefined; child = child.nextEffectScope) {
+        child.pause()
       }
+      let i, l
       for (i = 0, l = this.effects.length; i < l; i++) {
```

---

`81-84`: **Clean up unused variables and fix formatting.**

Similar to the `pause()` method, the variables `i, l` are no longer used for scope iteration, and there are formatting issues.

Apply this diff to clean up the code:

```diff
-        let i, l
-        for(let child = this.scopes; child != undefined; child = child.nextEffectScope) {
-          child.resume();
+        for (let child = this.scopes; child != undefined; child = child.nextEffectScope) {
+          child.resume()
         }
+        let i, l
         for (i = 0, l = this.effects.length; i < l; i++) {
```

---

`156-160`: **Use strict equality operator.**

Use `===` instead of `==` for consistency and to avoid type coercion.

Apply this diff:

```diff
-        if(this.parent.scopes == this) {
+        if (this.parent.scopes === this) {
           this.parent.scopes = this.nextEffectScope;
         }
-        if(this.parent.scopesTail == this) {
+        if (this.parent.scopesTail === this) {
           this.parent.scopesTail = this.prevEffectScope;
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between ba391f5fdf5d84bfacaca6a2a3e7057fc99efa34 and a0b78f6322d58b9d77d47d0fd3960559283126b9.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/reactivity/src/effectScope.ts` (4 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-27T12:56:38Z
13535,PRR_kwDOCCum186w0jGu,coderabbitai,COMMENTED,"**Actionable comments posted: 0**

<details>
<summary>🧹 Nitpick comments (5)</summary><blockquote>

<details>
<summary>packages/reactivity/src/effectScope.ts (5)</summary><blockquote>

`37-42`: **Improve documentation for the linked list properties.**

The comment ""sibling scope"" is somewhat misleading. These properties implement a doubly linked list structure for child scope management.



Consider updating the documentation to be more descriptive:

```diff
   /**
-   *  sibling scope
+   * Pointer to the previous scope in the parent's linked list of child scopes
+   * @internal
    */
   prevEffectScope: EffectScope | undefined
+  /**
+   * Pointer to the next scope in the parent's linked list of child scopes  
+   * @internal
+   */
   nextEffectScope: EffectScope | undefined
```

---

`47-53`: **Fix semicolon consistency.**

There's inconsistent semicolon usage in the linked list insertion logic.



```diff
       if (activeEffectScope.scopesTail) {
-        this.prevEffectScope = activeEffectScope.scopesTail;
-        activeEffectScope.scopesTail.nextEffectScope = this;
-        activeEffectScope.scopesTail = this;
+        this.prevEffectScope = activeEffectScope.scopesTail
+        activeEffectScope.scopesTail.nextEffectScope = this
+        activeEffectScope.scopesTail = this
       } else {
-        activeEffectScope.scopes = activeEffectScope.scopesTail = this;
+        activeEffectScope.scopes = activeEffectScope.scopesTail = this
       }
```

---

`64-66`: **Fix semicolon consistency in pause() method.**



```diff
       for (let child = this.scopes; child != undefined; child = child.nextEffectScope) {
-        child.pause();
+        child.pause()
       }
```

---

`80-82`: **Fix semicolon consistency in resume() method.**



```diff
         for (let child = this.scopes; child != undefined; child = child.nextEffectScope) {
-          child.resume();
+          child.resume()
         }
```

---

`141-144`: **Fix semicolon consistency in stop() method.**



```diff
       for (let child = this.scopes; child != undefined; child = child.nextEffectScope) {
-        child.stop(true);
+        child.stop(true)
       }
-      this.scopes = this.scopesTail = undefined;
+      this.scopes = this.scopesTail = undefined
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between ba391f5fdf5d84bfacaca6a2a3e7057fc99efa34 and 1f63cf607f382652554ff15a0ac3c87863486628.

</details>

<details>
<summary>📒 Files selected for processing (1)</summary>

* `packages/reactivity/src/effectScope.ts` (4 hunks)

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (2)</summary><blockquote>

<details>
<summary>packages/reactivity/src/effectScope.ts (2)</summary>

`147-160`: **Well-implemented doubly linked list removal logic!**

The removal logic correctly handles all edge cases:
- Updates pointers of neighboring nodes
- Properly updates parent's head pointer when removing the first node
- Properly updates parent's tail pointer when removing the last node

This ensures the linked list remains consistent after removal.

---

`35-160`: **Excellent refactoring to improve performance!**

The refactoring from array-based child scope management to a doubly linked list is well-executed. This change provides O(1) insertion at the tail and O(1) removal operations, which should improve performance when dealing with many child scopes that are frequently created and destroyed.

The implementation correctly maintains all invariants of a doubly linked list and properly handles edge cases during removal.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-27T13:19:17Z
13539,PRR_kwDOCCum186w99-5,coderabbitai,COMMENTED,"**Actionable comments posted: 1**

<details>
<summary>🧹 Nitpick comments (1)</summary><blockquote>

<details>
<summary>packages/compiler-ssr/src/utils.ts (1)</summary><blockquote>

`68-80`: **Consider extracting createDynamicSelectExpression for performance.**

The function is defined inside `processOption` which could impact performance if this code path is executed frequently during compilation. Consider moving it to module scope.

Extract the function to module scope:
```diff
+function createDynamicSelectExpression(
+  context: TransformContext,
+  selectValue: ExpressionNode,
+  value: ExpressionNode,
+): ExpressionNode {
+  return createConditionalExpression(
+    createCallExpression(`Array.isArray`, [selectValue]),
+    createCallExpression(context.helper(SSR_LOOSE_CONTAIN), [
+      selectValue,
+      value,
+    ]),
+    createCallExpression(context.helper(SSR_LOOSE_EQUAL), [
+      selectValue,
+      value,
+    ]),
+  )
+}

 export function processOption(
   context: TransformContext,
   plainNode: PlainElementNode,
   selectValue: SelectValue,
 ): void {
   if (plainNode.tag === 'option') {
     if (plainNode.props.findIndex(p => p.name === 'selected') === -1) {
       const value = findValueBinding(plainNode)

-      function createDynamicSelectExpression(selectValue: ExpressionNode) {
-        return createConditionalExpression(
-          createCallExpression(`Array.isArray`, [selectValue]),
-          createCallExpression(context.helper(SSR_LOOSE_CONTAIN), [
-            selectValue,
-            value,
-          ]),
-          createCallExpression(context.helper(SSR_LOOSE_EQUAL), [
-            selectValue,
-            value,
-          ]),
-        )
-      }
```

Then update the calls to pass the required parameters:
```diff
-              : selectValue.type === 'dynamicValue'
-                ? createDynamicSelectExpression(selectValue.value)
+              : selectValue.type === 'dynamicValue'
+                ? createDynamicSelectExpression(context, selectValue.value, value)
```

</blockquote></details>

</blockquote></details>

<details>
<summary>📜 Review details</summary>

**Configuration used: CodeRabbit UI**
**Review profile: CHILL**
**Plan: Pro**


<details>
<summary>📥 Commits</summary>

Reviewing files that changed from the base of the PR and between ba391f5fdf5d84bfacaca6a2a3e7057fc99efa34 and 67ad86174df54b36b6ef6bb3716e93ffaf06be74.

</details>

<details>
<summary>📒 Files selected for processing (4)</summary>

* `packages/compiler-ssr/__tests__/ssrElement.spec.ts` (2 hunks)
* `packages/compiler-ssr/src/transforms/ssrTransformElement.ts` (5 hunks)
* `packages/compiler-ssr/src/transforms/ssrVModel.ts` (2 hunks)
* `packages/compiler-ssr/src/utils.ts` (1 hunks)

</details>

<details>
<summary>🧰 Additional context used</summary>

<details>
<summary>🧬 Code Graph Analysis (1)</summary>

<details>
<summary>packages/compiler-ssr/src/transforms/ssrVModel.ts (1)</summary><blockquote>

<details>
<summary>packages/compiler-ssr/src/utils.ts (1)</summary>

* `processSelectChildren` (41-57)

</details>

</blockquote></details>

</details>

</details>

<details>
<summary>⏰ Context from checks skipped due to timeout of 90000ms (3)</summary>

* GitHub Check: Redirect rules
* GitHub Check: Header rules
* GitHub Check: Pages changed

</details>

<details>
<summary>🔇 Additional comments (3)</summary><blockquote>

<details>
<summary>packages/compiler-ssr/src/transforms/ssrVModel.ts (1)</summary>

`21-21`: **Good refactoring to shared utilities.**

The extraction of `processSelectChildren` and `findValueBinding` to a shared utilities module improves code reusability and maintainability.



Also applies to: 130-133

</details>
<details>
<summary>packages/compiler-ssr/__tests__/ssrElement.spec.ts (1)</summary>

`76-228`: **Excellent test coverage for select element SSR.**

The comprehensive test suite covers all binding scenarios (dynamic value, static value, v-bind combinations) and validates both the generated code and runtime HTML output. This ensures the SSR behavior matches expectations.

</details>
<details>
<summary>packages/compiler-ssr/src/transforms/ssrTransformElement.ts (1)</summary>

`433-443`: **Smart generalization of the value binding check.**

The refactoring from `isTextareaWithValue` to `isTagWithValueBind` with a `targetTag` parameter elegantly supports both `<textarea>` and `<select>` elements without code duplication.

</details>

</blockquote></details>

</details>

<!-- This is an auto-generated comment by CodeRabbit for review status -->",2025-06-28T23:26:08Z
13539,PRR_kwDOCCum186w9-3d,alex-snezhko,COMMENTED,,2025-06-28T23:42:48Z
13539,PRR_kwDOCCum186w9-5T,coderabbitai,COMMENTED,,2025-06-28T23:43:20Z
